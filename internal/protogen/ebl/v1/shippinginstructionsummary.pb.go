// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: ebl/v1/shippinginstructionsummary.proto

package v1

import (
	v1 "github.com/cloudfresco/sc-dcsa/internal/protogen/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateShippingInstructionSummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingInstructionSummary *ShippingInstructionSummary `protobuf:"bytes,1,opt,name=shipping_instruction_summary,json=shippingInstructionSummary,proto3" json:"shipping_instruction_summary,omitempty"`
}

func (x *CreateShippingInstructionSummaryResponse) Reset() {
	*x = CreateShippingInstructionSummaryResponse{}
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShippingInstructionSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShippingInstructionSummaryResponse) ProtoMessage() {}

func (x *CreateShippingInstructionSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShippingInstructionSummaryResponse.ProtoReflect.Descriptor instead.
func (*CreateShippingInstructionSummaryResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_shippinginstructionsummary_proto_rawDescGZIP(), []int{0}
}

func (x *CreateShippingInstructionSummaryResponse) GetShippingInstructionSummary() *ShippingInstructionSummary {
	if x != nil {
		return x.ShippingInstructionSummary
	}
	return nil
}

type ShippingInstructionSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingInstructionSummaryD *ShippingInstructionSummaryD `protobuf:"bytes,1,opt,name=shipping_instruction_summary_d,json=shippingInstructionSummaryD,proto3" json:"shipping_instruction_summary_d,omitempty"`
	ShippingInstructionSummaryT *ShippingInstructionSummaryT `protobuf:"bytes,2,opt,name=shipping_instruction_summary_t,json=shippingInstructionSummaryT,proto3" json:"shipping_instruction_summary_t,omitempty"`
	CrUpdUser                   *v1.CrUpdUser                `protobuf:"bytes,3,opt,name=cr_upd_user,json=crUpdUser,proto3" json:"cr_upd_user,omitempty"`
	CrUpdTime                   *v1.CrUpdTime                `protobuf:"bytes,4,opt,name=cr_upd_time,json=crUpdTime,proto3" json:"cr_upd_time,omitempty"`
}

func (x *ShippingInstructionSummary) Reset() {
	*x = ShippingInstructionSummary{}
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShippingInstructionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingInstructionSummary) ProtoMessage() {}

func (x *ShippingInstructionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingInstructionSummary.ProtoReflect.Descriptor instead.
func (*ShippingInstructionSummary) Descriptor() ([]byte, []int) {
	return file_ebl_v1_shippinginstructionsummary_proto_rawDescGZIP(), []int{1}
}

func (x *ShippingInstructionSummary) GetShippingInstructionSummaryD() *ShippingInstructionSummaryD {
	if x != nil {
		return x.ShippingInstructionSummaryD
	}
	return nil
}

func (x *ShippingInstructionSummary) GetShippingInstructionSummaryT() *ShippingInstructionSummaryT {
	if x != nil {
		return x.ShippingInstructionSummaryT
	}
	return nil
}

func (x *ShippingInstructionSummary) GetCrUpdUser() *v1.CrUpdUser {
	if x != nil {
		return x.CrUpdUser
	}
	return nil
}

func (x *ShippingInstructionSummary) GetCrUpdTime() *v1.CrUpdTime {
	if x != nil {
		return x.CrUpdTime
	}
	return nil
}

type ShippingInstructionSummaryD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                              uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid4                           []byte `protobuf:"bytes,2,opt,name=uuid4,proto3" json:"uuid4,omitempty"`
	IdS                             string `protobuf:"bytes,3,opt,name=id_s,json=idS,proto3" json:"id_s,omitempty"`
	ShippingInstructionReference    string `protobuf:"bytes,4,opt,name=shipping_instruction_reference,json=shippingInstructionReference,proto3" json:"shipping_instruction_reference,omitempty"`
	DocumentStatus                  string `protobuf:"bytes,5,opt,name=document_status,json=documentStatus,proto3" json:"document_status,omitempty"`
	AmendToTransportDocument        string `protobuf:"bytes,6,opt,name=amend_to_transport_document,json=amendToTransportDocument,proto3" json:"amend_to_transport_document,omitempty"`
	TransportDocumentTypeCode       string `protobuf:"bytes,7,opt,name=transport_document_type_code,json=transportDocumentTypeCode,proto3" json:"transport_document_type_code,omitempty"`
	IsShippedOnboardType            bool   `protobuf:"varint,8,opt,name=is_shipped_onboard_type,json=isShippedOnboardType,proto3" json:"is_shipped_onboard_type,omitempty"`
	NumberOfCopies                  uint32 `protobuf:"varint,9,opt,name=number_of_copies,json=numberOfCopies,proto3" json:"number_of_copies,omitempty"`
	NumberOfOriginals               uint32 `protobuf:"varint,10,opt,name=number_of_originals,json=numberOfOriginals,proto3" json:"number_of_originals,omitempty"`
	IsElectronic                    bool   `protobuf:"varint,11,opt,name=is_electronic,json=isElectronic,proto3" json:"is_electronic,omitempty"`
	IsToOrder                       bool   `protobuf:"varint,12,opt,name=is_to_order,json=isToOrder,proto3" json:"is_to_order,omitempty"`
	AreChargesDisplayedOnOriginals  bool   `protobuf:"varint,13,opt,name=are_charges_displayed_on_originals,json=areChargesDisplayedOnOriginals,proto3" json:"are_charges_displayed_on_originals,omitempty"`
	AreChargesDisplayedOnCopies     bool   `protobuf:"varint,14,opt,name=are_charges_displayed_on_copies,json=areChargesDisplayedOnCopies,proto3" json:"are_charges_displayed_on_copies,omitempty"`
	DisplayedNameForPlaceOfReceipt  string `protobuf:"bytes,15,opt,name=displayed_name_for_place_of_receipt,json=displayedNameForPlaceOfReceipt,proto3" json:"displayed_name_for_place_of_receipt,omitempty"`
	DisplayedNameForPortOfLoad      string `protobuf:"bytes,16,opt,name=displayed_name_for_port_of_load,json=displayedNameForPortOfLoad,proto3" json:"displayed_name_for_port_of_load,omitempty"`
	DisplayedNameForPortOfDischarge string `protobuf:"bytes,17,opt,name=displayed_name_for_port_of_discharge,json=displayedNameForPortOfDischarge,proto3" json:"displayed_name_for_port_of_discharge,omitempty"`
	DisplayedNameForPlaceOfDelivery string `protobuf:"bytes,18,opt,name=displayed_name_for_place_of_delivery,json=displayedNameForPlaceOfDelivery,proto3" json:"displayed_name_for_place_of_delivery,omitempty"`
}

func (x *ShippingInstructionSummaryD) Reset() {
	*x = ShippingInstructionSummaryD{}
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShippingInstructionSummaryD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingInstructionSummaryD) ProtoMessage() {}

func (x *ShippingInstructionSummaryD) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingInstructionSummaryD.ProtoReflect.Descriptor instead.
func (*ShippingInstructionSummaryD) Descriptor() ([]byte, []int) {
	return file_ebl_v1_shippinginstructionsummary_proto_rawDescGZIP(), []int{2}
}

func (x *ShippingInstructionSummaryD) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShippingInstructionSummaryD) GetUuid4() []byte {
	if x != nil {
		return x.Uuid4
	}
	return nil
}

func (x *ShippingInstructionSummaryD) GetIdS() string {
	if x != nil {
		return x.IdS
	}
	return ""
}

func (x *ShippingInstructionSummaryD) GetShippingInstructionReference() string {
	if x != nil {
		return x.ShippingInstructionReference
	}
	return ""
}

func (x *ShippingInstructionSummaryD) GetDocumentStatus() string {
	if x != nil {
		return x.DocumentStatus
	}
	return ""
}

func (x *ShippingInstructionSummaryD) GetAmendToTransportDocument() string {
	if x != nil {
		return x.AmendToTransportDocument
	}
	return ""
}

func (x *ShippingInstructionSummaryD) GetTransportDocumentTypeCode() string {
	if x != nil {
		return x.TransportDocumentTypeCode
	}
	return ""
}

func (x *ShippingInstructionSummaryD) GetIsShippedOnboardType() bool {
	if x != nil {
		return x.IsShippedOnboardType
	}
	return false
}

func (x *ShippingInstructionSummaryD) GetNumberOfCopies() uint32 {
	if x != nil {
		return x.NumberOfCopies
	}
	return 0
}

func (x *ShippingInstructionSummaryD) GetNumberOfOriginals() uint32 {
	if x != nil {
		return x.NumberOfOriginals
	}
	return 0
}

func (x *ShippingInstructionSummaryD) GetIsElectronic() bool {
	if x != nil {
		return x.IsElectronic
	}
	return false
}

func (x *ShippingInstructionSummaryD) GetIsToOrder() bool {
	if x != nil {
		return x.IsToOrder
	}
	return false
}

func (x *ShippingInstructionSummaryD) GetAreChargesDisplayedOnOriginals() bool {
	if x != nil {
		return x.AreChargesDisplayedOnOriginals
	}
	return false
}

func (x *ShippingInstructionSummaryD) GetAreChargesDisplayedOnCopies() bool {
	if x != nil {
		return x.AreChargesDisplayedOnCopies
	}
	return false
}

func (x *ShippingInstructionSummaryD) GetDisplayedNameForPlaceOfReceipt() string {
	if x != nil {
		return x.DisplayedNameForPlaceOfReceipt
	}
	return ""
}

func (x *ShippingInstructionSummaryD) GetDisplayedNameForPortOfLoad() string {
	if x != nil {
		return x.DisplayedNameForPortOfLoad
	}
	return ""
}

func (x *ShippingInstructionSummaryD) GetDisplayedNameForPortOfDischarge() string {
	if x != nil {
		return x.DisplayedNameForPortOfDischarge
	}
	return ""
}

func (x *ShippingInstructionSummaryD) GetDisplayedNameForPlaceOfDelivery() string {
	if x != nil {
		return x.DisplayedNameForPlaceOfDelivery
	}
	return ""
}

type ShippingInstructionSummaryT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingInstructionCreatedDateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=shipping_instruction_created_date_time,json=shippingInstructionCreatedDateTime,proto3" json:"shipping_instruction_created_date_time,omitempty"`
	ShippingInstructionUpdatedDateTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=shipping_instruction_updated_date_time,json=shippingInstructionUpdatedDateTime,proto3" json:"shipping_instruction_updated_date_time,omitempty"`
}

func (x *ShippingInstructionSummaryT) Reset() {
	*x = ShippingInstructionSummaryT{}
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShippingInstructionSummaryT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShippingInstructionSummaryT) ProtoMessage() {}

func (x *ShippingInstructionSummaryT) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShippingInstructionSummaryT.ProtoReflect.Descriptor instead.
func (*ShippingInstructionSummaryT) Descriptor() ([]byte, []int) {
	return file_ebl_v1_shippinginstructionsummary_proto_rawDescGZIP(), []int{3}
}

func (x *ShippingInstructionSummaryT) GetShippingInstructionCreatedDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ShippingInstructionCreatedDateTime
	}
	return nil
}

func (x *ShippingInstructionSummaryT) GetShippingInstructionUpdatedDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ShippingInstructionUpdatedDateTime
	}
	return nil
}

type CreateShippingInstructionSummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingInstructionReference       string `protobuf:"bytes,1,opt,name=shipping_instruction_reference,json=shippingInstructionReference,proto3" json:"shipping_instruction_reference,omitempty"`
	DocumentStatus                     string `protobuf:"bytes,2,opt,name=document_status,json=documentStatus,proto3" json:"document_status,omitempty"`
	ShippingInstructionCreatedDateTime string `protobuf:"bytes,3,opt,name=shipping_instruction_created_date_time,json=shippingInstructionCreatedDateTime,proto3" json:"shipping_instruction_created_date_time,omitempty"`
	ShippingInstructionUpdatedDateTime string `protobuf:"bytes,4,opt,name=shipping_instruction_updated_date_time,json=shippingInstructionUpdatedDateTime,proto3" json:"shipping_instruction_updated_date_time,omitempty"`
	AmendToTransportDocument           string `protobuf:"bytes,5,opt,name=amend_to_transport_document,json=amendToTransportDocument,proto3" json:"amend_to_transport_document,omitempty"`
	TransportDocumentTypeCode          string `protobuf:"bytes,6,opt,name=transport_document_type_code,json=transportDocumentTypeCode,proto3" json:"transport_document_type_code,omitempty"`
	IsShippedOnboardType               bool   `protobuf:"varint,7,opt,name=is_shipped_onboard_type,json=isShippedOnboardType,proto3" json:"is_shipped_onboard_type,omitempty"`
	NumberOfCopies                     uint32 `protobuf:"varint,8,opt,name=number_of_copies,json=numberOfCopies,proto3" json:"number_of_copies,omitempty"`
	NumberOfOriginals                  uint32 `protobuf:"varint,9,opt,name=number_of_originals,json=numberOfOriginals,proto3" json:"number_of_originals,omitempty"`
	IsElectronic                       bool   `protobuf:"varint,10,opt,name=is_electronic,json=isElectronic,proto3" json:"is_electronic,omitempty"`
	IsToOrder                          bool   `protobuf:"varint,11,opt,name=is_to_order,json=isToOrder,proto3" json:"is_to_order,omitempty"`
	AreChargesDisplayedOnOriginals     bool   `protobuf:"varint,12,opt,name=are_charges_displayed_on_originals,json=areChargesDisplayedOnOriginals,proto3" json:"are_charges_displayed_on_originals,omitempty"`
	AreChargesDisplayedOnCopies        bool   `protobuf:"varint,13,opt,name=are_charges_displayed_on_copies,json=areChargesDisplayedOnCopies,proto3" json:"are_charges_displayed_on_copies,omitempty"`
	DisplayedNameForPlaceOfReceipt     string `protobuf:"bytes,14,opt,name=displayed_name_for_place_of_receipt,json=displayedNameForPlaceOfReceipt,proto3" json:"displayed_name_for_place_of_receipt,omitempty"`
	DisplayedNameForPortOfLoad         string `protobuf:"bytes,15,opt,name=displayed_name_for_port_of_load,json=displayedNameForPortOfLoad,proto3" json:"displayed_name_for_port_of_load,omitempty"`
	DisplayedNameForPortOfDischarge    string `protobuf:"bytes,16,opt,name=displayed_name_for_port_of_discharge,json=displayedNameForPortOfDischarge,proto3" json:"displayed_name_for_port_of_discharge,omitempty"`
	DisplayedNameForPlaceOfDelivery    string `protobuf:"bytes,17,opt,name=displayed_name_for_place_of_delivery,json=displayedNameForPlaceOfDelivery,proto3" json:"displayed_name_for_place_of_delivery,omitempty"`
	UserId                             string `protobuf:"bytes,18,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail                          string `protobuf:"bytes,19,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId                          string `protobuf:"bytes,20,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CreateShippingInstructionSummaryRequest) Reset() {
	*x = CreateShippingInstructionSummaryRequest{}
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShippingInstructionSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShippingInstructionSummaryRequest) ProtoMessage() {}

func (x *CreateShippingInstructionSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShippingInstructionSummaryRequest.ProtoReflect.Descriptor instead.
func (*CreateShippingInstructionSummaryRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_shippinginstructionsummary_proto_rawDescGZIP(), []int{4}
}

func (x *CreateShippingInstructionSummaryRequest) GetShippingInstructionReference() string {
	if x != nil {
		return x.ShippingInstructionReference
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetDocumentStatus() string {
	if x != nil {
		return x.DocumentStatus
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetShippingInstructionCreatedDateTime() string {
	if x != nil {
		return x.ShippingInstructionCreatedDateTime
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetShippingInstructionUpdatedDateTime() string {
	if x != nil {
		return x.ShippingInstructionUpdatedDateTime
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetAmendToTransportDocument() string {
	if x != nil {
		return x.AmendToTransportDocument
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetTransportDocumentTypeCode() string {
	if x != nil {
		return x.TransportDocumentTypeCode
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetIsShippedOnboardType() bool {
	if x != nil {
		return x.IsShippedOnboardType
	}
	return false
}

func (x *CreateShippingInstructionSummaryRequest) GetNumberOfCopies() uint32 {
	if x != nil {
		return x.NumberOfCopies
	}
	return 0
}

func (x *CreateShippingInstructionSummaryRequest) GetNumberOfOriginals() uint32 {
	if x != nil {
		return x.NumberOfOriginals
	}
	return 0
}

func (x *CreateShippingInstructionSummaryRequest) GetIsElectronic() bool {
	if x != nil {
		return x.IsElectronic
	}
	return false
}

func (x *CreateShippingInstructionSummaryRequest) GetIsToOrder() bool {
	if x != nil {
		return x.IsToOrder
	}
	return false
}

func (x *CreateShippingInstructionSummaryRequest) GetAreChargesDisplayedOnOriginals() bool {
	if x != nil {
		return x.AreChargesDisplayedOnOriginals
	}
	return false
}

func (x *CreateShippingInstructionSummaryRequest) GetAreChargesDisplayedOnCopies() bool {
	if x != nil {
		return x.AreChargesDisplayedOnCopies
	}
	return false
}

func (x *CreateShippingInstructionSummaryRequest) GetDisplayedNameForPlaceOfReceipt() string {
	if x != nil {
		return x.DisplayedNameForPlaceOfReceipt
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetDisplayedNameForPortOfLoad() string {
	if x != nil {
		return x.DisplayedNameForPortOfLoad
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetDisplayedNameForPortOfDischarge() string {
	if x != nil {
		return x.DisplayedNameForPortOfDischarge
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetDisplayedNameForPlaceOfDelivery() string {
	if x != nil {
		return x.DisplayedNameForPlaceOfDelivery
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *CreateShippingInstructionSummaryRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type GetShippingInstructionSummariesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingInstructionSummaries []*ShippingInstructionSummary `protobuf:"bytes,1,rep,name=shipping_instruction_summaries,json=shippingInstructionSummaries,proto3" json:"shipping_instruction_summaries,omitempty"`
	NextCursor                   string                        `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *GetShippingInstructionSummariesResponse) Reset() {
	*x = GetShippingInstructionSummariesResponse{}
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShippingInstructionSummariesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShippingInstructionSummariesResponse) ProtoMessage() {}

func (x *GetShippingInstructionSummariesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShippingInstructionSummariesResponse.ProtoReflect.Descriptor instead.
func (*GetShippingInstructionSummariesResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_shippinginstructionsummary_proto_rawDescGZIP(), []int{5}
}

func (x *GetShippingInstructionSummariesResponse) GetShippingInstructionSummaries() []*ShippingInstructionSummary {
	if x != nil {
		return x.ShippingInstructionSummaries
	}
	return nil
}

func (x *GetShippingInstructionSummariesResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type GetShippingInstructionSummariesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      string `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	UserEmail  string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId  string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *GetShippingInstructionSummariesRequest) Reset() {
	*x = GetShippingInstructionSummariesRequest{}
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShippingInstructionSummariesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShippingInstructionSummariesRequest) ProtoMessage() {}

func (x *GetShippingInstructionSummariesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_shippinginstructionsummary_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShippingInstructionSummariesRequest.ProtoReflect.Descriptor instead.
func (*GetShippingInstructionSummariesRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_shippinginstructionsummary_proto_rawDescGZIP(), []int{6}
}

func (x *GetShippingInstructionSummariesRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetShippingInstructionSummariesRequest) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *GetShippingInstructionSummariesRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *GetShippingInstructionSummariesRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

var File_ebl_v1_shippinginstructionsummary_proto protoreflect.FileDescriptor

var file_ebl_v1_shippinginstructionsummary_proto_rawDesc = []byte{
	0x0a, 0x27, 0x65, 0x62, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x65, 0x62, 0x6c, 0x2e, 0x76,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x90, 0x01, 0x0a, 0x28, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x1c, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x1a, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xdc, 0x02,
	0x0a, 0x1a, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x68, 0x0a, 0x1e,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x52, 0x1b, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x12, 0x68, 0x0a, 0x1e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x54, 0x52, 0x1b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x54,
	0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x63, 0x72, 0x55,
	0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xdd, 0x07, 0x0a,
	0x1b, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x75, 0x75, 0x69, 0x64, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x75, 0x75, 0x69,
	0x64, 0x34, 0x12, 0x11, 0x0a, 0x04, 0x69, 0x64, 0x5f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x64, 0x53, 0x12, 0x44, 0x0a, 0x1e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x61, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x6d, 0x65, 0x6e, 0x64,
	0x54, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64,
	0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43,
	0x6f, 0x70, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6f, 0x66, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73,
	0x45, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x74, 0x6f, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x54, 0x6f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x22, 0x61, 0x72,
	0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4f, 0x6e, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x12, 0x44, 0x0a, 0x1f, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x1b, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x4f, 0x6e, 0x43, 0x6f, 0x70, 0x69, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x23,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x4f, 0x66, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x43, 0x0a, 0x1f, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x46, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4f, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x4d,
	0x0a, 0x24, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x6f,
	0x72, 0x74, 0x4f, 0x66, 0x44, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x4d, 0x0a,
	0x24, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x4f, 0x66, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x22, 0xfd, 0x01, 0x0a,
	0x1b, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x54, 0x12, 0x6e, 0x0a, 0x26,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x22, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x6e, 0x0a, 0x26,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x22, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xaf, 0x09, 0x0a,
	0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x1e, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x26, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x22, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x26, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x22, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x3d, 0x0a, 0x1b, 0x61, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3f,
	0x0a, 0x1c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x6f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x14, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x4f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x70, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x6f, 0x70, 0x69, 0x65, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x6e, 0x69,
	0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x45, 0x6c, 0x65, 0x63, 0x74,
	0x72, 0x6f, 0x6e, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x54, 0x6f,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x22, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6f,
	0x6e, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x1e, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x73, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4f, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x73, 0x12, 0x44, 0x0a, 0x1f, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x73,
	0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x70, 0x69, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x61, 0x72, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4f,
	0x6e, 0x43, 0x6f, 0x70, 0x69, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x23, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x12, 0x43, 0x0a, 0x1f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x6f, 0x66, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x50,
	0x6f, 0x72, 0x74, 0x4f, 0x66, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x4d, 0x0a, 0x24, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x4f, 0x66, 0x44,
	0x69, 0x73, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x24, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x66, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xb4,
	0x01, 0x0a, 0x27, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x1e, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x1c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78,
	0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x32, 0xb0, 0x02, 0x0a, 0x21, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x20,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x2f, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x72, 0x65, 0x73,
	0x63, 0x6f, 0x2f, 0x73, 0x63, 0x2d, 0x64, 0x63, 0x73, 0x61, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x62, 0x6c,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ebl_v1_shippinginstructionsummary_proto_rawDescOnce sync.Once
	file_ebl_v1_shippinginstructionsummary_proto_rawDescData = file_ebl_v1_shippinginstructionsummary_proto_rawDesc
)

func file_ebl_v1_shippinginstructionsummary_proto_rawDescGZIP() []byte {
	file_ebl_v1_shippinginstructionsummary_proto_rawDescOnce.Do(func() {
		file_ebl_v1_shippinginstructionsummary_proto_rawDescData = protoimpl.X.CompressGZIP(file_ebl_v1_shippinginstructionsummary_proto_rawDescData)
	})
	return file_ebl_v1_shippinginstructionsummary_proto_rawDescData
}

var file_ebl_v1_shippinginstructionsummary_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ebl_v1_shippinginstructionsummary_proto_goTypes = []any{
	(*CreateShippingInstructionSummaryResponse)(nil), // 0: ebl.v1.CreateShippingInstructionSummaryResponse
	(*ShippingInstructionSummary)(nil),               // 1: ebl.v1.ShippingInstructionSummary
	(*ShippingInstructionSummaryD)(nil),              // 2: ebl.v1.ShippingInstructionSummaryD
	(*ShippingInstructionSummaryT)(nil),              // 3: ebl.v1.ShippingInstructionSummaryT
	(*CreateShippingInstructionSummaryRequest)(nil),  // 4: ebl.v1.CreateShippingInstructionSummaryRequest
	(*GetShippingInstructionSummariesResponse)(nil),  // 5: ebl.v1.GetShippingInstructionSummariesResponse
	(*GetShippingInstructionSummariesRequest)(nil),   // 6: ebl.v1.GetShippingInstructionSummariesRequest
	(*v1.CrUpdUser)(nil),                             // 7: common.v1.CrUpdUser
	(*v1.CrUpdTime)(nil),                             // 8: common.v1.CrUpdTime
	(*timestamppb.Timestamp)(nil),                    // 9: google.protobuf.Timestamp
}
var file_ebl_v1_shippinginstructionsummary_proto_depIdxs = []int32{
	1,  // 0: ebl.v1.CreateShippingInstructionSummaryResponse.shipping_instruction_summary:type_name -> ebl.v1.ShippingInstructionSummary
	2,  // 1: ebl.v1.ShippingInstructionSummary.shipping_instruction_summary_d:type_name -> ebl.v1.ShippingInstructionSummaryD
	3,  // 2: ebl.v1.ShippingInstructionSummary.shipping_instruction_summary_t:type_name -> ebl.v1.ShippingInstructionSummaryT
	7,  // 3: ebl.v1.ShippingInstructionSummary.cr_upd_user:type_name -> common.v1.CrUpdUser
	8,  // 4: ebl.v1.ShippingInstructionSummary.cr_upd_time:type_name -> common.v1.CrUpdTime
	9,  // 5: ebl.v1.ShippingInstructionSummaryT.shipping_instruction_created_date_time:type_name -> google.protobuf.Timestamp
	9,  // 6: ebl.v1.ShippingInstructionSummaryT.shipping_instruction_updated_date_time:type_name -> google.protobuf.Timestamp
	1,  // 7: ebl.v1.GetShippingInstructionSummariesResponse.shipping_instruction_summaries:type_name -> ebl.v1.ShippingInstructionSummary
	4,  // 8: ebl.v1.ShippingInstructionSummaryService.CreateShippingInstructionSummary:input_type -> ebl.v1.CreateShippingInstructionSummaryRequest
	6,  // 9: ebl.v1.ShippingInstructionSummaryService.GetShippingInstructionSummaries:input_type -> ebl.v1.GetShippingInstructionSummariesRequest
	0,  // 10: ebl.v1.ShippingInstructionSummaryService.CreateShippingInstructionSummary:output_type -> ebl.v1.CreateShippingInstructionSummaryResponse
	5,  // 11: ebl.v1.ShippingInstructionSummaryService.GetShippingInstructionSummaries:output_type -> ebl.v1.GetShippingInstructionSummariesResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_ebl_v1_shippinginstructionsummary_proto_init() }
func file_ebl_v1_shippinginstructionsummary_proto_init() {
	if File_ebl_v1_shippinginstructionsummary_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ebl_v1_shippinginstructionsummary_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ebl_v1_shippinginstructionsummary_proto_goTypes,
		DependencyIndexes: file_ebl_v1_shippinginstructionsummary_proto_depIdxs,
		MessageInfos:      file_ebl_v1_shippinginstructionsummary_proto_msgTypes,
	}.Build()
	File_ebl_v1_shippinginstructionsummary_proto = out.File
	file_ebl_v1_shippinginstructionsummary_proto_rawDesc = nil
	file_ebl_v1_shippinginstructionsummary_proto_goTypes = nil
	file_ebl_v1_shippinginstructionsummary_proto_depIdxs = nil
}
