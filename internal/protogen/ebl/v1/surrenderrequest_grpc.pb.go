// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: ebl/v1/surrenderrequest.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SurrenderRequestService_CreateTransactionParty_FullMethodName               = "/ebl.v1.SurrenderRequestService/CreateTransactionParty"
	SurrenderRequestService_UpdateTransactionParty_FullMethodName               = "/ebl.v1.SurrenderRequestService/UpdateTransactionParty"
	SurrenderRequestService_GetTransactionParties_FullMethodName                = "/ebl.v1.SurrenderRequestService/GetTransactionParties"
	SurrenderRequestService_GetTransactionParty_FullMethodName                  = "/ebl.v1.SurrenderRequestService/GetTransactionParty"
	SurrenderRequestService_GetTransactionPartyByPk_FullMethodName              = "/ebl.v1.SurrenderRequestService/GetTransactionPartyByPk"
	SurrenderRequestService_CreateTransactionPartySupportingCode_FullMethodName = "/ebl.v1.SurrenderRequestService/CreateTransactionPartySupportingCode"
	SurrenderRequestService_UpdateTransactionPartySupportingCode_FullMethodName = "/ebl.v1.SurrenderRequestService/UpdateTransactionPartySupportingCode"
	SurrenderRequestService_CreateSurrenderRequest_FullMethodName               = "/ebl.v1.SurrenderRequestService/CreateSurrenderRequest"
	SurrenderRequestService_UpdateSurrenderRequest_FullMethodName               = "/ebl.v1.SurrenderRequestService/UpdateSurrenderRequest"
	SurrenderRequestService_CreateEndorsementChainLink_FullMethodName           = "/ebl.v1.SurrenderRequestService/CreateEndorsementChainLink"
	SurrenderRequestService_UpdateEndorsementChainLink_FullMethodName           = "/ebl.v1.SurrenderRequestService/UpdateEndorsementChainLink"
)

// SurrenderRequestServiceClient is the client API for SurrenderRequestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// The SurrenderRequestService service definition.
type SurrenderRequestServiceClient interface {
	CreateTransactionParty(ctx context.Context, in *CreateTransactionPartyRequest, opts ...grpc.CallOption) (*CreateTransactionPartyResponse, error)
	UpdateTransactionParty(ctx context.Context, in *UpdateTransactionPartyRequest, opts ...grpc.CallOption) (*UpdateTransactionPartyResponse, error)
	GetTransactionParties(ctx context.Context, in *GetTransactionPartiesRequest, opts ...grpc.CallOption) (*GetTransactionPartiesResponse, error)
	GetTransactionParty(ctx context.Context, in *GetTransactionPartyRequest, opts ...grpc.CallOption) (*GetTransactionPartyResponse, error)
	GetTransactionPartyByPk(ctx context.Context, in *GetTransactionPartyByPkRequest, opts ...grpc.CallOption) (*GetTransactionPartyByPkResponse, error)
	CreateTransactionPartySupportingCode(ctx context.Context, in *CreateTransactionPartySupportingCodeRequest, opts ...grpc.CallOption) (*CreateTransactionPartySupportingCodeResponse, error)
	UpdateTransactionPartySupportingCode(ctx context.Context, in *UpdateTransactionPartySupportingCodeRequest, opts ...grpc.CallOption) (*UpdateTransactionPartySupportingCodeResponse, error)
	CreateSurrenderRequest(ctx context.Context, in *CreateSurrenderRequestRequest, opts ...grpc.CallOption) (*CreateSurrenderRequestResponse, error)
	UpdateSurrenderRequest(ctx context.Context, in *UpdateSurrenderRequestRequest, opts ...grpc.CallOption) (*UpdateSurrenderRequestResponse, error)
	CreateEndorsementChainLink(ctx context.Context, in *CreateEndorsementChainLinkRequest, opts ...grpc.CallOption) (*CreateEndorsementChainLinkResponse, error)
	UpdateEndorsementChainLink(ctx context.Context, in *UpdateEndorsementChainLinkRequest, opts ...grpc.CallOption) (*UpdateEndorsementChainLinkResponse, error)
}

type surrenderRequestServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSurrenderRequestServiceClient(cc grpc.ClientConnInterface) SurrenderRequestServiceClient {
	return &surrenderRequestServiceClient{cc}
}

func (c *surrenderRequestServiceClient) CreateTransactionParty(ctx context.Context, in *CreateTransactionPartyRequest, opts ...grpc.CallOption) (*CreateTransactionPartyResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateTransactionPartyResponse)
	err := c.cc.Invoke(ctx, SurrenderRequestService_CreateTransactionParty_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surrenderRequestServiceClient) UpdateTransactionParty(ctx context.Context, in *UpdateTransactionPartyRequest, opts ...grpc.CallOption) (*UpdateTransactionPartyResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateTransactionPartyResponse)
	err := c.cc.Invoke(ctx, SurrenderRequestService_UpdateTransactionParty_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surrenderRequestServiceClient) GetTransactionParties(ctx context.Context, in *GetTransactionPartiesRequest, opts ...grpc.CallOption) (*GetTransactionPartiesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetTransactionPartiesResponse)
	err := c.cc.Invoke(ctx, SurrenderRequestService_GetTransactionParties_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surrenderRequestServiceClient) GetTransactionParty(ctx context.Context, in *GetTransactionPartyRequest, opts ...grpc.CallOption) (*GetTransactionPartyResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetTransactionPartyResponse)
	err := c.cc.Invoke(ctx, SurrenderRequestService_GetTransactionParty_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surrenderRequestServiceClient) GetTransactionPartyByPk(ctx context.Context, in *GetTransactionPartyByPkRequest, opts ...grpc.CallOption) (*GetTransactionPartyByPkResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetTransactionPartyByPkResponse)
	err := c.cc.Invoke(ctx, SurrenderRequestService_GetTransactionPartyByPk_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surrenderRequestServiceClient) CreateTransactionPartySupportingCode(ctx context.Context, in *CreateTransactionPartySupportingCodeRequest, opts ...grpc.CallOption) (*CreateTransactionPartySupportingCodeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateTransactionPartySupportingCodeResponse)
	err := c.cc.Invoke(ctx, SurrenderRequestService_CreateTransactionPartySupportingCode_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surrenderRequestServiceClient) UpdateTransactionPartySupportingCode(ctx context.Context, in *UpdateTransactionPartySupportingCodeRequest, opts ...grpc.CallOption) (*UpdateTransactionPartySupportingCodeResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateTransactionPartySupportingCodeResponse)
	err := c.cc.Invoke(ctx, SurrenderRequestService_UpdateTransactionPartySupportingCode_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surrenderRequestServiceClient) CreateSurrenderRequest(ctx context.Context, in *CreateSurrenderRequestRequest, opts ...grpc.CallOption) (*CreateSurrenderRequestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateSurrenderRequestResponse)
	err := c.cc.Invoke(ctx, SurrenderRequestService_CreateSurrenderRequest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surrenderRequestServiceClient) UpdateSurrenderRequest(ctx context.Context, in *UpdateSurrenderRequestRequest, opts ...grpc.CallOption) (*UpdateSurrenderRequestResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateSurrenderRequestResponse)
	err := c.cc.Invoke(ctx, SurrenderRequestService_UpdateSurrenderRequest_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surrenderRequestServiceClient) CreateEndorsementChainLink(ctx context.Context, in *CreateEndorsementChainLinkRequest, opts ...grpc.CallOption) (*CreateEndorsementChainLinkResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateEndorsementChainLinkResponse)
	err := c.cc.Invoke(ctx, SurrenderRequestService_CreateEndorsementChainLink_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *surrenderRequestServiceClient) UpdateEndorsementChainLink(ctx context.Context, in *UpdateEndorsementChainLinkRequest, opts ...grpc.CallOption) (*UpdateEndorsementChainLinkResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateEndorsementChainLinkResponse)
	err := c.cc.Invoke(ctx, SurrenderRequestService_UpdateEndorsementChainLink_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SurrenderRequestServiceServer is the server API for SurrenderRequestService service.
// All implementations must embed UnimplementedSurrenderRequestServiceServer
// for forward compatibility.
//
// The SurrenderRequestService service definition.
type SurrenderRequestServiceServer interface {
	CreateTransactionParty(context.Context, *CreateTransactionPartyRequest) (*CreateTransactionPartyResponse, error)
	UpdateTransactionParty(context.Context, *UpdateTransactionPartyRequest) (*UpdateTransactionPartyResponse, error)
	GetTransactionParties(context.Context, *GetTransactionPartiesRequest) (*GetTransactionPartiesResponse, error)
	GetTransactionParty(context.Context, *GetTransactionPartyRequest) (*GetTransactionPartyResponse, error)
	GetTransactionPartyByPk(context.Context, *GetTransactionPartyByPkRequest) (*GetTransactionPartyByPkResponse, error)
	CreateTransactionPartySupportingCode(context.Context, *CreateTransactionPartySupportingCodeRequest) (*CreateTransactionPartySupportingCodeResponse, error)
	UpdateTransactionPartySupportingCode(context.Context, *UpdateTransactionPartySupportingCodeRequest) (*UpdateTransactionPartySupportingCodeResponse, error)
	CreateSurrenderRequest(context.Context, *CreateSurrenderRequestRequest) (*CreateSurrenderRequestResponse, error)
	UpdateSurrenderRequest(context.Context, *UpdateSurrenderRequestRequest) (*UpdateSurrenderRequestResponse, error)
	CreateEndorsementChainLink(context.Context, *CreateEndorsementChainLinkRequest) (*CreateEndorsementChainLinkResponse, error)
	UpdateEndorsementChainLink(context.Context, *UpdateEndorsementChainLinkRequest) (*UpdateEndorsementChainLinkResponse, error)
	mustEmbedUnimplementedSurrenderRequestServiceServer()
}

// UnimplementedSurrenderRequestServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSurrenderRequestServiceServer struct{}

func (UnimplementedSurrenderRequestServiceServer) CreateTransactionParty(context.Context, *CreateTransactionPartyRequest) (*CreateTransactionPartyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransactionParty not implemented")
}
func (UnimplementedSurrenderRequestServiceServer) UpdateTransactionParty(context.Context, *UpdateTransactionPartyRequest) (*UpdateTransactionPartyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTransactionParty not implemented")
}
func (UnimplementedSurrenderRequestServiceServer) GetTransactionParties(context.Context, *GetTransactionPartiesRequest) (*GetTransactionPartiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionParties not implemented")
}
func (UnimplementedSurrenderRequestServiceServer) GetTransactionParty(context.Context, *GetTransactionPartyRequest) (*GetTransactionPartyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionParty not implemented")
}
func (UnimplementedSurrenderRequestServiceServer) GetTransactionPartyByPk(context.Context, *GetTransactionPartyByPkRequest) (*GetTransactionPartyByPkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionPartyByPk not implemented")
}
func (UnimplementedSurrenderRequestServiceServer) CreateTransactionPartySupportingCode(context.Context, *CreateTransactionPartySupportingCodeRequest) (*CreateTransactionPartySupportingCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransactionPartySupportingCode not implemented")
}
func (UnimplementedSurrenderRequestServiceServer) UpdateTransactionPartySupportingCode(context.Context, *UpdateTransactionPartySupportingCodeRequest) (*UpdateTransactionPartySupportingCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTransactionPartySupportingCode not implemented")
}
func (UnimplementedSurrenderRequestServiceServer) CreateSurrenderRequest(context.Context, *CreateSurrenderRequestRequest) (*CreateSurrenderRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSurrenderRequest not implemented")
}
func (UnimplementedSurrenderRequestServiceServer) UpdateSurrenderRequest(context.Context, *UpdateSurrenderRequestRequest) (*UpdateSurrenderRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSurrenderRequest not implemented")
}
func (UnimplementedSurrenderRequestServiceServer) CreateEndorsementChainLink(context.Context, *CreateEndorsementChainLinkRequest) (*CreateEndorsementChainLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEndorsementChainLink not implemented")
}
func (UnimplementedSurrenderRequestServiceServer) UpdateEndorsementChainLink(context.Context, *UpdateEndorsementChainLinkRequest) (*UpdateEndorsementChainLinkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEndorsementChainLink not implemented")
}
func (UnimplementedSurrenderRequestServiceServer) mustEmbedUnimplementedSurrenderRequestServiceServer() {
}
func (UnimplementedSurrenderRequestServiceServer) testEmbeddedByValue() {}

// UnsafeSurrenderRequestServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SurrenderRequestServiceServer will
// result in compilation errors.
type UnsafeSurrenderRequestServiceServer interface {
	mustEmbedUnimplementedSurrenderRequestServiceServer()
}

func RegisterSurrenderRequestServiceServer(s grpc.ServiceRegistrar, srv SurrenderRequestServiceServer) {
	// If the following call pancis, it indicates UnimplementedSurrenderRequestServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SurrenderRequestService_ServiceDesc, srv)
}

func _SurrenderRequestService_CreateTransactionParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTransactionPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurrenderRequestServiceServer).CreateTransactionParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SurrenderRequestService_CreateTransactionParty_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurrenderRequestServiceServer).CreateTransactionParty(ctx, req.(*CreateTransactionPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SurrenderRequestService_UpdateTransactionParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTransactionPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurrenderRequestServiceServer).UpdateTransactionParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SurrenderRequestService_UpdateTransactionParty_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurrenderRequestServiceServer).UpdateTransactionParty(ctx, req.(*UpdateTransactionPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SurrenderRequestService_GetTransactionParties_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionPartiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurrenderRequestServiceServer).GetTransactionParties(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SurrenderRequestService_GetTransactionParties_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurrenderRequestServiceServer).GetTransactionParties(ctx, req.(*GetTransactionPartiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SurrenderRequestService_GetTransactionParty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionPartyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurrenderRequestServiceServer).GetTransactionParty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SurrenderRequestService_GetTransactionParty_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurrenderRequestServiceServer).GetTransactionParty(ctx, req.(*GetTransactionPartyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SurrenderRequestService_GetTransactionPartyByPk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionPartyByPkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurrenderRequestServiceServer).GetTransactionPartyByPk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SurrenderRequestService_GetTransactionPartyByPk_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurrenderRequestServiceServer).GetTransactionPartyByPk(ctx, req.(*GetTransactionPartyByPkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SurrenderRequestService_CreateTransactionPartySupportingCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTransactionPartySupportingCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurrenderRequestServiceServer).CreateTransactionPartySupportingCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SurrenderRequestService_CreateTransactionPartySupportingCode_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurrenderRequestServiceServer).CreateTransactionPartySupportingCode(ctx, req.(*CreateTransactionPartySupportingCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SurrenderRequestService_UpdateTransactionPartySupportingCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTransactionPartySupportingCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurrenderRequestServiceServer).UpdateTransactionPartySupportingCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SurrenderRequestService_UpdateTransactionPartySupportingCode_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurrenderRequestServiceServer).UpdateTransactionPartySupportingCode(ctx, req.(*UpdateTransactionPartySupportingCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SurrenderRequestService_CreateSurrenderRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSurrenderRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurrenderRequestServiceServer).CreateSurrenderRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SurrenderRequestService_CreateSurrenderRequest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurrenderRequestServiceServer).CreateSurrenderRequest(ctx, req.(*CreateSurrenderRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SurrenderRequestService_UpdateSurrenderRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSurrenderRequestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurrenderRequestServiceServer).UpdateSurrenderRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SurrenderRequestService_UpdateSurrenderRequest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurrenderRequestServiceServer).UpdateSurrenderRequest(ctx, req.(*UpdateSurrenderRequestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SurrenderRequestService_CreateEndorsementChainLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEndorsementChainLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurrenderRequestServiceServer).CreateEndorsementChainLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SurrenderRequestService_CreateEndorsementChainLink_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurrenderRequestServiceServer).CreateEndorsementChainLink(ctx, req.(*CreateEndorsementChainLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SurrenderRequestService_UpdateEndorsementChainLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEndorsementChainLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SurrenderRequestServiceServer).UpdateEndorsementChainLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SurrenderRequestService_UpdateEndorsementChainLink_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SurrenderRequestServiceServer).UpdateEndorsementChainLink(ctx, req.(*UpdateEndorsementChainLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SurrenderRequestService_ServiceDesc is the grpc.ServiceDesc for SurrenderRequestService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SurrenderRequestService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ebl.v1.SurrenderRequestService",
	HandlerType: (*SurrenderRequestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTransactionParty",
			Handler:    _SurrenderRequestService_CreateTransactionParty_Handler,
		},
		{
			MethodName: "UpdateTransactionParty",
			Handler:    _SurrenderRequestService_UpdateTransactionParty_Handler,
		},
		{
			MethodName: "GetTransactionParties",
			Handler:    _SurrenderRequestService_GetTransactionParties_Handler,
		},
		{
			MethodName: "GetTransactionParty",
			Handler:    _SurrenderRequestService_GetTransactionParty_Handler,
		},
		{
			MethodName: "GetTransactionPartyByPk",
			Handler:    _SurrenderRequestService_GetTransactionPartyByPk_Handler,
		},
		{
			MethodName: "CreateTransactionPartySupportingCode",
			Handler:    _SurrenderRequestService_CreateTransactionPartySupportingCode_Handler,
		},
		{
			MethodName: "UpdateTransactionPartySupportingCode",
			Handler:    _SurrenderRequestService_UpdateTransactionPartySupportingCode_Handler,
		},
		{
			MethodName: "CreateSurrenderRequest",
			Handler:    _SurrenderRequestService_CreateSurrenderRequest_Handler,
		},
		{
			MethodName: "UpdateSurrenderRequest",
			Handler:    _SurrenderRequestService_UpdateSurrenderRequest_Handler,
		},
		{
			MethodName: "CreateEndorsementChainLink",
			Handler:    _SurrenderRequestService_CreateEndorsementChainLink_Handler,
		},
		{
			MethodName: "UpdateEndorsementChainLink",
			Handler:    _SurrenderRequestService_UpdateEndorsementChainLink_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ebl/v1/surrenderrequest.proto",
}
