// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: ebl/v1/surrenderrequest.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/cloudfresco/sc-dcsa/internal/protogen/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTransactionPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EblPlatformIdentifier  string `protobuf:"bytes,1,opt,name=ebl_platform_identifier,json=eblPlatformIdentifier,proto3" json:"ebl_platform_identifier,omitempty"`
	LegalName              string `protobuf:"bytes,2,opt,name=legal_name,json=legalName,proto3" json:"legal_name,omitempty"`
	RegistrationNumber     string `protobuf:"bytes,3,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	LocationOfRegistration string `protobuf:"bytes,4,opt,name=location_of_registration,json=locationOfRegistration,proto3" json:"location_of_registration,omitempty"`
	TaxReference           string `protobuf:"bytes,5,opt,name=tax_reference,json=taxReference,proto3" json:"tax_reference,omitempty"`
	UserId                 string `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail              string `protobuf:"bytes,7,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId              string `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CreateTransactionPartyRequest) Reset() {
	*x = CreateTransactionPartyRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTransactionPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionPartyRequest) ProtoMessage() {}

func (x *CreateTransactionPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionPartyRequest.ProtoReflect.Descriptor instead.
func (*CreateTransactionPartyRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTransactionPartyRequest) GetEblPlatformIdentifier() string {
	if x != nil {
		return x.EblPlatformIdentifier
	}
	return ""
}

func (x *CreateTransactionPartyRequest) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *CreateTransactionPartyRequest) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

func (x *CreateTransactionPartyRequest) GetLocationOfRegistration() string {
	if x != nil {
		return x.LocationOfRegistration
	}
	return ""
}

func (x *CreateTransactionPartyRequest) GetTaxReference() string {
	if x != nil {
		return x.TaxReference
	}
	return ""
}

func (x *CreateTransactionPartyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateTransactionPartyRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *CreateTransactionPartyRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type CreateTransactionPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionParty *TransactionParty `protobuf:"bytes,1,opt,name=transaction_party,json=transactionParty,proto3" json:"transaction_party,omitempty"`
}

func (x *CreateTransactionPartyResponse) Reset() {
	*x = CreateTransactionPartyResponse{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTransactionPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionPartyResponse) ProtoMessage() {}

func (x *CreateTransactionPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionPartyResponse.ProtoReflect.Descriptor instead.
func (*CreateTransactionPartyResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTransactionPartyResponse) GetTransactionParty() *TransactionParty {
	if x != nil {
		return x.TransactionParty
	}
	return nil
}

type UpdateTransactionPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EblPlatformIdentifier  string `protobuf:"bytes,1,opt,name=ebl_platform_identifier,json=eblPlatformIdentifier,proto3" json:"ebl_platform_identifier,omitempty"`
	LegalName              string `protobuf:"bytes,2,opt,name=legal_name,json=legalName,proto3" json:"legal_name,omitempty"`
	RegistrationNumber     string `protobuf:"bytes,3,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	LocationOfRegistration string `protobuf:"bytes,4,opt,name=location_of_registration,json=locationOfRegistration,proto3" json:"location_of_registration,omitempty"`
	Id                     string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	UserId                 string `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail              string `protobuf:"bytes,7,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId              string `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *UpdateTransactionPartyRequest) Reset() {
	*x = UpdateTransactionPartyRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTransactionPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionPartyRequest) ProtoMessage() {}

func (x *UpdateTransactionPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionPartyRequest.ProtoReflect.Descriptor instead.
func (*UpdateTransactionPartyRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTransactionPartyRequest) GetEblPlatformIdentifier() string {
	if x != nil {
		return x.EblPlatformIdentifier
	}
	return ""
}

func (x *UpdateTransactionPartyRequest) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *UpdateTransactionPartyRequest) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

func (x *UpdateTransactionPartyRequest) GetLocationOfRegistration() string {
	if x != nil {
		return x.LocationOfRegistration
	}
	return ""
}

func (x *UpdateTransactionPartyRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTransactionPartyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateTransactionPartyRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *UpdateTransactionPartyRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type UpdateTransactionPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTransactionPartyResponse) Reset() {
	*x = UpdateTransactionPartyResponse{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTransactionPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionPartyResponse) ProtoMessage() {}

func (x *UpdateTransactionPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionPartyResponse.ProtoReflect.Descriptor instead.
func (*UpdateTransactionPartyResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{3}
}

type TransactionParty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionPartyD *TransactionPartyD `protobuf:"bytes,1,opt,name=transaction_party_d,json=transactionPartyD,proto3" json:"transaction_party_d,omitempty"`
	CrUpdUser         *v1.CrUpdUser      `protobuf:"bytes,2,opt,name=cr_upd_user,json=crUpdUser,proto3" json:"cr_upd_user,omitempty"`
	CrUpdTime         *v1.CrUpdTime      `protobuf:"bytes,3,opt,name=cr_upd_time,json=crUpdTime,proto3" json:"cr_upd_time,omitempty"`
}

func (x *TransactionParty) Reset() {
	*x = TransactionParty{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionParty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionParty) ProtoMessage() {}

func (x *TransactionParty) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionParty.ProtoReflect.Descriptor instead.
func (*TransactionParty) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{4}
}

func (x *TransactionParty) GetTransactionPartyD() *TransactionPartyD {
	if x != nil {
		return x.TransactionPartyD
	}
	return nil
}

func (x *TransactionParty) GetCrUpdUser() *v1.CrUpdUser {
	if x != nil {
		return x.CrUpdUser
	}
	return nil
}

func (x *TransactionParty) GetCrUpdTime() *v1.CrUpdTime {
	if x != nil {
		return x.CrUpdTime
	}
	return nil
}

type TransactionPartyD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid4                  []byte `protobuf:"bytes,2,opt,name=uuid4,proto3" json:"uuid4,omitempty"`
	IdS                    string `protobuf:"bytes,3,opt,name=id_s,json=idS,proto3" json:"id_s,omitempty"`
	EblPlatformIdentifier  string `protobuf:"bytes,4,opt,name=ebl_platform_identifier,json=eblPlatformIdentifier,proto3" json:"ebl_platform_identifier,omitempty"`
	LegalName              string `protobuf:"bytes,5,opt,name=legal_name,json=legalName,proto3" json:"legal_name,omitempty"`
	RegistrationNumber     string `protobuf:"bytes,6,opt,name=registration_number,json=registrationNumber,proto3" json:"registration_number,omitempty"`
	LocationOfRegistration string `protobuf:"bytes,7,opt,name=location_of_registration,json=locationOfRegistration,proto3" json:"location_of_registration,omitempty"`
	TaxReference           string `protobuf:"bytes,8,opt,name=tax_reference,json=taxReference,proto3" json:"tax_reference,omitempty"`
}

func (x *TransactionPartyD) Reset() {
	*x = TransactionPartyD{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionPartyD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionPartyD) ProtoMessage() {}

func (x *TransactionPartyD) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionPartyD.ProtoReflect.Descriptor instead.
func (*TransactionPartyD) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionPartyD) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransactionPartyD) GetUuid4() []byte {
	if x != nil {
		return x.Uuid4
	}
	return nil
}

func (x *TransactionPartyD) GetIdS() string {
	if x != nil {
		return x.IdS
	}
	return ""
}

func (x *TransactionPartyD) GetEblPlatformIdentifier() string {
	if x != nil {
		return x.EblPlatformIdentifier
	}
	return ""
}

func (x *TransactionPartyD) GetLegalName() string {
	if x != nil {
		return x.LegalName
	}
	return ""
}

func (x *TransactionPartyD) GetRegistrationNumber() string {
	if x != nil {
		return x.RegistrationNumber
	}
	return ""
}

func (x *TransactionPartyD) GetLocationOfRegistration() string {
	if x != nil {
		return x.LocationOfRegistration
	}
	return ""
}

func (x *TransactionPartyD) GetTaxReference() string {
	if x != nil {
		return x.TaxReference
	}
	return ""
}

type GetTransactionPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetRequest *v1.GetRequest `protobuf:"bytes,1,opt,name=get_request,json=getRequest,proto3" json:"get_request,omitempty"`
}

func (x *GetTransactionPartyRequest) Reset() {
	*x = GetTransactionPartyRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionPartyRequest) ProtoMessage() {}

func (x *GetTransactionPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionPartyRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionPartyRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{6}
}

func (x *GetTransactionPartyRequest) GetGetRequest() *v1.GetRequest {
	if x != nil {
		return x.GetRequest
	}
	return nil
}

type GetTransactionPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionParty *TransactionParty `protobuf:"bytes,1,opt,name=transaction_party,json=transactionParty,proto3" json:"transaction_party,omitempty"`
}

func (x *GetTransactionPartyResponse) Reset() {
	*x = GetTransactionPartyResponse{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionPartyResponse) ProtoMessage() {}

func (x *GetTransactionPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionPartyResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionPartyResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{7}
}

func (x *GetTransactionPartyResponse) GetTransactionParty() *TransactionParty {
	if x != nil {
		return x.TransactionParty
	}
	return nil
}

type GetTransactionPartiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      string `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	UserEmail  string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId  string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *GetTransactionPartiesRequest) Reset() {
	*x = GetTransactionPartiesRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionPartiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionPartiesRequest) ProtoMessage() {}

func (x *GetTransactionPartiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionPartiesRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionPartiesRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{8}
}

func (x *GetTransactionPartiesRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetTransactionPartiesRequest) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *GetTransactionPartiesRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *GetTransactionPartiesRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type GetTransactionPartiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionParties []*TransactionParty `protobuf:"bytes,1,rep,name=transaction_parties,json=transactionParties,proto3" json:"transaction_parties,omitempty"`
	NextCursor         string              `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *GetTransactionPartiesResponse) Reset() {
	*x = GetTransactionPartiesResponse{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionPartiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionPartiesResponse) ProtoMessage() {}

func (x *GetTransactionPartiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionPartiesResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionPartiesResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{9}
}

func (x *GetTransactionPartiesResponse) GetTransactionParties() []*TransactionParty {
	if x != nil {
		return x.TransactionParties
	}
	return nil
}

func (x *GetTransactionPartiesResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type GetTransactionPartyByPkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GetByIdRequest *v1.GetByIdRequest `protobuf:"bytes,1,opt,name=get_by_id_request,json=getByIdRequest,proto3" json:"get_by_id_request,omitempty"`
}

func (x *GetTransactionPartyByPkRequest) Reset() {
	*x = GetTransactionPartyByPkRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionPartyByPkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionPartyByPkRequest) ProtoMessage() {}

func (x *GetTransactionPartyByPkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionPartyByPkRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionPartyByPkRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{10}
}

func (x *GetTransactionPartyByPkRequest) GetGetByIdRequest() *v1.GetByIdRequest {
	if x != nil {
		return x.GetByIdRequest
	}
	return nil
}

type GetTransactionPartyByPkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionParty *TransactionParty `protobuf:"bytes,1,opt,name=transaction_party,json=transactionParty,proto3" json:"transaction_party,omitempty"`
}

func (x *GetTransactionPartyByPkResponse) Reset() {
	*x = GetTransactionPartyByPkResponse{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionPartyByPkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionPartyByPkResponse) ProtoMessage() {}

func (x *GetTransactionPartyByPkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionPartyByPkResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionPartyByPkResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{11}
}

func (x *GetTransactionPartyByPkResponse) GetTransactionParty() *TransactionParty {
	if x != nil {
		return x.TransactionParty
	}
	return nil
}

type CreateTransactionPartySupportingCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionPartyId    uint32 `protobuf:"varint,1,opt,name=transaction_party_id,json=transactionPartyId,proto3" json:"transaction_party_id,omitempty"`
	PartyCode             string `protobuf:"bytes,2,opt,name=party_code,json=partyCode,proto3" json:"party_code,omitempty"`
	PartyCodeListProvider string `protobuf:"bytes,3,opt,name=party_code_list_provider,json=partyCodeListProvider,proto3" json:"party_code_list_provider,omitempty"`
	UserId                string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail             string `protobuf:"bytes,5,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId             string `protobuf:"bytes,6,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CreateTransactionPartySupportingCodeRequest) Reset() {
	*x = CreateTransactionPartySupportingCodeRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTransactionPartySupportingCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionPartySupportingCodeRequest) ProtoMessage() {}

func (x *CreateTransactionPartySupportingCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionPartySupportingCodeRequest.ProtoReflect.Descriptor instead.
func (*CreateTransactionPartySupportingCodeRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{12}
}

func (x *CreateTransactionPartySupportingCodeRequest) GetTransactionPartyId() uint32 {
	if x != nil {
		return x.TransactionPartyId
	}
	return 0
}

func (x *CreateTransactionPartySupportingCodeRequest) GetPartyCode() string {
	if x != nil {
		return x.PartyCode
	}
	return ""
}

func (x *CreateTransactionPartySupportingCodeRequest) GetPartyCodeListProvider() string {
	if x != nil {
		return x.PartyCodeListProvider
	}
	return ""
}

func (x *CreateTransactionPartySupportingCodeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateTransactionPartySupportingCodeRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *CreateTransactionPartySupportingCodeRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type CreateTransactionPartySupportingCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionPartySupportingCode *TransactionPartySupportingCode `protobuf:"bytes,1,opt,name=transaction_party_supporting_code,json=transactionPartySupportingCode,proto3" json:"transaction_party_supporting_code,omitempty"`
}

func (x *CreateTransactionPartySupportingCodeResponse) Reset() {
	*x = CreateTransactionPartySupportingCodeResponse{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTransactionPartySupportingCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionPartySupportingCodeResponse) ProtoMessage() {}

func (x *CreateTransactionPartySupportingCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionPartySupportingCodeResponse.ProtoReflect.Descriptor instead.
func (*CreateTransactionPartySupportingCodeResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{13}
}

func (x *CreateTransactionPartySupportingCodeResponse) GetTransactionPartySupportingCode() *TransactionPartySupportingCode {
	if x != nil {
		return x.TransactionPartySupportingCode
	}
	return nil
}

type UpdateTransactionPartySupportingCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionPartyId    uint32 `protobuf:"varint,1,opt,name=transaction_party_id,json=transactionPartyId,proto3" json:"transaction_party_id,omitempty"`
	PartyCode             string `protobuf:"bytes,2,opt,name=party_code,json=partyCode,proto3" json:"party_code,omitempty"`
	PartyCodeListProvider string `protobuf:"bytes,3,opt,name=party_code_list_provider,json=partyCodeListProvider,proto3" json:"party_code_list_provider,omitempty"`
	Id                    string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	UserId                string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail             string `protobuf:"bytes,6,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId             string `protobuf:"bytes,7,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *UpdateTransactionPartySupportingCodeRequest) Reset() {
	*x = UpdateTransactionPartySupportingCodeRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTransactionPartySupportingCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionPartySupportingCodeRequest) ProtoMessage() {}

func (x *UpdateTransactionPartySupportingCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionPartySupportingCodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateTransactionPartySupportingCodeRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateTransactionPartySupportingCodeRequest) GetTransactionPartyId() uint32 {
	if x != nil {
		return x.TransactionPartyId
	}
	return 0
}

func (x *UpdateTransactionPartySupportingCodeRequest) GetPartyCode() string {
	if x != nil {
		return x.PartyCode
	}
	return ""
}

func (x *UpdateTransactionPartySupportingCodeRequest) GetPartyCodeListProvider() string {
	if x != nil {
		return x.PartyCodeListProvider
	}
	return ""
}

func (x *UpdateTransactionPartySupportingCodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTransactionPartySupportingCodeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateTransactionPartySupportingCodeRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *UpdateTransactionPartySupportingCodeRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type UpdateTransactionPartySupportingCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTransactionPartySupportingCodeResponse) Reset() {
	*x = UpdateTransactionPartySupportingCodeResponse{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTransactionPartySupportingCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransactionPartySupportingCodeResponse) ProtoMessage() {}

func (x *UpdateTransactionPartySupportingCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransactionPartySupportingCodeResponse.ProtoReflect.Descriptor instead.
func (*UpdateTransactionPartySupportingCodeResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{15}
}

type TransactionPartySupportingCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionPartySupportingCodeD *TransactionPartySupportingCodeD `protobuf:"bytes,1,opt,name=transaction_party_supporting_code_d,json=transactionPartySupportingCodeD,proto3" json:"transaction_party_supporting_code_d,omitempty"`
	CrUpdUser                       *v1.CrUpdUser                    `protobuf:"bytes,2,opt,name=cr_upd_user,json=crUpdUser,proto3" json:"cr_upd_user,omitempty"`
	CrUpdTime                       *v1.CrUpdTime                    `protobuf:"bytes,3,opt,name=cr_upd_time,json=crUpdTime,proto3" json:"cr_upd_time,omitempty"`
}

func (x *TransactionPartySupportingCode) Reset() {
	*x = TransactionPartySupportingCode{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionPartySupportingCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionPartySupportingCode) ProtoMessage() {}

func (x *TransactionPartySupportingCode) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionPartySupportingCode.ProtoReflect.Descriptor instead.
func (*TransactionPartySupportingCode) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{16}
}

func (x *TransactionPartySupportingCode) GetTransactionPartySupportingCodeD() *TransactionPartySupportingCodeD {
	if x != nil {
		return x.TransactionPartySupportingCodeD
	}
	return nil
}

func (x *TransactionPartySupportingCode) GetCrUpdUser() *v1.CrUpdUser {
	if x != nil {
		return x.CrUpdUser
	}
	return nil
}

func (x *TransactionPartySupportingCode) GetCrUpdTime() *v1.CrUpdTime {
	if x != nil {
		return x.CrUpdTime
	}
	return nil
}

type TransactionPartySupportingCodeD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid4                 []byte `protobuf:"bytes,2,opt,name=uuid4,proto3" json:"uuid4,omitempty"`
	IdS                   string `protobuf:"bytes,3,opt,name=id_s,json=idS,proto3" json:"id_s,omitempty"`
	TransactionPartyId    uint32 `protobuf:"varint,4,opt,name=transaction_party_id,json=transactionPartyId,proto3" json:"transaction_party_id,omitempty"`
	PartyCode             string `protobuf:"bytes,5,opt,name=party_code,json=partyCode,proto3" json:"party_code,omitempty"`
	PartyCodeListProvider string `protobuf:"bytes,6,opt,name=party_code_list_provider,json=partyCodeListProvider,proto3" json:"party_code_list_provider,omitempty"`
}

func (x *TransactionPartySupportingCodeD) Reset() {
	*x = TransactionPartySupportingCodeD{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionPartySupportingCodeD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionPartySupportingCodeD) ProtoMessage() {}

func (x *TransactionPartySupportingCodeD) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionPartySupportingCodeD.ProtoReflect.Descriptor instead.
func (*TransactionPartySupportingCodeD) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{17}
}

func (x *TransactionPartySupportingCodeD) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransactionPartySupportingCodeD) GetUuid4() []byte {
	if x != nil {
		return x.Uuid4
	}
	return nil
}

func (x *TransactionPartySupportingCodeD) GetIdS() string {
	if x != nil {
		return x.IdS
	}
	return ""
}

func (x *TransactionPartySupportingCodeD) GetTransactionPartyId() uint32 {
	if x != nil {
		return x.TransactionPartyId
	}
	return 0
}

func (x *TransactionPartySupportingCodeD) GetPartyCode() string {
	if x != nil {
		return x.PartyCode
	}
	return ""
}

func (x *TransactionPartySupportingCodeD) GetPartyCodeListProvider() string {
	if x != nil {
		return x.PartyCodeListProvider
	}
	return ""
}

type CreateEndorsementChainLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryOrder         int32  `protobuf:"varint,1,opt,name=entry_order,json=entryOrder,proto3" json:"entry_order,omitempty"`
	ActionDateTime     string `protobuf:"bytes,2,opt,name=action_date_time,json=actionDateTime,proto3" json:"action_date_time,omitempty"`
	Actor              uint32 `protobuf:"varint,3,opt,name=actor,proto3" json:"actor,omitempty"`
	Recipient          uint32 `protobuf:"varint,4,opt,name=recipient,proto3" json:"recipient,omitempty"`
	SurrenderRequestId uint32 `protobuf:"varint,5,opt,name=surrender_request_id,json=surrenderRequestId,proto3" json:"surrender_request_id,omitempty"`
	UserId             string `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail          string `protobuf:"bytes,7,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId          string `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CreateEndorsementChainLinkRequest) Reset() {
	*x = CreateEndorsementChainLinkRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEndorsementChainLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEndorsementChainLinkRequest) ProtoMessage() {}

func (x *CreateEndorsementChainLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEndorsementChainLinkRequest.ProtoReflect.Descriptor instead.
func (*CreateEndorsementChainLinkRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{18}
}

func (x *CreateEndorsementChainLinkRequest) GetEntryOrder() int32 {
	if x != nil {
		return x.EntryOrder
	}
	return 0
}

func (x *CreateEndorsementChainLinkRequest) GetActionDateTime() string {
	if x != nil {
		return x.ActionDateTime
	}
	return ""
}

func (x *CreateEndorsementChainLinkRequest) GetActor() uint32 {
	if x != nil {
		return x.Actor
	}
	return 0
}

func (x *CreateEndorsementChainLinkRequest) GetRecipient() uint32 {
	if x != nil {
		return x.Recipient
	}
	return 0
}

func (x *CreateEndorsementChainLinkRequest) GetSurrenderRequestId() uint32 {
	if x != nil {
		return x.SurrenderRequestId
	}
	return 0
}

func (x *CreateEndorsementChainLinkRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateEndorsementChainLinkRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *CreateEndorsementChainLinkRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type CreateEndorsementChainLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndorsementChainLink *EndorsementChainLink `protobuf:"bytes,1,opt,name=endorsement_chain_link,json=endorsementChainLink,proto3" json:"endorsement_chain_link,omitempty"`
}

func (x *CreateEndorsementChainLinkResponse) Reset() {
	*x = CreateEndorsementChainLinkResponse{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEndorsementChainLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEndorsementChainLinkResponse) ProtoMessage() {}

func (x *CreateEndorsementChainLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEndorsementChainLinkResponse.ProtoReflect.Descriptor instead.
func (*CreateEndorsementChainLinkResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{19}
}

func (x *CreateEndorsementChainLinkResponse) GetEndorsementChainLink() *EndorsementChainLink {
	if x != nil {
		return x.EndorsementChainLink
	}
	return nil
}

type UpdateEndorsementChainLinkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryOrder int32  `protobuf:"varint,1,opt,name=entry_order,json=entryOrder,proto3" json:"entry_order,omitempty"`
	Actor      uint32 `protobuf:"varint,2,opt,name=actor,proto3" json:"actor,omitempty"`
	Recipient  uint32 `protobuf:"varint,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Id         string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	UserId     string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail  string `protobuf:"bytes,6,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId  string `protobuf:"bytes,7,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *UpdateEndorsementChainLinkRequest) Reset() {
	*x = UpdateEndorsementChainLinkRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEndorsementChainLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEndorsementChainLinkRequest) ProtoMessage() {}

func (x *UpdateEndorsementChainLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEndorsementChainLinkRequest.ProtoReflect.Descriptor instead.
func (*UpdateEndorsementChainLinkRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateEndorsementChainLinkRequest) GetEntryOrder() int32 {
	if x != nil {
		return x.EntryOrder
	}
	return 0
}

func (x *UpdateEndorsementChainLinkRequest) GetActor() uint32 {
	if x != nil {
		return x.Actor
	}
	return 0
}

func (x *UpdateEndorsementChainLinkRequest) GetRecipient() uint32 {
	if x != nil {
		return x.Recipient
	}
	return 0
}

func (x *UpdateEndorsementChainLinkRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateEndorsementChainLinkRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateEndorsementChainLinkRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *UpdateEndorsementChainLinkRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type UpdateEndorsementChainLinkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateEndorsementChainLinkResponse) Reset() {
	*x = UpdateEndorsementChainLinkResponse{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEndorsementChainLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEndorsementChainLinkResponse) ProtoMessage() {}

func (x *UpdateEndorsementChainLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEndorsementChainLinkResponse.ProtoReflect.Descriptor instead.
func (*UpdateEndorsementChainLinkResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{21}
}

type EndorsementChainLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EndorsementChainLinkD *EndorsementChainLinkD `protobuf:"bytes,1,opt,name=endorsement_chain_link_d,json=endorsementChainLinkD,proto3" json:"endorsement_chain_link_d,omitempty"`
	EndorsementChainLinkT *EndorsementChainLinkT `protobuf:"bytes,2,opt,name=endorsement_chain_link_t,json=endorsementChainLinkT,proto3" json:"endorsement_chain_link_t,omitempty"`
	CrUpdUser             *v1.CrUpdUser          `protobuf:"bytes,3,opt,name=cr_upd_user,json=crUpdUser,proto3" json:"cr_upd_user,omitempty"`
	CrUpdTime             *v1.CrUpdTime          `protobuf:"bytes,4,opt,name=cr_upd_time,json=crUpdTime,proto3" json:"cr_upd_time,omitempty"`
}

func (x *EndorsementChainLink) Reset() {
	*x = EndorsementChainLink{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndorsementChainLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndorsementChainLink) ProtoMessage() {}

func (x *EndorsementChainLink) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndorsementChainLink.ProtoReflect.Descriptor instead.
func (*EndorsementChainLink) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{22}
}

func (x *EndorsementChainLink) GetEndorsementChainLinkD() *EndorsementChainLinkD {
	if x != nil {
		return x.EndorsementChainLinkD
	}
	return nil
}

func (x *EndorsementChainLink) GetEndorsementChainLinkT() *EndorsementChainLinkT {
	if x != nil {
		return x.EndorsementChainLinkT
	}
	return nil
}

func (x *EndorsementChainLink) GetCrUpdUser() *v1.CrUpdUser {
	if x != nil {
		return x.CrUpdUser
	}
	return nil
}

func (x *EndorsementChainLink) GetCrUpdTime() *v1.CrUpdTime {
	if x != nil {
		return x.CrUpdTime
	}
	return nil
}

type EndorsementChainLinkD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid4              []byte `protobuf:"bytes,2,opt,name=uuid4,proto3" json:"uuid4,omitempty"`
	IdS                string `protobuf:"bytes,3,opt,name=id_s,json=idS,proto3" json:"id_s,omitempty"`
	EntryOrder         int32  `protobuf:"varint,4,opt,name=entry_order,json=entryOrder,proto3" json:"entry_order,omitempty"`
	Actor              uint32 `protobuf:"varint,5,opt,name=actor,proto3" json:"actor,omitempty"`
	Recipient          uint32 `protobuf:"varint,6,opt,name=recipient,proto3" json:"recipient,omitempty"`
	SurrenderRequestId uint32 `protobuf:"varint,7,opt,name=surrender_request_id,json=surrenderRequestId,proto3" json:"surrender_request_id,omitempty"`
}

func (x *EndorsementChainLinkD) Reset() {
	*x = EndorsementChainLinkD{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndorsementChainLinkD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndorsementChainLinkD) ProtoMessage() {}

func (x *EndorsementChainLinkD) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndorsementChainLinkD.ProtoReflect.Descriptor instead.
func (*EndorsementChainLinkD) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{23}
}

func (x *EndorsementChainLinkD) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EndorsementChainLinkD) GetUuid4() []byte {
	if x != nil {
		return x.Uuid4
	}
	return nil
}

func (x *EndorsementChainLinkD) GetIdS() string {
	if x != nil {
		return x.IdS
	}
	return ""
}

func (x *EndorsementChainLinkD) GetEntryOrder() int32 {
	if x != nil {
		return x.EntryOrder
	}
	return 0
}

func (x *EndorsementChainLinkD) GetActor() uint32 {
	if x != nil {
		return x.Actor
	}
	return 0
}

func (x *EndorsementChainLinkD) GetRecipient() uint32 {
	if x != nil {
		return x.Recipient
	}
	return 0
}

func (x *EndorsementChainLinkD) GetSurrenderRequestId() uint32 {
	if x != nil {
		return x.SurrenderRequestId
	}
	return 0
}

type EndorsementChainLinkT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionDateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=action_date_time,json=actionDateTime,proto3" json:"action_date_time,omitempty"`
}

func (x *EndorsementChainLinkT) Reset() {
	*x = EndorsementChainLinkT{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EndorsementChainLinkT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndorsementChainLinkT) ProtoMessage() {}

func (x *EndorsementChainLinkT) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndorsementChainLinkT.ProtoReflect.Descriptor instead.
func (*EndorsementChainLinkT) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{24}
}

func (x *EndorsementChainLinkT) GetActionDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ActionDateTime
	}
	return nil
}

type CreateSurrenderRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurrenderRequestReference  string `protobuf:"bytes,1,opt,name=surrender_request_reference,json=surrenderRequestReference,proto3" json:"surrender_request_reference,omitempty"`
	TransportDocumentReference string `protobuf:"bytes,2,opt,name=transport_document_reference,json=transportDocumentReference,proto3" json:"transport_document_reference,omitempty"`
	SurrenderRequestCode       string `protobuf:"bytes,3,opt,name=surrender_request_code,json=surrenderRequestCode,proto3" json:"surrender_request_code,omitempty"`
	Comments                   string `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
	SurrenderRequestedBy       uint32 `protobuf:"varint,5,opt,name=surrender_requested_by,json=surrenderRequestedBy,proto3" json:"surrender_requested_by,omitempty"`
	CreatedDateTime            string `protobuf:"bytes,6,opt,name=created_date_time,json=createdDateTime,proto3" json:"created_date_time,omitempty"`
	UserId                     string `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail                  string `protobuf:"bytes,8,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId                  string `protobuf:"bytes,9,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CreateSurrenderRequestRequest) Reset() {
	*x = CreateSurrenderRequestRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSurrenderRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSurrenderRequestRequest) ProtoMessage() {}

func (x *CreateSurrenderRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSurrenderRequestRequest.ProtoReflect.Descriptor instead.
func (*CreateSurrenderRequestRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{25}
}

func (x *CreateSurrenderRequestRequest) GetSurrenderRequestReference() string {
	if x != nil {
		return x.SurrenderRequestReference
	}
	return ""
}

func (x *CreateSurrenderRequestRequest) GetTransportDocumentReference() string {
	if x != nil {
		return x.TransportDocumentReference
	}
	return ""
}

func (x *CreateSurrenderRequestRequest) GetSurrenderRequestCode() string {
	if x != nil {
		return x.SurrenderRequestCode
	}
	return ""
}

func (x *CreateSurrenderRequestRequest) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *CreateSurrenderRequestRequest) GetSurrenderRequestedBy() uint32 {
	if x != nil {
		return x.SurrenderRequestedBy
	}
	return 0
}

func (x *CreateSurrenderRequestRequest) GetCreatedDateTime() string {
	if x != nil {
		return x.CreatedDateTime
	}
	return ""
}

func (x *CreateSurrenderRequestRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateSurrenderRequestRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *CreateSurrenderRequestRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type CreateSurrenderRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurrenderRequest *SurrenderRequest `protobuf:"bytes,1,opt,name=surrender_request,json=surrenderRequest,proto3" json:"surrender_request,omitempty"`
}

func (x *CreateSurrenderRequestResponse) Reset() {
	*x = CreateSurrenderRequestResponse{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSurrenderRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSurrenderRequestResponse) ProtoMessage() {}

func (x *CreateSurrenderRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSurrenderRequestResponse.ProtoReflect.Descriptor instead.
func (*CreateSurrenderRequestResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{26}
}

func (x *CreateSurrenderRequestResponse) GetSurrenderRequest() *SurrenderRequest {
	if x != nil {
		return x.SurrenderRequest
	}
	return nil
}

type UpdateSurrenderRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurrenderRequestReference  string `protobuf:"bytes,1,opt,name=surrender_request_reference,json=surrenderRequestReference,proto3" json:"surrender_request_reference,omitempty"`
	TransportDocumentReference string `protobuf:"bytes,2,opt,name=transport_document_reference,json=transportDocumentReference,proto3" json:"transport_document_reference,omitempty"`
	SurrenderRequestCode       string `protobuf:"bytes,3,opt,name=surrender_request_code,json=surrenderRequestCode,proto3" json:"surrender_request_code,omitempty"`
	Comments                   string `protobuf:"bytes,4,opt,name=comments,proto3" json:"comments,omitempty"`
	Id                         string `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	UserId                     string `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail                  string `protobuf:"bytes,7,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId                  string `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *UpdateSurrenderRequestRequest) Reset() {
	*x = UpdateSurrenderRequestRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSurrenderRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSurrenderRequestRequest) ProtoMessage() {}

func (x *UpdateSurrenderRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSurrenderRequestRequest.ProtoReflect.Descriptor instead.
func (*UpdateSurrenderRequestRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateSurrenderRequestRequest) GetSurrenderRequestReference() string {
	if x != nil {
		return x.SurrenderRequestReference
	}
	return ""
}

func (x *UpdateSurrenderRequestRequest) GetTransportDocumentReference() string {
	if x != nil {
		return x.TransportDocumentReference
	}
	return ""
}

func (x *UpdateSurrenderRequestRequest) GetSurrenderRequestCode() string {
	if x != nil {
		return x.SurrenderRequestCode
	}
	return ""
}

func (x *UpdateSurrenderRequestRequest) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *UpdateSurrenderRequestRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateSurrenderRequestRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateSurrenderRequestRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *UpdateSurrenderRequestRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type UpdateSurrenderRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSurrenderRequestResponse) Reset() {
	*x = UpdateSurrenderRequestResponse{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSurrenderRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSurrenderRequestResponse) ProtoMessage() {}

func (x *UpdateSurrenderRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSurrenderRequestResponse.ProtoReflect.Descriptor instead.
func (*UpdateSurrenderRequestResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{28}
}

type SurrenderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurrenderRequestD *SurrenderRequestD `protobuf:"bytes,1,opt,name=surrender_request_d,json=surrenderRequestD,proto3" json:"surrender_request_d,omitempty"`
	SurrenderRequestT *SurrenderRequestT `protobuf:"bytes,2,opt,name=surrender_request_t,json=surrenderRequestT,proto3" json:"surrender_request_t,omitempty"`
	CrUpdUser         *v1.CrUpdUser      `protobuf:"bytes,3,opt,name=cr_upd_user,json=crUpdUser,proto3" json:"cr_upd_user,omitempty"`
	CrUpdTime         *v1.CrUpdTime      `protobuf:"bytes,4,opt,name=cr_upd_time,json=crUpdTime,proto3" json:"cr_upd_time,omitempty"`
}

func (x *SurrenderRequest) Reset() {
	*x = SurrenderRequest{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SurrenderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderRequest) ProtoMessage() {}

func (x *SurrenderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderRequest.ProtoReflect.Descriptor instead.
func (*SurrenderRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{29}
}

func (x *SurrenderRequest) GetSurrenderRequestD() *SurrenderRequestD {
	if x != nil {
		return x.SurrenderRequestD
	}
	return nil
}

func (x *SurrenderRequest) GetSurrenderRequestT() *SurrenderRequestT {
	if x != nil {
		return x.SurrenderRequestT
	}
	return nil
}

func (x *SurrenderRequest) GetCrUpdUser() *v1.CrUpdUser {
	if x != nil {
		return x.CrUpdUser
	}
	return nil
}

func (x *SurrenderRequest) GetCrUpdTime() *v1.CrUpdTime {
	if x != nil {
		return x.CrUpdTime
	}
	return nil
}

type SurrenderRequestD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid4                      []byte `protobuf:"bytes,2,opt,name=uuid4,proto3" json:"uuid4,omitempty"`
	IdS                        string `protobuf:"bytes,3,opt,name=id_s,json=idS,proto3" json:"id_s,omitempty"`
	SurrenderRequestReference  string `protobuf:"bytes,4,opt,name=surrender_request_reference,json=surrenderRequestReference,proto3" json:"surrender_request_reference,omitempty"`
	TransportDocumentReference string `protobuf:"bytes,5,opt,name=transport_document_reference,json=transportDocumentReference,proto3" json:"transport_document_reference,omitempty"`
	SurrenderRequestCode       string `protobuf:"bytes,6,opt,name=surrender_request_code,json=surrenderRequestCode,proto3" json:"surrender_request_code,omitempty"`
	Comments                   string `protobuf:"bytes,7,opt,name=comments,proto3" json:"comments,omitempty"`
	SurrenderRequestedBy       uint32 `protobuf:"varint,8,opt,name=surrender_requested_by,json=surrenderRequestedBy,proto3" json:"surrender_requested_by,omitempty"`
}

func (x *SurrenderRequestD) Reset() {
	*x = SurrenderRequestD{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SurrenderRequestD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderRequestD) ProtoMessage() {}

func (x *SurrenderRequestD) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderRequestD.ProtoReflect.Descriptor instead.
func (*SurrenderRequestD) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{30}
}

func (x *SurrenderRequestD) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SurrenderRequestD) GetUuid4() []byte {
	if x != nil {
		return x.Uuid4
	}
	return nil
}

func (x *SurrenderRequestD) GetIdS() string {
	if x != nil {
		return x.IdS
	}
	return ""
}

func (x *SurrenderRequestD) GetSurrenderRequestReference() string {
	if x != nil {
		return x.SurrenderRequestReference
	}
	return ""
}

func (x *SurrenderRequestD) GetTransportDocumentReference() string {
	if x != nil {
		return x.TransportDocumentReference
	}
	return ""
}

func (x *SurrenderRequestD) GetSurrenderRequestCode() string {
	if x != nil {
		return x.SurrenderRequestCode
	}
	return ""
}

func (x *SurrenderRequestD) GetComments() string {
	if x != nil {
		return x.Comments
	}
	return ""
}

func (x *SurrenderRequestD) GetSurrenderRequestedBy() uint32 {
	if x != nil {
		return x.SurrenderRequestedBy
	}
	return 0
}

type SurrenderRequestT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedDateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_date_time,json=createdDateTime,proto3" json:"created_date_time,omitempty"`
}

func (x *SurrenderRequestT) Reset() {
	*x = SurrenderRequestT{}
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SurrenderRequestT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurrenderRequestT) ProtoMessage() {}

func (x *SurrenderRequestT) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_surrenderrequest_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurrenderRequestT.ProtoReflect.Descriptor instead.
func (*SurrenderRequestT) Descriptor() ([]byte, []int) {
	return file_ebl_v1_surrenderrequest_proto_rawDescGZIP(), []int{31}
}

func (x *SurrenderRequestT) GetCreatedDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDateTime
	}
	return nil
}

var File_ebl_v1_surrenderrequest_proto protoreflect.FileDescriptor

var file_ebl_v1_surrenderrequest_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x65, 0x62, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x06, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc8, 0x03,
	0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x17, 0x65, 0x62, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x12, 0xba, 0x48, 0x0f, 0x72, 0x0d, 0x18, 0x64, 0x32, 0x09, 0x5e, 0x5c, 0x53, 0x2b, 0x40,
	0x5c, 0x53, 0x2b, 0x24, 0x52, 0x15, 0x65, 0x62, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0a, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x17, 0xba, 0x48, 0x14, 0x72, 0x12, 0x18, 0x64, 0x32, 0x0e, 0x5e, 0x5c, 0x53, 0x2b, 0x28, 0x5c,
	0x73, 0x2b, 0x5c, 0x53, 0x2b, 0x29, 0x2a, 0x24, 0x52, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x17, 0xba, 0x48, 0x14, 0x72, 0x12, 0x18, 0x64, 0x32, 0x0e, 0x5e, 0x5c, 0x53, 0x2b, 0x28,
	0x5c, 0x73, 0x2b, 0x5c, 0x53, 0x2b, 0x29, 0x2a, 0x24, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4d, 0x0a,
	0x18, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x13, 0xba, 0x48, 0x10, 0x72, 0x0e, 0x18, 0x02, 0x32, 0x0a, 0x5e, 0x5b, 0x41, 0x2d, 0x5a, 0x5d,
	0x7b, 0x32, 0x7d, 0x24, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0d,
	0x74, 0x61, 0x78, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0e, 0xba, 0x48, 0x0b, 0x72, 0x09, 0x18, 0x64, 0x32, 0x05, 0x5e, 0x5c,
	0x53, 0x2b, 0x24, 0x52, 0x0c, 0x74, 0x61, 0x78, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x11, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52,
	0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x22, 0xc8, 0x02, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x62, 0x6c, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x62, 0x6c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x18, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc9,
	0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x44, 0x52, 0x11, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x44, 0x12, 0x34,
	0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xb3, 0x02, 0x0a, 0x11, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x44,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x12, 0x11, 0x0a, 0x04, 0x69, 0x64, 0x5f, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x53, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x62, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x62, 0x6c, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x38, 0x0a, 0x18, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x61, 0x78, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x78, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x54, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x22, 0x93, 0x01, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x12, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x22, 0x66, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x42, 0x79, 0x50, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x44, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x67, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x42,
	0x79, 0x50, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x11, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x22, 0xaf, 0x02, 0x0a, 0x2b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0xba, 0x48, 0x13, 0x72, 0x11, 0x18,
	0x64, 0x32, 0x0d, 0x5e, 0x5c, 0x53, 0x2b, 0x28, 0x5c, 0x73, 0x2b, 0x5c, 0x53, 0x2b, 0x29, 0x2a,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x18, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x15, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x2c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x21, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x1e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x2b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16,
	0xba, 0x48, 0x13, 0x72, 0x11, 0x18, 0x64, 0x32, 0x0d, 0x5e, 0x5c, 0x53, 0x2b, 0x28, 0x5c, 0x73,
	0x2b, 0x5c, 0x53, 0x2b, 0x29, 0x2a, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x40, 0x0a, 0x18, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x15, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x2c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x1e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x75, 0x0a,
	0x23, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x62, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x64, 0x65, 0x44, 0x52, 0x1f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x44, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72,
	0x5f, 0x75, 0x70, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0xe4, 0x01, 0x0a, 0x1f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x12, 0x11, 0x0a, 0x04, 0x69, 0x64,
	0x5f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x53, 0x12, 0x30, 0x0a,
	0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x37,
	0x0a, 0x18, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x70, 0x61, 0x72, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xbd, 0x02, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xba, 0x48, 0x04, 0x2a, 0x02, 0x20, 0x00,
	0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xba, 0x48, 0x04, 0x2a,
	0x02, 0x20, 0x00, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x30,
	0x0a, 0x14, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x78, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a,
	0x16, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x14, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e,
	0x6b, 0x22, 0xdf, 0x01, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2, 0x02, 0x0a, 0x14, 0x45, 0x6e,
	0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x56, 0x0a, 0x18, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69,
	0x6e, 0x6b, 0x44, 0x52, 0x15, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x12, 0x56, 0x0a, 0x18, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x52, 0x15, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e,
	0x6b, 0x54, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x63,
	0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75,
	0x70, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xd7,
	0x01, 0x0a, 0x15, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64,
	0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x12, 0x11,
	0x0a, 0x04, 0x69, 0x64, 0x5f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64,
	0x53, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x15, 0x45, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b,
	0x54, 0x12, 0x44, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xe8, 0x03, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x1b, 0x73, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17,
	0xba, 0x48, 0x14, 0x72, 0x12, 0x18, 0x64, 0x32, 0x0e, 0x5e, 0x5c, 0x53, 0x2b, 0x28, 0x5c, 0x73,
	0x2b, 0x5c, 0x53, 0x2b, 0x29, 0x2a, 0x24, 0x52, 0x19, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x59, 0x0a, 0x1c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xba, 0x48, 0x14, 0x72, 0x12, 0x18,
	0x14, 0x32, 0x0e, 0x5e, 0x5c, 0x53, 0x2b, 0x28, 0x5c, 0x73, 0x2b, 0x5c, 0x53, 0x2b, 0x29, 0x2a,
	0x24, 0x52, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a,
	0x16, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x18, 0xff, 0x01, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x73, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x2a, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x67, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x11, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x73, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xda, 0x02, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x1b, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x19, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x40, 0x0a,
	0x1c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x34, 0x0a, 0x16, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x02, 0x0a, 0x10, 0x53,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x49, 0x0a, 0x13, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65,
	0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x52, 0x11, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x12, 0x49, 0x0a, 0x13, 0x73, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x52, 0x11, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0b, 0x63,
	0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55,
	0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xd6, 0x02, 0x0a, 0x11, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x12, 0x11, 0x0a,
	0x04, 0x69, 0x64, 0x5f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x53,
	0x12, 0x3e, 0x0a, 0x1b, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x40, 0x0a, 0x1c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x73, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x5b, 0x0a, 0x11, 0x53, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x12,
	0x46, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x81, 0x0a, 0x0a, 0x17, 0x53, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x67, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x25, 0x2e,
	0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12, 0x25, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x24,
	0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x12, 0x22, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x42, 0x79, 0x50, 0x6b, 0x12, 0x26, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x42, 0x79, 0x50, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x42, 0x79, 0x50, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x33, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x24,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65, 0x62, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x67, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x65, 0x62, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x65, 0x62, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x73, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x6f, 0x72,
	0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x29, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x62, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x29, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66,
	0x72, 0x65, 0x73, 0x63, 0x6f, 0x2f, 0x73, 0x63, 0x2d, 0x64, 0x63, 0x73, 0x61, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f,
	0x65, 0x62, 0x6c, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ebl_v1_surrenderrequest_proto_rawDescOnce sync.Once
	file_ebl_v1_surrenderrequest_proto_rawDescData = file_ebl_v1_surrenderrequest_proto_rawDesc
)

func file_ebl_v1_surrenderrequest_proto_rawDescGZIP() []byte {
	file_ebl_v1_surrenderrequest_proto_rawDescOnce.Do(func() {
		file_ebl_v1_surrenderrequest_proto_rawDescData = protoimpl.X.CompressGZIP(file_ebl_v1_surrenderrequest_proto_rawDescData)
	})
	return file_ebl_v1_surrenderrequest_proto_rawDescData
}

var file_ebl_v1_surrenderrequest_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_ebl_v1_surrenderrequest_proto_goTypes = []any{
	(*CreateTransactionPartyRequest)(nil),                // 0: ebl.v1.CreateTransactionPartyRequest
	(*CreateTransactionPartyResponse)(nil),               // 1: ebl.v1.CreateTransactionPartyResponse
	(*UpdateTransactionPartyRequest)(nil),                // 2: ebl.v1.UpdateTransactionPartyRequest
	(*UpdateTransactionPartyResponse)(nil),               // 3: ebl.v1.UpdateTransactionPartyResponse
	(*TransactionParty)(nil),                             // 4: ebl.v1.TransactionParty
	(*TransactionPartyD)(nil),                            // 5: ebl.v1.TransactionPartyD
	(*GetTransactionPartyRequest)(nil),                   // 6: ebl.v1.GetTransactionPartyRequest
	(*GetTransactionPartyResponse)(nil),                  // 7: ebl.v1.GetTransactionPartyResponse
	(*GetTransactionPartiesRequest)(nil),                 // 8: ebl.v1.GetTransactionPartiesRequest
	(*GetTransactionPartiesResponse)(nil),                // 9: ebl.v1.GetTransactionPartiesResponse
	(*GetTransactionPartyByPkRequest)(nil),               // 10: ebl.v1.GetTransactionPartyByPkRequest
	(*GetTransactionPartyByPkResponse)(nil),              // 11: ebl.v1.GetTransactionPartyByPkResponse
	(*CreateTransactionPartySupportingCodeRequest)(nil),  // 12: ebl.v1.CreateTransactionPartySupportingCodeRequest
	(*CreateTransactionPartySupportingCodeResponse)(nil), // 13: ebl.v1.CreateTransactionPartySupportingCodeResponse
	(*UpdateTransactionPartySupportingCodeRequest)(nil),  // 14: ebl.v1.UpdateTransactionPartySupportingCodeRequest
	(*UpdateTransactionPartySupportingCodeResponse)(nil), // 15: ebl.v1.UpdateTransactionPartySupportingCodeResponse
	(*TransactionPartySupportingCode)(nil),               // 16: ebl.v1.TransactionPartySupportingCode
	(*TransactionPartySupportingCodeD)(nil),              // 17: ebl.v1.TransactionPartySupportingCodeD
	(*CreateEndorsementChainLinkRequest)(nil),            // 18: ebl.v1.CreateEndorsementChainLinkRequest
	(*CreateEndorsementChainLinkResponse)(nil),           // 19: ebl.v1.CreateEndorsementChainLinkResponse
	(*UpdateEndorsementChainLinkRequest)(nil),            // 20: ebl.v1.UpdateEndorsementChainLinkRequest
	(*UpdateEndorsementChainLinkResponse)(nil),           // 21: ebl.v1.UpdateEndorsementChainLinkResponse
	(*EndorsementChainLink)(nil),                         // 22: ebl.v1.EndorsementChainLink
	(*EndorsementChainLinkD)(nil),                        // 23: ebl.v1.EndorsementChainLinkD
	(*EndorsementChainLinkT)(nil),                        // 24: ebl.v1.EndorsementChainLinkT
	(*CreateSurrenderRequestRequest)(nil),                // 25: ebl.v1.CreateSurrenderRequestRequest
	(*CreateSurrenderRequestResponse)(nil),               // 26: ebl.v1.CreateSurrenderRequestResponse
	(*UpdateSurrenderRequestRequest)(nil),                // 27: ebl.v1.UpdateSurrenderRequestRequest
	(*UpdateSurrenderRequestResponse)(nil),               // 28: ebl.v1.UpdateSurrenderRequestResponse
	(*SurrenderRequest)(nil),                             // 29: ebl.v1.SurrenderRequest
	(*SurrenderRequestD)(nil),                            // 30: ebl.v1.SurrenderRequestD
	(*SurrenderRequestT)(nil),                            // 31: ebl.v1.SurrenderRequestT
	(*v1.CrUpdUser)(nil),                                 // 32: common.v1.CrUpdUser
	(*v1.CrUpdTime)(nil),                                 // 33: common.v1.CrUpdTime
	(*v1.GetRequest)(nil),                                // 34: common.v1.GetRequest
	(*v1.GetByIdRequest)(nil),                            // 35: common.v1.GetByIdRequest
	(*timestamppb.Timestamp)(nil),                        // 36: google.protobuf.Timestamp
}
var file_ebl_v1_surrenderrequest_proto_depIdxs = []int32{
	4,  // 0: ebl.v1.CreateTransactionPartyResponse.transaction_party:type_name -> ebl.v1.TransactionParty
	5,  // 1: ebl.v1.TransactionParty.transaction_party_d:type_name -> ebl.v1.TransactionPartyD
	32, // 2: ebl.v1.TransactionParty.cr_upd_user:type_name -> common.v1.CrUpdUser
	33, // 3: ebl.v1.TransactionParty.cr_upd_time:type_name -> common.v1.CrUpdTime
	34, // 4: ebl.v1.GetTransactionPartyRequest.get_request:type_name -> common.v1.GetRequest
	4,  // 5: ebl.v1.GetTransactionPartyResponse.transaction_party:type_name -> ebl.v1.TransactionParty
	4,  // 6: ebl.v1.GetTransactionPartiesResponse.transaction_parties:type_name -> ebl.v1.TransactionParty
	35, // 7: ebl.v1.GetTransactionPartyByPkRequest.get_by_id_request:type_name -> common.v1.GetByIdRequest
	4,  // 8: ebl.v1.GetTransactionPartyByPkResponse.transaction_party:type_name -> ebl.v1.TransactionParty
	16, // 9: ebl.v1.CreateTransactionPartySupportingCodeResponse.transaction_party_supporting_code:type_name -> ebl.v1.TransactionPartySupportingCode
	17, // 10: ebl.v1.TransactionPartySupportingCode.transaction_party_supporting_code_d:type_name -> ebl.v1.TransactionPartySupportingCodeD
	32, // 11: ebl.v1.TransactionPartySupportingCode.cr_upd_user:type_name -> common.v1.CrUpdUser
	33, // 12: ebl.v1.TransactionPartySupportingCode.cr_upd_time:type_name -> common.v1.CrUpdTime
	22, // 13: ebl.v1.CreateEndorsementChainLinkResponse.endorsement_chain_link:type_name -> ebl.v1.EndorsementChainLink
	23, // 14: ebl.v1.EndorsementChainLink.endorsement_chain_link_d:type_name -> ebl.v1.EndorsementChainLinkD
	24, // 15: ebl.v1.EndorsementChainLink.endorsement_chain_link_t:type_name -> ebl.v1.EndorsementChainLinkT
	32, // 16: ebl.v1.EndorsementChainLink.cr_upd_user:type_name -> common.v1.CrUpdUser
	33, // 17: ebl.v1.EndorsementChainLink.cr_upd_time:type_name -> common.v1.CrUpdTime
	36, // 18: ebl.v1.EndorsementChainLinkT.action_date_time:type_name -> google.protobuf.Timestamp
	29, // 19: ebl.v1.CreateSurrenderRequestResponse.surrender_request:type_name -> ebl.v1.SurrenderRequest
	30, // 20: ebl.v1.SurrenderRequest.surrender_request_d:type_name -> ebl.v1.SurrenderRequestD
	31, // 21: ebl.v1.SurrenderRequest.surrender_request_t:type_name -> ebl.v1.SurrenderRequestT
	32, // 22: ebl.v1.SurrenderRequest.cr_upd_user:type_name -> common.v1.CrUpdUser
	33, // 23: ebl.v1.SurrenderRequest.cr_upd_time:type_name -> common.v1.CrUpdTime
	36, // 24: ebl.v1.SurrenderRequestT.created_date_time:type_name -> google.protobuf.Timestamp
	0,  // 25: ebl.v1.SurrenderRequestService.CreateTransactionParty:input_type -> ebl.v1.CreateTransactionPartyRequest
	2,  // 26: ebl.v1.SurrenderRequestService.UpdateTransactionParty:input_type -> ebl.v1.UpdateTransactionPartyRequest
	8,  // 27: ebl.v1.SurrenderRequestService.GetTransactionParties:input_type -> ebl.v1.GetTransactionPartiesRequest
	6,  // 28: ebl.v1.SurrenderRequestService.GetTransactionParty:input_type -> ebl.v1.GetTransactionPartyRequest
	10, // 29: ebl.v1.SurrenderRequestService.GetTransactionPartyByPk:input_type -> ebl.v1.GetTransactionPartyByPkRequest
	12, // 30: ebl.v1.SurrenderRequestService.CreateTransactionPartySupportingCode:input_type -> ebl.v1.CreateTransactionPartySupportingCodeRequest
	14, // 31: ebl.v1.SurrenderRequestService.UpdateTransactionPartySupportingCode:input_type -> ebl.v1.UpdateTransactionPartySupportingCodeRequest
	25, // 32: ebl.v1.SurrenderRequestService.CreateSurrenderRequest:input_type -> ebl.v1.CreateSurrenderRequestRequest
	27, // 33: ebl.v1.SurrenderRequestService.UpdateSurrenderRequest:input_type -> ebl.v1.UpdateSurrenderRequestRequest
	18, // 34: ebl.v1.SurrenderRequestService.CreateEndorsementChainLink:input_type -> ebl.v1.CreateEndorsementChainLinkRequest
	20, // 35: ebl.v1.SurrenderRequestService.UpdateEndorsementChainLink:input_type -> ebl.v1.UpdateEndorsementChainLinkRequest
	1,  // 36: ebl.v1.SurrenderRequestService.CreateTransactionParty:output_type -> ebl.v1.CreateTransactionPartyResponse
	3,  // 37: ebl.v1.SurrenderRequestService.UpdateTransactionParty:output_type -> ebl.v1.UpdateTransactionPartyResponse
	9,  // 38: ebl.v1.SurrenderRequestService.GetTransactionParties:output_type -> ebl.v1.GetTransactionPartiesResponse
	7,  // 39: ebl.v1.SurrenderRequestService.GetTransactionParty:output_type -> ebl.v1.GetTransactionPartyResponse
	11, // 40: ebl.v1.SurrenderRequestService.GetTransactionPartyByPk:output_type -> ebl.v1.GetTransactionPartyByPkResponse
	13, // 41: ebl.v1.SurrenderRequestService.CreateTransactionPartySupportingCode:output_type -> ebl.v1.CreateTransactionPartySupportingCodeResponse
	15, // 42: ebl.v1.SurrenderRequestService.UpdateTransactionPartySupportingCode:output_type -> ebl.v1.UpdateTransactionPartySupportingCodeResponse
	26, // 43: ebl.v1.SurrenderRequestService.CreateSurrenderRequest:output_type -> ebl.v1.CreateSurrenderRequestResponse
	28, // 44: ebl.v1.SurrenderRequestService.UpdateSurrenderRequest:output_type -> ebl.v1.UpdateSurrenderRequestResponse
	19, // 45: ebl.v1.SurrenderRequestService.CreateEndorsementChainLink:output_type -> ebl.v1.CreateEndorsementChainLinkResponse
	21, // 46: ebl.v1.SurrenderRequestService.UpdateEndorsementChainLink:output_type -> ebl.v1.UpdateEndorsementChainLinkResponse
	36, // [36:47] is the sub-list for method output_type
	25, // [25:36] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_ebl_v1_surrenderrequest_proto_init() }
func file_ebl_v1_surrenderrequest_proto_init() {
	if File_ebl_v1_surrenderrequest_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ebl_v1_surrenderrequest_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ebl_v1_surrenderrequest_proto_goTypes,
		DependencyIndexes: file_ebl_v1_surrenderrequest_proto_depIdxs,
		MessageInfos:      file_ebl_v1_surrenderrequest_proto_msgTypes,
	}.Build()
	File_ebl_v1_surrenderrequest_proto = out.File
	file_ebl_v1_surrenderrequest_proto_rawDesc = nil
	file_ebl_v1_surrenderrequest_proto_goTypes = nil
	file_ebl_v1_surrenderrequest_proto_depIdxs = nil
}
