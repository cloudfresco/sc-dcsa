// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: ebl/v1/shippinginstruction.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	ShippingInstructionService_CreateShippingInstruction_FullMethodName                               = "/ebl.v1.ShippingInstructionService/CreateShippingInstruction"
	ShippingInstructionService_GetShippingInstructions_FullMethodName                                 = "/ebl.v1.ShippingInstructionService/GetShippingInstructions"
	ShippingInstructionService_FindById_FullMethodName                                                = "/ebl.v1.ShippingInstructionService/FindById"
	ShippingInstructionService_GetShippingInstructionByPk_FullMethodName                              = "/ebl.v1.ShippingInstructionService/GetShippingInstructionByPk"
	ShippingInstructionService_FindByReference_FullMethodName                                         = "/ebl.v1.ShippingInstructionService/FindByReference"
	ShippingInstructionService_UpdateShippingInstructionByShippingInstructionReference_FullMethodName = "/ebl.v1.ShippingInstructionService/UpdateShippingInstructionByShippingInstructionReference"
)

// ShippingInstructionServiceClient is the client API for ShippingInstructionService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// The ShippingInstructionService service definition.
type ShippingInstructionServiceClient interface {
	CreateShippingInstruction(ctx context.Context, in *CreateShippingInstructionRequest, opts ...grpc.CallOption) (*CreateShippingInstructionResponse, error)
	GetShippingInstructions(ctx context.Context, in *GetShippingInstructionsRequest, opts ...grpc.CallOption) (*GetShippingInstructionsResponse, error)
	FindById(ctx context.Context, in *FindByIdRequest, opts ...grpc.CallOption) (*FindByIdResponse, error)
	GetShippingInstructionByPk(ctx context.Context, in *GetShippingInstructionByPkRequest, opts ...grpc.CallOption) (*GetShippingInstructionByPkResponse, error)
	FindByReference(ctx context.Context, in *FindByReferenceRequest, opts ...grpc.CallOption) (*FindByReferenceResponse, error)
	UpdateShippingInstructionByShippingInstructionReference(ctx context.Context, in *UpdateShippingInstructionByShippingInstructionReferenceRequest, opts ...grpc.CallOption) (*UpdateShippingInstructionByShippingInstructionReferenceResponse, error)
}

type shippingInstructionServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewShippingInstructionServiceClient(cc grpc.ClientConnInterface) ShippingInstructionServiceClient {
	return &shippingInstructionServiceClient{cc}
}

func (c *shippingInstructionServiceClient) CreateShippingInstruction(ctx context.Context, in *CreateShippingInstructionRequest, opts ...grpc.CallOption) (*CreateShippingInstructionResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateShippingInstructionResponse)
	err := c.cc.Invoke(ctx, ShippingInstructionService_CreateShippingInstruction_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingInstructionServiceClient) GetShippingInstructions(ctx context.Context, in *GetShippingInstructionsRequest, opts ...grpc.CallOption) (*GetShippingInstructionsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetShippingInstructionsResponse)
	err := c.cc.Invoke(ctx, ShippingInstructionService_GetShippingInstructions_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingInstructionServiceClient) FindById(ctx context.Context, in *FindByIdRequest, opts ...grpc.CallOption) (*FindByIdResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(FindByIdResponse)
	err := c.cc.Invoke(ctx, ShippingInstructionService_FindById_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingInstructionServiceClient) GetShippingInstructionByPk(ctx context.Context, in *GetShippingInstructionByPkRequest, opts ...grpc.CallOption) (*GetShippingInstructionByPkResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetShippingInstructionByPkResponse)
	err := c.cc.Invoke(ctx, ShippingInstructionService_GetShippingInstructionByPk_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingInstructionServiceClient) FindByReference(ctx context.Context, in *FindByReferenceRequest, opts ...grpc.CallOption) (*FindByReferenceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(FindByReferenceResponse)
	err := c.cc.Invoke(ctx, ShippingInstructionService_FindByReference_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shippingInstructionServiceClient) UpdateShippingInstructionByShippingInstructionReference(ctx context.Context, in *UpdateShippingInstructionByShippingInstructionReferenceRequest, opts ...grpc.CallOption) (*UpdateShippingInstructionByShippingInstructionReferenceResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateShippingInstructionByShippingInstructionReferenceResponse)
	err := c.cc.Invoke(ctx, ShippingInstructionService_UpdateShippingInstructionByShippingInstructionReference_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShippingInstructionServiceServer is the server API for ShippingInstructionService service.
// All implementations must embed UnimplementedShippingInstructionServiceServer
// for forward compatibility.
//
// The ShippingInstructionService service definition.
type ShippingInstructionServiceServer interface {
	CreateShippingInstruction(context.Context, *CreateShippingInstructionRequest) (*CreateShippingInstructionResponse, error)
	GetShippingInstructions(context.Context, *GetShippingInstructionsRequest) (*GetShippingInstructionsResponse, error)
	FindById(context.Context, *FindByIdRequest) (*FindByIdResponse, error)
	GetShippingInstructionByPk(context.Context, *GetShippingInstructionByPkRequest) (*GetShippingInstructionByPkResponse, error)
	FindByReference(context.Context, *FindByReferenceRequest) (*FindByReferenceResponse, error)
	UpdateShippingInstructionByShippingInstructionReference(context.Context, *UpdateShippingInstructionByShippingInstructionReferenceRequest) (*UpdateShippingInstructionByShippingInstructionReferenceResponse, error)
	mustEmbedUnimplementedShippingInstructionServiceServer()
}

// UnimplementedShippingInstructionServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedShippingInstructionServiceServer struct{}

func (UnimplementedShippingInstructionServiceServer) CreateShippingInstruction(context.Context, *CreateShippingInstructionRequest) (*CreateShippingInstructionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShippingInstruction not implemented")
}
func (UnimplementedShippingInstructionServiceServer) GetShippingInstructions(context.Context, *GetShippingInstructionsRequest) (*GetShippingInstructionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShippingInstructions not implemented")
}
func (UnimplementedShippingInstructionServiceServer) FindById(context.Context, *FindByIdRequest) (*FindByIdResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindById not implemented")
}
func (UnimplementedShippingInstructionServiceServer) GetShippingInstructionByPk(context.Context, *GetShippingInstructionByPkRequest) (*GetShippingInstructionByPkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShippingInstructionByPk not implemented")
}
func (UnimplementedShippingInstructionServiceServer) FindByReference(context.Context, *FindByReferenceRequest) (*FindByReferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByReference not implemented")
}
func (UnimplementedShippingInstructionServiceServer) UpdateShippingInstructionByShippingInstructionReference(context.Context, *UpdateShippingInstructionByShippingInstructionReferenceRequest) (*UpdateShippingInstructionByShippingInstructionReferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateShippingInstructionByShippingInstructionReference not implemented")
}
func (UnimplementedShippingInstructionServiceServer) mustEmbedUnimplementedShippingInstructionServiceServer() {
}
func (UnimplementedShippingInstructionServiceServer) testEmbeddedByValue() {}

// UnsafeShippingInstructionServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ShippingInstructionServiceServer will
// result in compilation errors.
type UnsafeShippingInstructionServiceServer interface {
	mustEmbedUnimplementedShippingInstructionServiceServer()
}

func RegisterShippingInstructionServiceServer(s grpc.ServiceRegistrar, srv ShippingInstructionServiceServer) {
	// If the following call pancis, it indicates UnimplementedShippingInstructionServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&ShippingInstructionService_ServiceDesc, srv)
}

func _ShippingInstructionService_CreateShippingInstruction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateShippingInstructionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingInstructionServiceServer).CreateShippingInstruction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShippingInstructionService_CreateShippingInstruction_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingInstructionServiceServer).CreateShippingInstruction(ctx, req.(*CreateShippingInstructionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShippingInstructionService_GetShippingInstructions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShippingInstructionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingInstructionServiceServer).GetShippingInstructions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShippingInstructionService_GetShippingInstructions_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingInstructionServiceServer).GetShippingInstructions(ctx, req.(*GetShippingInstructionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShippingInstructionService_FindById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingInstructionServiceServer).FindById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShippingInstructionService_FindById_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingInstructionServiceServer).FindById(ctx, req.(*FindByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShippingInstructionService_GetShippingInstructionByPk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShippingInstructionByPkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingInstructionServiceServer).GetShippingInstructionByPk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShippingInstructionService_GetShippingInstructionByPk_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingInstructionServiceServer).GetShippingInstructionByPk(ctx, req.(*GetShippingInstructionByPkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShippingInstructionService_FindByReference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByReferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingInstructionServiceServer).FindByReference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShippingInstructionService_FindByReference_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingInstructionServiceServer).FindByReference(ctx, req.(*FindByReferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ShippingInstructionService_UpdateShippingInstructionByShippingInstructionReference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateShippingInstructionByShippingInstructionReferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShippingInstructionServiceServer).UpdateShippingInstructionByShippingInstructionReference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ShippingInstructionService_UpdateShippingInstructionByShippingInstructionReference_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShippingInstructionServiceServer).UpdateShippingInstructionByShippingInstructionReference(ctx, req.(*UpdateShippingInstructionByShippingInstructionReferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ShippingInstructionService_ServiceDesc is the grpc.ServiceDesc for ShippingInstructionService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ShippingInstructionService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ebl.v1.ShippingInstructionService",
	HandlerType: (*ShippingInstructionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateShippingInstruction",
			Handler:    _ShippingInstructionService_CreateShippingInstruction_Handler,
		},
		{
			MethodName: "GetShippingInstructions",
			Handler:    _ShippingInstructionService_GetShippingInstructions_Handler,
		},
		{
			MethodName: "FindById",
			Handler:    _ShippingInstructionService_FindById_Handler,
		},
		{
			MethodName: "GetShippingInstructionByPk",
			Handler:    _ShippingInstructionService_GetShippingInstructionByPk_Handler,
		},
		{
			MethodName: "FindByReference",
			Handler:    _ShippingInstructionService_FindByReference_Handler,
		},
		{
			MethodName: "UpdateShippingInstructionByShippingInstructionReference",
			Handler:    _ShippingInstructionService_UpdateShippingInstructionByShippingInstructionReference_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ebl/v1/shippinginstruction.proto",
}
