// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: ebl/v1/consignmentitem.proto

package v1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/cloudfresco/sc-dcsa/internal/protogen/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateConsignmentItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DescriptionOfGoods    string                    `protobuf:"bytes,1,opt,name=description_of_goods,json=descriptionOfGoods,proto3" json:"description_of_goods,omitempty"`
	HsCode                string                    `protobuf:"bytes,2,opt,name=hs_code,json=hsCode,proto3" json:"hs_code,omitempty"`
	ShippingInstructionId uint32                    `protobuf:"varint,3,opt,name=shipping_instruction_id,json=shippingInstructionId,proto3" json:"shipping_instruction_id,omitempty"`
	Weight                float64                   `protobuf:"fixed64,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Volume                float64                   `protobuf:"fixed64,5,opt,name=volume,proto3" json:"volume,omitempty"`
	WeightUnit            string                    `protobuf:"bytes,6,opt,name=weight_unit,json=weightUnit,proto3" json:"weight_unit,omitempty"`
	VolumeUnit            string                    `protobuf:"bytes,7,opt,name=volume_unit,json=volumeUnit,proto3" json:"volume_unit,omitempty"`
	ShipmentId            uint32                    `protobuf:"varint,8,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id,omitempty"`
	UserId                string                    `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail             string                    `protobuf:"bytes,10,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId             string                    `protobuf:"bytes,11,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	CargoItems            []*CreateCargoItemRequest `protobuf:"bytes,12,rep,name=cargo_items,json=cargoItems,proto3" json:"cargo_items,omitempty"`
}

func (x *CreateConsignmentItemRequest) Reset() {
	*x = CreateConsignmentItemRequest{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConsignmentItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConsignmentItemRequest) ProtoMessage() {}

func (x *CreateConsignmentItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConsignmentItemRequest.ProtoReflect.Descriptor instead.
func (*CreateConsignmentItemRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{0}
}

func (x *CreateConsignmentItemRequest) GetDescriptionOfGoods() string {
	if x != nil {
		return x.DescriptionOfGoods
	}
	return ""
}

func (x *CreateConsignmentItemRequest) GetHsCode() string {
	if x != nil {
		return x.HsCode
	}
	return ""
}

func (x *CreateConsignmentItemRequest) GetShippingInstructionId() uint32 {
	if x != nil {
		return x.ShippingInstructionId
	}
	return 0
}

func (x *CreateConsignmentItemRequest) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CreateConsignmentItemRequest) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *CreateConsignmentItemRequest) GetWeightUnit() string {
	if x != nil {
		return x.WeightUnit
	}
	return ""
}

func (x *CreateConsignmentItemRequest) GetVolumeUnit() string {
	if x != nil {
		return x.VolumeUnit
	}
	return ""
}

func (x *CreateConsignmentItemRequest) GetShipmentId() uint32 {
	if x != nil {
		return x.ShipmentId
	}
	return 0
}

func (x *CreateConsignmentItemRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateConsignmentItemRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *CreateConsignmentItemRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CreateConsignmentItemRequest) GetCargoItems() []*CreateCargoItemRequest {
	if x != nil {
		return x.CargoItems
	}
	return nil
}

type CreateConsignmentItemsByShippingInstructionIdAndTOsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateConsignmentItemRequest *CreateConsignmentItemRequest `protobuf:"bytes,1,opt,name=create_consignment_item_request,json=createConsignmentItemRequest,proto3" json:"create_consignment_item_request,omitempty"`
}

func (x *CreateConsignmentItemsByShippingInstructionIdAndTOsRequest) Reset() {
	*x = CreateConsignmentItemsByShippingInstructionIdAndTOsRequest{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConsignmentItemsByShippingInstructionIdAndTOsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConsignmentItemsByShippingInstructionIdAndTOsRequest) ProtoMessage() {}

func (x *CreateConsignmentItemsByShippingInstructionIdAndTOsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConsignmentItemsByShippingInstructionIdAndTOsRequest.ProtoReflect.Descriptor instead.
func (*CreateConsignmentItemsByShippingInstructionIdAndTOsRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{1}
}

func (x *CreateConsignmentItemsByShippingInstructionIdAndTOsRequest) GetCreateConsignmentItemRequest() *CreateConsignmentItemRequest {
	if x != nil {
		return x.CreateConsignmentItemRequest
	}
	return nil
}

type CreateConsignmentItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsignmentItem *ConsignmentItem `protobuf:"bytes,1,opt,name=consignment_item,json=consignmentItem,proto3" json:"consignment_item,omitempty"`
}

func (x *CreateConsignmentItemResponse) Reset() {
	*x = CreateConsignmentItemResponse{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConsignmentItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConsignmentItemResponse) ProtoMessage() {}

func (x *CreateConsignmentItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConsignmentItemResponse.ProtoReflect.Descriptor instead.
func (*CreateConsignmentItemResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{2}
}

func (x *CreateConsignmentItemResponse) GetConsignmentItem() *ConsignmentItem {
	if x != nil {
		return x.ConsignmentItem
	}
	return nil
}

type CreateConsignmentItemsByShippingInstructionIdAndTOsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsignmentItem *ConsignmentItem `protobuf:"bytes,1,opt,name=consignment_item,json=consignmentItem,proto3" json:"consignment_item,omitempty"`
}

func (x *CreateConsignmentItemsByShippingInstructionIdAndTOsResponse) Reset() {
	*x = CreateConsignmentItemsByShippingInstructionIdAndTOsResponse{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConsignmentItemsByShippingInstructionIdAndTOsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConsignmentItemsByShippingInstructionIdAndTOsResponse) ProtoMessage() {}

func (x *CreateConsignmentItemsByShippingInstructionIdAndTOsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConsignmentItemsByShippingInstructionIdAndTOsResponse.ProtoReflect.Descriptor instead.
func (*CreateConsignmentItemsByShippingInstructionIdAndTOsResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{3}
}

func (x *CreateConsignmentItemsByShippingInstructionIdAndTOsResponse) GetConsignmentItem() *ConsignmentItem {
	if x != nil {
		return x.ConsignmentItem
	}
	return nil
}

type FetchConsignmentItemsTOByShippingInstructionIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingInstructionId uint32 `protobuf:"varint,1,opt,name=shipping_instruction_id,json=shippingInstructionId,proto3" json:"shipping_instruction_id,omitempty"`
	UserId                string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail             string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId             string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *FetchConsignmentItemsTOByShippingInstructionIdRequest) Reset() {
	*x = FetchConsignmentItemsTOByShippingInstructionIdRequest{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchConsignmentItemsTOByShippingInstructionIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchConsignmentItemsTOByShippingInstructionIdRequest) ProtoMessage() {}

func (x *FetchConsignmentItemsTOByShippingInstructionIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchConsignmentItemsTOByShippingInstructionIdRequest.ProtoReflect.Descriptor instead.
func (*FetchConsignmentItemsTOByShippingInstructionIdRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{4}
}

func (x *FetchConsignmentItemsTOByShippingInstructionIdRequest) GetShippingInstructionId() uint32 {
	if x != nil {
		return x.ShippingInstructionId
	}
	return 0
}

func (x *FetchConsignmentItemsTOByShippingInstructionIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FetchConsignmentItemsTOByShippingInstructionIdRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *FetchConsignmentItemsTOByShippingInstructionIdRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type FetchConsignmentItemsTOByShippingInstructionIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsignmentItem *ConsignmentItem `protobuf:"bytes,1,opt,name=consignment_item,json=consignmentItem,proto3" json:"consignment_item,omitempty"`
}

func (x *FetchConsignmentItemsTOByShippingInstructionIdResponse) Reset() {
	*x = FetchConsignmentItemsTOByShippingInstructionIdResponse{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchConsignmentItemsTOByShippingInstructionIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchConsignmentItemsTOByShippingInstructionIdResponse) ProtoMessage() {}

func (x *FetchConsignmentItemsTOByShippingInstructionIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchConsignmentItemsTOByShippingInstructionIdResponse.ProtoReflect.Descriptor instead.
func (*FetchConsignmentItemsTOByShippingInstructionIdResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{5}
}

func (x *FetchConsignmentItemsTOByShippingInstructionIdResponse) GetConsignmentItem() *ConsignmentItem {
	if x != nil {
		return x.ConsignmentItem
	}
	return nil
}

type RemoveConsignmentItemsByShippingInstructionIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingInstructionId uint32 `protobuf:"varint,1,opt,name=shipping_instruction_id,json=shippingInstructionId,proto3" json:"shipping_instruction_id,omitempty"`
	UserId                string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail             string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId             string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *RemoveConsignmentItemsByShippingInstructionIdRequest) Reset() {
	*x = RemoveConsignmentItemsByShippingInstructionIdRequest{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveConsignmentItemsByShippingInstructionIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveConsignmentItemsByShippingInstructionIdRequest) ProtoMessage() {}

func (x *RemoveConsignmentItemsByShippingInstructionIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveConsignmentItemsByShippingInstructionIdRequest.ProtoReflect.Descriptor instead.
func (*RemoveConsignmentItemsByShippingInstructionIdRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveConsignmentItemsByShippingInstructionIdRequest) GetShippingInstructionId() uint32 {
	if x != nil {
		return x.ShippingInstructionId
	}
	return 0
}

func (x *RemoveConsignmentItemsByShippingInstructionIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveConsignmentItemsByShippingInstructionIdRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *RemoveConsignmentItemsByShippingInstructionIdRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type RemoveConsignmentItemsByShippingInstructionIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveConsignmentItemsByShippingInstructionIdResponse) Reset() {
	*x = RemoveConsignmentItemsByShippingInstructionIdResponse{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveConsignmentItemsByShippingInstructionIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveConsignmentItemsByShippingInstructionIdResponse) ProtoMessage() {}

func (x *RemoveConsignmentItemsByShippingInstructionIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveConsignmentItemsByShippingInstructionIdResponse.ProtoReflect.Descriptor instead.
func (*RemoveConsignmentItemsByShippingInstructionIdResponse) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{7}
}

type CargoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CargoItemD     *CargoItemD      `protobuf:"bytes,1,opt,name=cargo_item_d,json=cargoItemD,proto3" json:"cargo_item_d,omitempty"`
	CrUpdUser      *v1.CrUpdUser    `protobuf:"bytes,2,opt,name=cr_upd_user,json=crUpdUser,proto3" json:"cr_upd_user,omitempty"`
	CrUpdTime      *v1.CrUpdTime    `protobuf:"bytes,3,opt,name=cr_upd_time,json=crUpdTime,proto3" json:"cr_upd_time,omitempty"`
	CargoLineItems []*CargoLineItem `protobuf:"bytes,4,rep,name=cargo_line_items,json=cargoLineItems,proto3" json:"cargo_line_items,omitempty"`
}

func (x *CargoItem) Reset() {
	*x = CargoItem{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CargoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CargoItem) ProtoMessage() {}

func (x *CargoItem) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CargoItem.ProtoReflect.Descriptor instead.
func (*CargoItem) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{8}
}

func (x *CargoItem) GetCargoItemD() *CargoItemD {
	if x != nil {
		return x.CargoItemD
	}
	return nil
}

func (x *CargoItem) GetCrUpdUser() *v1.CrUpdUser {
	if x != nil {
		return x.CrUpdUser
	}
	return nil
}

func (x *CargoItem) GetCrUpdTime() *v1.CrUpdTime {
	if x != nil {
		return x.CrUpdTime
	}
	return nil
}

func (x *CargoItem) GetCargoLineItems() []*CargoLineItem {
	if x != nil {
		return x.CargoLineItems
	}
	return nil
}

type CargoItemD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                           uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid4                        []byte  `protobuf:"bytes,2,opt,name=uuid4,proto3" json:"uuid4,omitempty"`
	IdS                          string  `protobuf:"bytes,3,opt,name=id_s,json=idS,proto3" json:"id_s,omitempty"`
	ConsignmentItemId            uint32  `protobuf:"varint,4,opt,name=consignment_item_id,json=consignmentItemId,proto3" json:"consignment_item_id,omitempty"`
	Weight                       float64 `protobuf:"fixed64,5,opt,name=weight,proto3" json:"weight,omitempty"`
	Volume                       float64 `protobuf:"fixed64,6,opt,name=volume,proto3" json:"volume,omitempty"`
	WeightUnit                   string  `protobuf:"bytes,7,opt,name=weight_unit,json=weightUnit,proto3" json:"weight_unit,omitempty"`
	VolumeUnit                   string  `protobuf:"bytes,8,opt,name=volume_unit,json=volumeUnit,proto3" json:"volume_unit,omitempty"`
	NumberOfPackages             uint32  `protobuf:"varint,9,opt,name=number_of_packages,json=numberOfPackages,proto3" json:"number_of_packages,omitempty"`
	PackageCode                  string  `protobuf:"bytes,10,opt,name=package_code,json=packageCode,proto3" json:"package_code,omitempty"`
	UtilizedTransportEquipmentId uint32  `protobuf:"varint,11,opt,name=utilized_transport_equipment_id,json=utilizedTransportEquipmentId,proto3" json:"utilized_transport_equipment_id,omitempty"`
	PackageNameOnBl              string  `protobuf:"bytes,12,opt,name=package_name_on_bl,json=packageNameOnBl,proto3" json:"package_name_on_bl,omitempty"`
}

func (x *CargoItemD) Reset() {
	*x = CargoItemD{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CargoItemD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CargoItemD) ProtoMessage() {}

func (x *CargoItemD) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CargoItemD.ProtoReflect.Descriptor instead.
func (*CargoItemD) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{9}
}

func (x *CargoItemD) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CargoItemD) GetUuid4() []byte {
	if x != nil {
		return x.Uuid4
	}
	return nil
}

func (x *CargoItemD) GetIdS() string {
	if x != nil {
		return x.IdS
	}
	return ""
}

func (x *CargoItemD) GetConsignmentItemId() uint32 {
	if x != nil {
		return x.ConsignmentItemId
	}
	return 0
}

func (x *CargoItemD) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CargoItemD) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *CargoItemD) GetWeightUnit() string {
	if x != nil {
		return x.WeightUnit
	}
	return ""
}

func (x *CargoItemD) GetVolumeUnit() string {
	if x != nil {
		return x.VolumeUnit
	}
	return ""
}

func (x *CargoItemD) GetNumberOfPackages() uint32 {
	if x != nil {
		return x.NumberOfPackages
	}
	return 0
}

func (x *CargoItemD) GetPackageCode() string {
	if x != nil {
		return x.PackageCode
	}
	return ""
}

func (x *CargoItemD) GetUtilizedTransportEquipmentId() uint32 {
	if x != nil {
		return x.UtilizedTransportEquipmentId
	}
	return 0
}

func (x *CargoItemD) GetPackageNameOnBl() string {
	if x != nil {
		return x.PackageNameOnBl
	}
	return ""
}

type CreateCargoItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsignmentItemId            uint32                        `protobuf:"varint,1,opt,name=consignment_item_id,json=consignmentItemId,proto3" json:"consignment_item_id,omitempty"`
	Weight                       float64                       `protobuf:"fixed64,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Volume                       float64                       `protobuf:"fixed64,3,opt,name=volume,proto3" json:"volume,omitempty"`
	WeightUnit                   string                        `protobuf:"bytes,4,opt,name=weight_unit,json=weightUnit,proto3" json:"weight_unit,omitempty"`
	VolumeUnit                   string                        `protobuf:"bytes,5,opt,name=volume_unit,json=volumeUnit,proto3" json:"volume_unit,omitempty"`
	NumberOfPackages             uint32                        `protobuf:"varint,6,opt,name=number_of_packages,json=numberOfPackages,proto3" json:"number_of_packages,omitempty"`
	PackageCode                  string                        `protobuf:"bytes,7,opt,name=package_code,json=packageCode,proto3" json:"package_code,omitempty"`
	UtilizedTransportEquipmentId uint32                        `protobuf:"varint,8,opt,name=utilized_transport_equipment_id,json=utilizedTransportEquipmentId,proto3" json:"utilized_transport_equipment_id,omitempty"`
	PackageNameOnBl              string                        `protobuf:"bytes,9,opt,name=package_name_on_bl,json=packageNameOnBl,proto3" json:"package_name_on_bl,omitempty"`
	UserId                       string                        `protobuf:"bytes,10,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail                    string                        `protobuf:"bytes,11,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId                    string                        `protobuf:"bytes,12,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	CargoLineItems               []*CreateCargoLineItemRequest `protobuf:"bytes,13,rep,name=cargo_line_items,json=cargoLineItems,proto3" json:"cargo_line_items,omitempty"`
}

func (x *CreateCargoItemRequest) Reset() {
	*x = CreateCargoItemRequest{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCargoItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCargoItemRequest) ProtoMessage() {}

func (x *CreateCargoItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCargoItemRequest.ProtoReflect.Descriptor instead.
func (*CreateCargoItemRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{10}
}

func (x *CreateCargoItemRequest) GetConsignmentItemId() uint32 {
	if x != nil {
		return x.ConsignmentItemId
	}
	return 0
}

func (x *CreateCargoItemRequest) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *CreateCargoItemRequest) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *CreateCargoItemRequest) GetWeightUnit() string {
	if x != nil {
		return x.WeightUnit
	}
	return ""
}

func (x *CreateCargoItemRequest) GetVolumeUnit() string {
	if x != nil {
		return x.VolumeUnit
	}
	return ""
}

func (x *CreateCargoItemRequest) GetNumberOfPackages() uint32 {
	if x != nil {
		return x.NumberOfPackages
	}
	return 0
}

func (x *CreateCargoItemRequest) GetPackageCode() string {
	if x != nil {
		return x.PackageCode
	}
	return ""
}

func (x *CreateCargoItemRequest) GetUtilizedTransportEquipmentId() uint32 {
	if x != nil {
		return x.UtilizedTransportEquipmentId
	}
	return 0
}

func (x *CreateCargoItemRequest) GetPackageNameOnBl() string {
	if x != nil {
		return x.PackageNameOnBl
	}
	return ""
}

func (x *CreateCargoItemRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateCargoItemRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *CreateCargoItemRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CreateCargoItemRequest) GetCargoLineItems() []*CreateCargoLineItemRequest {
	if x != nil {
		return x.CargoLineItems
	}
	return nil
}

type CargoLineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CargoLineItemD *CargoLineItemD `protobuf:"bytes,1,opt,name=cargo_line_item_d,json=cargoLineItemD,proto3" json:"cargo_line_item_d,omitempty"`
	CrUpdUser      *v1.CrUpdUser   `protobuf:"bytes,2,opt,name=cr_upd_user,json=crUpdUser,proto3" json:"cr_upd_user,omitempty"`
	CrUpdTime      *v1.CrUpdTime   `protobuf:"bytes,3,opt,name=cr_upd_time,json=crUpdTime,proto3" json:"cr_upd_time,omitempty"`
}

func (x *CargoLineItem) Reset() {
	*x = CargoLineItem{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CargoLineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CargoLineItem) ProtoMessage() {}

func (x *CargoLineItem) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CargoLineItem.ProtoReflect.Descriptor instead.
func (*CargoLineItem) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{11}
}

func (x *CargoLineItem) GetCargoLineItemD() *CargoLineItemD {
	if x != nil {
		return x.CargoLineItemD
	}
	return nil
}

func (x *CargoLineItem) GetCrUpdUser() *v1.CrUpdUser {
	if x != nil {
		return x.CrUpdUser
	}
	return nil
}

func (x *CargoLineItem) GetCrUpdTime() *v1.CrUpdTime {
	if x != nil {
		return x.CrUpdTime
	}
	return nil
}

type CargoLineItemD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid4         []byte `protobuf:"bytes,2,opt,name=uuid4,proto3" json:"uuid4,omitempty"`
	IdS           string `protobuf:"bytes,3,opt,name=id_s,json=idS,proto3" json:"id_s,omitempty"`
	CargoItemId   uint32 `protobuf:"varint,4,opt,name=cargo_item_id,json=cargoItemId,proto3" json:"cargo_item_id,omitempty"`
	ShippingMarks string `protobuf:"bytes,5,opt,name=shipping_marks,json=shippingMarks,proto3" json:"shipping_marks,omitempty"`
}

func (x *CargoLineItemD) Reset() {
	*x = CargoLineItemD{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CargoLineItemD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CargoLineItemD) ProtoMessage() {}

func (x *CargoLineItemD) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CargoLineItemD.ProtoReflect.Descriptor instead.
func (*CargoLineItemD) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{12}
}

func (x *CargoLineItemD) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CargoLineItemD) GetUuid4() []byte {
	if x != nil {
		return x.Uuid4
	}
	return nil
}

func (x *CargoLineItemD) GetIdS() string {
	if x != nil {
		return x.IdS
	}
	return ""
}

func (x *CargoLineItemD) GetCargoItemId() uint32 {
	if x != nil {
		return x.CargoItemId
	}
	return 0
}

func (x *CargoLineItemD) GetShippingMarks() string {
	if x != nil {
		return x.ShippingMarks
	}
	return ""
}

type CreateCargoLineItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CargoItemId   uint32 `protobuf:"varint,1,opt,name=cargo_item_id,json=cargoItemId,proto3" json:"cargo_item_id,omitempty"`
	ShippingMarks string `protobuf:"bytes,2,opt,name=shipping_marks,json=shippingMarks,proto3" json:"shipping_marks,omitempty"`
	UserId        string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail     string `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId     string `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CreateCargoLineItemRequest) Reset() {
	*x = CreateCargoLineItemRequest{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCargoLineItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCargoLineItemRequest) ProtoMessage() {}

func (x *CreateCargoLineItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCargoLineItemRequest.ProtoReflect.Descriptor instead.
func (*CreateCargoLineItemRequest) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{13}
}

func (x *CreateCargoLineItemRequest) GetCargoItemId() uint32 {
	if x != nil {
		return x.CargoItemId
	}
	return 0
}

func (x *CreateCargoLineItemRequest) GetShippingMarks() string {
	if x != nil {
		return x.ShippingMarks
	}
	return ""
}

func (x *CreateCargoLineItemRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateCargoLineItemRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *CreateCargoLineItemRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type ConsignmentItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsignmentItemD *ConsignmentItemD `protobuf:"bytes,1,opt,name=consignment_item_d,json=consignmentItemD,proto3" json:"consignment_item_d,omitempty"`
	CrUpdUser        *v1.CrUpdUser     `protobuf:"bytes,2,opt,name=cr_upd_user,json=crUpdUser,proto3" json:"cr_upd_user,omitempty"`
	CrUpdTime        *v1.CrUpdTime     `protobuf:"bytes,3,opt,name=cr_upd_time,json=crUpdTime,proto3" json:"cr_upd_time,omitempty"`
	CargoItems       []*CargoItem      `protobuf:"bytes,4,rep,name=cargo_items,json=cargoItems,proto3" json:"cargo_items,omitempty"`
}

func (x *ConsignmentItem) Reset() {
	*x = ConsignmentItem{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsignmentItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsignmentItem) ProtoMessage() {}

func (x *ConsignmentItem) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsignmentItem.ProtoReflect.Descriptor instead.
func (*ConsignmentItem) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{14}
}

func (x *ConsignmentItem) GetConsignmentItemD() *ConsignmentItemD {
	if x != nil {
		return x.ConsignmentItemD
	}
	return nil
}

func (x *ConsignmentItem) GetCrUpdUser() *v1.CrUpdUser {
	if x != nil {
		return x.CrUpdUser
	}
	return nil
}

func (x *ConsignmentItem) GetCrUpdTime() *v1.CrUpdTime {
	if x != nil {
		return x.CrUpdTime
	}
	return nil
}

func (x *ConsignmentItem) GetCargoItems() []*CargoItem {
	if x != nil {
		return x.CargoItems
	}
	return nil
}

type ConsignmentItemD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid4                 []byte  `protobuf:"bytes,2,opt,name=uuid4,proto3" json:"uuid4,omitempty"`
	IdS                   string  `protobuf:"bytes,3,opt,name=id_s,json=idS,proto3" json:"id_s,omitempty"`
	DescriptionOfGoods    string  `protobuf:"bytes,4,opt,name=description_of_goods,json=descriptionOfGoods,proto3" json:"description_of_goods,omitempty"`
	HsCode                string  `protobuf:"bytes,5,opt,name=hs_code,json=hsCode,proto3" json:"hs_code,omitempty"`
	ShippingInstructionId uint32  `protobuf:"varint,6,opt,name=shipping_instruction_id,json=shippingInstructionId,proto3" json:"shipping_instruction_id,omitempty"`
	Weight                float64 `protobuf:"fixed64,7,opt,name=weight,proto3" json:"weight,omitempty"`
	Volume                float64 `protobuf:"fixed64,8,opt,name=volume,proto3" json:"volume,omitempty"`
	WeightUnit            string  `protobuf:"bytes,9,opt,name=weight_unit,json=weightUnit,proto3" json:"weight_unit,omitempty"`
	VolumeUnit            string  `protobuf:"bytes,10,opt,name=volume_unit,json=volumeUnit,proto3" json:"volume_unit,omitempty"`
	ShipmentId            uint32  `protobuf:"varint,11,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id,omitempty"`
}

func (x *ConsignmentItemD) Reset() {
	*x = ConsignmentItemD{}
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsignmentItemD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsignmentItemD) ProtoMessage() {}

func (x *ConsignmentItemD) ProtoReflect() protoreflect.Message {
	mi := &file_ebl_v1_consignmentitem_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsignmentItemD.ProtoReflect.Descriptor instead.
func (*ConsignmentItemD) Descriptor() ([]byte, []int) {
	return file_ebl_v1_consignmentitem_proto_rawDescGZIP(), []int{15}
}

func (x *ConsignmentItemD) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConsignmentItemD) GetUuid4() []byte {
	if x != nil {
		return x.Uuid4
	}
	return nil
}

func (x *ConsignmentItemD) GetIdS() string {
	if x != nil {
		return x.IdS
	}
	return ""
}

func (x *ConsignmentItemD) GetDescriptionOfGoods() string {
	if x != nil {
		return x.DescriptionOfGoods
	}
	return ""
}

func (x *ConsignmentItemD) GetHsCode() string {
	if x != nil {
		return x.HsCode
	}
	return ""
}

func (x *ConsignmentItemD) GetShippingInstructionId() uint32 {
	if x != nil {
		return x.ShippingInstructionId
	}
	return 0
}

func (x *ConsignmentItemD) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ConsignmentItemD) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ConsignmentItemD) GetWeightUnit() string {
	if x != nil {
		return x.WeightUnit
	}
	return ""
}

func (x *ConsignmentItemD) GetVolumeUnit() string {
	if x != nil {
		return x.VolumeUnit
	}
	return ""
}

func (x *ConsignmentItemD) GetShipmentId() uint32 {
	if x != nil {
		return x.ShipmentId
	}
	return 0
}

var File_ebl_v1_consignmentitem_proto protoreflect.FileDescriptor

var file_ebl_v1_consignmentitem_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x62, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x04, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x14,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xba, 0x48, 0x15, 0xd0,
	0x01, 0x01, 0x72, 0x10, 0x32, 0x0e, 0x5e, 0x5c, 0x53, 0x2b, 0x28, 0x5c, 0x73, 0x2b, 0x5c, 0x53,
	0x2b, 0x29, 0x2a, 0x24, 0x52, 0x12, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x66, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x68, 0x73, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xba, 0x48, 0x0f, 0xd0, 0x01,
	0x01, 0x72, 0x0a, 0x32, 0x08, 0x5e, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x24, 0x52, 0x06, 0x68,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xd0, 0x01, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xd0,
	0x01, 0x00, 0x52, 0x0a, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x67,
	0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x63, 0x61,
	0x72, 0x67, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x3a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x1f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x1c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x63, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x81, 0x01, 0x0a, 0x3b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x63, 0x6f, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xc6, 0x01,
	0x0a, 0x35, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x4f, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x36, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43,
	0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x54,
	0x4f, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x62, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x22, 0xc5, 0x01, 0x0a, 0x34, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42,
	0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a,
	0x17, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x35,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x0c, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x62, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x52, 0x0a, 0x63,
	0x61, 0x72, 0x67, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f,
	0x75, 0x70, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x4c, 0x69,
	0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x4c, 0x69, 0x6e,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xac, 0x03, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x67, 0x6f,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x12, 0x11, 0x0a, 0x04, 0x69,
	0x64, 0x5f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x53, 0x12, 0x2e,
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x45, 0x0a, 0x1f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x75, 0x74, 0x69, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x71, 0x75,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x4f, 0x6e, 0x42, 0x6c, 0x22, 0xb4, 0x04, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x63,
	0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x42, 0x06, 0xba, 0x48, 0x03, 0xd0, 0x01, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0b, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xd0, 0x01, 0x00, 0x52, 0x0a, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x55, 0x6e, 0x69,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x1f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x75, 0x74,
	0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x6e, 0x5f, 0x62, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x4f, 0x6e, 0x42, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x4c,
	0x0a, 0x10, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x4c, 0x69, 0x6e,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x63, 0x61,
	0x72, 0x67, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xbe, 0x01, 0x0a,
	0x0d, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x41,
	0x0a, 0x11, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x62, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x52, 0x0e, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x63, 0x72,
	0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x94, 0x01,
	0x0a, 0x0e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x12, 0x11, 0x0a, 0x04, 0x69, 0x64, 0x5f, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x53, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x72,
	0x67, 0x6f, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x72, 0x6b, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x67, 0x6f, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x61, 0x72, 0x67,
	0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x18, 0xf4, 0x03, 0x52, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22,
	0xf9, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x46, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x12, 0x34, 0x0a, 0x0b, 0x63,
	0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55,
	0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72,
	0x55, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x67, 0x6f,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65,
	0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0a, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe1, 0x02, 0x0a, 0x10,
	0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x12, 0x11, 0x0a, 0x04, 0x69, 0x64, 0x5f, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x53, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x68,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x32,
	0xa0, 0x05, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x24, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x62, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0xbe, 0x01, 0x0a, 0x33, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x12, 0x42, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x65,
	0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0xaf, 0x01, 0x0a, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x54, 0x4f, 0x42, 0x79, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3d, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x54, 0x4f, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x54, 0x4f, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0xac, 0x01, 0x0a, 0x2d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x65, 0x62, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x2f, 0x73, 0x63, 0x2d,
	0x64, 0x63, 0x73, 0x61, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x62, 0x6c, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ebl_v1_consignmentitem_proto_rawDescOnce sync.Once
	file_ebl_v1_consignmentitem_proto_rawDescData = file_ebl_v1_consignmentitem_proto_rawDesc
)

func file_ebl_v1_consignmentitem_proto_rawDescGZIP() []byte {
	file_ebl_v1_consignmentitem_proto_rawDescOnce.Do(func() {
		file_ebl_v1_consignmentitem_proto_rawDescData = protoimpl.X.CompressGZIP(file_ebl_v1_consignmentitem_proto_rawDescData)
	})
	return file_ebl_v1_consignmentitem_proto_rawDescData
}

var file_ebl_v1_consignmentitem_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_ebl_v1_consignmentitem_proto_goTypes = []any{
	(*CreateConsignmentItemRequest)(nil),                                // 0: ebl.v1.CreateConsignmentItemRequest
	(*CreateConsignmentItemsByShippingInstructionIdAndTOsRequest)(nil),  // 1: ebl.v1.CreateConsignmentItemsByShippingInstructionIdAndTOsRequest
	(*CreateConsignmentItemResponse)(nil),                               // 2: ebl.v1.CreateConsignmentItemResponse
	(*CreateConsignmentItemsByShippingInstructionIdAndTOsResponse)(nil), // 3: ebl.v1.CreateConsignmentItemsByShippingInstructionIdAndTOsResponse
	(*FetchConsignmentItemsTOByShippingInstructionIdRequest)(nil),       // 4: ebl.v1.FetchConsignmentItemsTOByShippingInstructionIdRequest
	(*FetchConsignmentItemsTOByShippingInstructionIdResponse)(nil),      // 5: ebl.v1.FetchConsignmentItemsTOByShippingInstructionIdResponse
	(*RemoveConsignmentItemsByShippingInstructionIdRequest)(nil),        // 6: ebl.v1.RemoveConsignmentItemsByShippingInstructionIdRequest
	(*RemoveConsignmentItemsByShippingInstructionIdResponse)(nil),       // 7: ebl.v1.RemoveConsignmentItemsByShippingInstructionIdResponse
	(*CargoItem)(nil),                  // 8: ebl.v1.CargoItem
	(*CargoItemD)(nil),                 // 9: ebl.v1.CargoItemD
	(*CreateCargoItemRequest)(nil),     // 10: ebl.v1.CreateCargoItemRequest
	(*CargoLineItem)(nil),              // 11: ebl.v1.CargoLineItem
	(*CargoLineItemD)(nil),             // 12: ebl.v1.CargoLineItemD
	(*CreateCargoLineItemRequest)(nil), // 13: ebl.v1.CreateCargoLineItemRequest
	(*ConsignmentItem)(nil),            // 14: ebl.v1.ConsignmentItem
	(*ConsignmentItemD)(nil),           // 15: ebl.v1.ConsignmentItemD
	(*v1.CrUpdUser)(nil),               // 16: common.v1.CrUpdUser
	(*v1.CrUpdTime)(nil),               // 17: common.v1.CrUpdTime
}
var file_ebl_v1_consignmentitem_proto_depIdxs = []int32{
	10, // 0: ebl.v1.CreateConsignmentItemRequest.cargo_items:type_name -> ebl.v1.CreateCargoItemRequest
	0,  // 1: ebl.v1.CreateConsignmentItemsByShippingInstructionIdAndTOsRequest.create_consignment_item_request:type_name -> ebl.v1.CreateConsignmentItemRequest
	14, // 2: ebl.v1.CreateConsignmentItemResponse.consignment_item:type_name -> ebl.v1.ConsignmentItem
	14, // 3: ebl.v1.CreateConsignmentItemsByShippingInstructionIdAndTOsResponse.consignment_item:type_name -> ebl.v1.ConsignmentItem
	14, // 4: ebl.v1.FetchConsignmentItemsTOByShippingInstructionIdResponse.consignment_item:type_name -> ebl.v1.ConsignmentItem
	9,  // 5: ebl.v1.CargoItem.cargo_item_d:type_name -> ebl.v1.CargoItemD
	16, // 6: ebl.v1.CargoItem.cr_upd_user:type_name -> common.v1.CrUpdUser
	17, // 7: ebl.v1.CargoItem.cr_upd_time:type_name -> common.v1.CrUpdTime
	11, // 8: ebl.v1.CargoItem.cargo_line_items:type_name -> ebl.v1.CargoLineItem
	13, // 9: ebl.v1.CreateCargoItemRequest.cargo_line_items:type_name -> ebl.v1.CreateCargoLineItemRequest
	12, // 10: ebl.v1.CargoLineItem.cargo_line_item_d:type_name -> ebl.v1.CargoLineItemD
	16, // 11: ebl.v1.CargoLineItem.cr_upd_user:type_name -> common.v1.CrUpdUser
	17, // 12: ebl.v1.CargoLineItem.cr_upd_time:type_name -> common.v1.CrUpdTime
	15, // 13: ebl.v1.ConsignmentItem.consignment_item_d:type_name -> ebl.v1.ConsignmentItemD
	16, // 14: ebl.v1.ConsignmentItem.cr_upd_user:type_name -> common.v1.CrUpdUser
	17, // 15: ebl.v1.ConsignmentItem.cr_upd_time:type_name -> common.v1.CrUpdTime
	8,  // 16: ebl.v1.ConsignmentItem.cargo_items:type_name -> ebl.v1.CargoItem
	0,  // 17: ebl.v1.ConsignmentItemService.CreateConsignmentItem:input_type -> ebl.v1.CreateConsignmentItemRequest
	1,  // 18: ebl.v1.ConsignmentItemService.CreateConsignmentItemsByShippingInstructionIdAndTOs:input_type -> ebl.v1.CreateConsignmentItemsByShippingInstructionIdAndTOsRequest
	4,  // 19: ebl.v1.ConsignmentItemService.FetchConsignmentItemsTOByShippingInstructionId:input_type -> ebl.v1.FetchConsignmentItemsTOByShippingInstructionIdRequest
	6,  // 20: ebl.v1.ConsignmentItemService.RemoveConsignmentItemsByShippingInstructionId:input_type -> ebl.v1.RemoveConsignmentItemsByShippingInstructionIdRequest
	2,  // 21: ebl.v1.ConsignmentItemService.CreateConsignmentItem:output_type -> ebl.v1.CreateConsignmentItemResponse
	3,  // 22: ebl.v1.ConsignmentItemService.CreateConsignmentItemsByShippingInstructionIdAndTOs:output_type -> ebl.v1.CreateConsignmentItemsByShippingInstructionIdAndTOsResponse
	5,  // 23: ebl.v1.ConsignmentItemService.FetchConsignmentItemsTOByShippingInstructionId:output_type -> ebl.v1.FetchConsignmentItemsTOByShippingInstructionIdResponse
	7,  // 24: ebl.v1.ConsignmentItemService.RemoveConsignmentItemsByShippingInstructionId:output_type -> ebl.v1.RemoveConsignmentItemsByShippingInstructionIdResponse
	21, // [21:25] is the sub-list for method output_type
	17, // [17:21] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_ebl_v1_consignmentitem_proto_init() }
func file_ebl_v1_consignmentitem_proto_init() {
	if File_ebl_v1_consignmentitem_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ebl_v1_consignmentitem_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ebl_v1_consignmentitem_proto_goTypes,
		DependencyIndexes: file_ebl_v1_consignmentitem_proto_depIdxs,
		MessageInfos:      file_ebl_v1_consignmentitem_proto_msgTypes,
	}.Build()
	File_ebl_v1_consignmentitem_proto = out.File
	file_ebl_v1_consignmentitem_proto_rawDesc = nil
	file_ebl_v1_consignmentitem_proto_goTypes = nil
	file_ebl_v1_consignmentitem_proto_depIdxs = nil
}
