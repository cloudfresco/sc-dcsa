// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: bkg/v2/reference.proto

package v2

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/cloudfresco/sc-dcsa/internal/protogen/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateReferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceTypeCode     string `protobuf:"bytes,1,opt,name=reference_type_code,json=referenceTypeCode,proto3" json:"reference_type_code,omitempty"`
	ReferenceValue        string `protobuf:"bytes,2,opt,name=reference_value,json=referenceValue,proto3" json:"reference_value,omitempty"`
	ShipmentId            uint32 `protobuf:"varint,3,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id,omitempty"`
	ShippingInstructionId uint32 `protobuf:"varint,4,opt,name=shipping_instruction_id,json=shippingInstructionId,proto3" json:"shipping_instruction_id,omitempty"`
	BookingId             uint32 `protobuf:"varint,5,opt,name=booking_id,json=bookingId,proto3" json:"booking_id,omitempty"`
	ConsignmentItemId     uint32 `protobuf:"varint,6,opt,name=consignment_item_id,json=consignmentItemId,proto3" json:"consignment_item_id,omitempty"`
	UserId                string `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail             string `protobuf:"bytes,8,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId             string `protobuf:"bytes,9,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CreateReferenceRequest) Reset() {
	*x = CreateReferenceRequest{}
	mi := &file_bkg_v2_reference_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReferenceRequest) ProtoMessage() {}

func (x *CreateReferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReferenceRequest.ProtoReflect.Descriptor instead.
func (*CreateReferenceRequest) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{0}
}

func (x *CreateReferenceRequest) GetReferenceTypeCode() string {
	if x != nil {
		return x.ReferenceTypeCode
	}
	return ""
}

func (x *CreateReferenceRequest) GetReferenceValue() string {
	if x != nil {
		return x.ReferenceValue
	}
	return ""
}

func (x *CreateReferenceRequest) GetShipmentId() uint32 {
	if x != nil {
		return x.ShipmentId
	}
	return 0
}

func (x *CreateReferenceRequest) GetShippingInstructionId() uint32 {
	if x != nil {
		return x.ShippingInstructionId
	}
	return 0
}

func (x *CreateReferenceRequest) GetBookingId() uint32 {
	if x != nil {
		return x.BookingId
	}
	return 0
}

func (x *CreateReferenceRequest) GetConsignmentItemId() uint32 {
	if x != nil {
		return x.ConsignmentItemId
	}
	return 0
}

func (x *CreateReferenceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateReferenceRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *CreateReferenceRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type CreateReferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference1 *Reference1 `protobuf:"bytes,1,opt,name=reference1,proto3" json:"reference1,omitempty"`
}

func (x *CreateReferenceResponse) Reset() {
	*x = CreateReferenceResponse{}
	mi := &file_bkg_v2_reference_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReferenceResponse) ProtoMessage() {}

func (x *CreateReferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReferenceResponse.ProtoReflect.Descriptor instead.
func (*CreateReferenceResponse) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{1}
}

func (x *CreateReferenceResponse) GetReference1() *Reference1 {
	if x != nil {
		return x.Reference1
	}
	return nil
}

type CreateReferencesByBookingIdAndTOsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateReferenceRequest *CreateReferenceRequest `protobuf:"bytes,1,opt,name=create_reference_request,json=createReferenceRequest,proto3" json:"create_reference_request,omitempty"`
}

func (x *CreateReferencesByBookingIdAndTOsRequest) Reset() {
	*x = CreateReferencesByBookingIdAndTOsRequest{}
	mi := &file_bkg_v2_reference_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReferencesByBookingIdAndTOsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReferencesByBookingIdAndTOsRequest) ProtoMessage() {}

func (x *CreateReferencesByBookingIdAndTOsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReferencesByBookingIdAndTOsRequest.ProtoReflect.Descriptor instead.
func (*CreateReferencesByBookingIdAndTOsRequest) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{2}
}

func (x *CreateReferencesByBookingIdAndTOsRequest) GetCreateReferenceRequest() *CreateReferenceRequest {
	if x != nil {
		return x.CreateReferenceRequest
	}
	return nil
}

type CreateReferencesByBookingIdAndTOsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference1 *Reference1 `protobuf:"bytes,1,opt,name=reference1,proto3" json:"reference1,omitempty"`
}

func (x *CreateReferencesByBookingIdAndTOsResponse) Reset() {
	*x = CreateReferencesByBookingIdAndTOsResponse{}
	mi := &file_bkg_v2_reference_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReferencesByBookingIdAndTOsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReferencesByBookingIdAndTOsResponse) ProtoMessage() {}

func (x *CreateReferencesByBookingIdAndTOsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReferencesByBookingIdAndTOsResponse.ProtoReflect.Descriptor instead.
func (*CreateReferencesByBookingIdAndTOsResponse) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{3}
}

func (x *CreateReferencesByBookingIdAndTOsResponse) GetReference1() *Reference1 {
	if x != nil {
		return x.Reference1
	}
	return nil
}

type CreateReferencesByShippingInstructionIdAndTOsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateReferenceRequest *CreateReferenceRequest `protobuf:"bytes,1,opt,name=create_reference_request,json=createReferenceRequest,proto3" json:"create_reference_request,omitempty"`
}

func (x *CreateReferencesByShippingInstructionIdAndTOsRequest) Reset() {
	*x = CreateReferencesByShippingInstructionIdAndTOsRequest{}
	mi := &file_bkg_v2_reference_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReferencesByShippingInstructionIdAndTOsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReferencesByShippingInstructionIdAndTOsRequest) ProtoMessage() {}

func (x *CreateReferencesByShippingInstructionIdAndTOsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReferencesByShippingInstructionIdAndTOsRequest.ProtoReflect.Descriptor instead.
func (*CreateReferencesByShippingInstructionIdAndTOsRequest) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{4}
}

func (x *CreateReferencesByShippingInstructionIdAndTOsRequest) GetCreateReferenceRequest() *CreateReferenceRequest {
	if x != nil {
		return x.CreateReferenceRequest
	}
	return nil
}

type CreateReferencesByShippingInstructionIdAndTOsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference1 *Reference1 `protobuf:"bytes,1,opt,name=reference1,proto3" json:"reference1,omitempty"`
}

func (x *CreateReferencesByShippingInstructionIdAndTOsResponse) Reset() {
	*x = CreateReferencesByShippingInstructionIdAndTOsResponse{}
	mi := &file_bkg_v2_reference_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReferencesByShippingInstructionIdAndTOsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReferencesByShippingInstructionIdAndTOsResponse) ProtoMessage() {}

func (x *CreateReferencesByShippingInstructionIdAndTOsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReferencesByShippingInstructionIdAndTOsResponse.ProtoReflect.Descriptor instead.
func (*CreateReferencesByShippingInstructionIdAndTOsResponse) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{5}
}

func (x *CreateReferencesByShippingInstructionIdAndTOsResponse) GetReference1() *Reference1 {
	if x != nil {
		return x.Reference1
	}
	return nil
}

type CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateReferenceRequest *CreateReferenceRequest `protobuf:"bytes,1,opt,name=create_reference_request,json=createReferenceRequest,proto3" json:"create_reference_request,omitempty"`
}

func (x *CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest) Reset() {
	*x = CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest{}
	mi := &file_bkg_v2_reference_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest) ProtoMessage() {}

func (x *CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest.ProtoReflect.Descriptor instead.
func (*CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{6}
}

func (x *CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest) GetCreateReferenceRequest() *CreateReferenceRequest {
	if x != nil {
		return x.CreateReferenceRequest
	}
	return nil
}

type CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference1 *Reference1 `protobuf:"bytes,1,opt,name=reference1,proto3" json:"reference1,omitempty"`
}

func (x *CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse) Reset() {
	*x = CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse{}
	mi := &file_bkg_v2_reference_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse) ProtoMessage() {}

func (x *CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse.ProtoReflect.Descriptor instead.
func (*CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{7}
}

func (x *CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse) GetReference1() *Reference1 {
	if x != nil {
		return x.Reference1
	}
	return nil
}

type Reference1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference1D *Reference1D  `protobuf:"bytes,1,opt,name=reference1_d,json=reference1D,proto3" json:"reference1_d,omitempty"`
	CrUpdUser   *v1.CrUpdUser `protobuf:"bytes,2,opt,name=cr_upd_user,json=crUpdUser,proto3" json:"cr_upd_user,omitempty"`
	CrUpdTime   *v1.CrUpdTime `protobuf:"bytes,3,opt,name=cr_upd_time,json=crUpdTime,proto3" json:"cr_upd_time,omitempty"`
}

func (x *Reference1) Reset() {
	*x = Reference1{}
	mi := &file_bkg_v2_reference_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reference1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reference1) ProtoMessage() {}

func (x *Reference1) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reference1.ProtoReflect.Descriptor instead.
func (*Reference1) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{8}
}

func (x *Reference1) GetReference1D() *Reference1D {
	if x != nil {
		return x.Reference1D
	}
	return nil
}

func (x *Reference1) GetCrUpdUser() *v1.CrUpdUser {
	if x != nil {
		return x.CrUpdUser
	}
	return nil
}

func (x *Reference1) GetCrUpdTime() *v1.CrUpdTime {
	if x != nil {
		return x.CrUpdTime
	}
	return nil
}

type Reference1D struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ReferenceTypeCode     string `protobuf:"bytes,2,opt,name=reference_type_code,json=referenceTypeCode,proto3" json:"reference_type_code,omitempty"`
	ReferenceValue        string `protobuf:"bytes,3,opt,name=reference_value,json=referenceValue,proto3" json:"reference_value,omitempty"`
	ShipmentId            uint32 `protobuf:"varint,4,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id,omitempty"`
	ShippingInstructionId uint32 `protobuf:"varint,5,opt,name=shipping_instruction_id,json=shippingInstructionId,proto3" json:"shipping_instruction_id,omitempty"`
	BookingId             uint32 `protobuf:"varint,6,opt,name=booking_id,json=bookingId,proto3" json:"booking_id,omitempty"`
	ConsignmentItemId     uint32 `protobuf:"varint,7,opt,name=consignment_item_id,json=consignmentItemId,proto3" json:"consignment_item_id,omitempty"`
}

func (x *Reference1D) Reset() {
	*x = Reference1D{}
	mi := &file_bkg_v2_reference_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Reference1D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reference1D) ProtoMessage() {}

func (x *Reference1D) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reference1D.ProtoReflect.Descriptor instead.
func (*Reference1D) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{9}
}

func (x *Reference1D) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Reference1D) GetReferenceTypeCode() string {
	if x != nil {
		return x.ReferenceTypeCode
	}
	return ""
}

func (x *Reference1D) GetReferenceValue() string {
	if x != nil {
		return x.ReferenceValue
	}
	return ""
}

func (x *Reference1D) GetShipmentId() uint32 {
	if x != nil {
		return x.ShipmentId
	}
	return 0
}

func (x *Reference1D) GetShippingInstructionId() uint32 {
	if x != nil {
		return x.ShippingInstructionId
	}
	return 0
}

func (x *Reference1D) GetBookingId() uint32 {
	if x != nil {
		return x.BookingId
	}
	return 0
}

func (x *Reference1D) GetConsignmentItemId() uint32 {
	if x != nil {
		return x.ConsignmentItemId
	}
	return 0
}

type FindByBookingIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookingId uint32 `protobuf:"varint,1,opt,name=booking_id,json=bookingId,proto3" json:"booking_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *FindByBookingIdRequest) Reset() {
	*x = FindByBookingIdRequest{}
	mi := &file_bkg_v2_reference_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByBookingIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByBookingIdRequest) ProtoMessage() {}

func (x *FindByBookingIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByBookingIdRequest.ProtoReflect.Descriptor instead.
func (*FindByBookingIdRequest) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{10}
}

func (x *FindByBookingIdRequest) GetBookingId() uint32 {
	if x != nil {
		return x.BookingId
	}
	return 0
}

func (x *FindByBookingIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindByBookingIdRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *FindByBookingIdRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type FindByBookingIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference1 *Reference1 `protobuf:"bytes,1,opt,name=reference1,proto3" json:"reference1,omitempty"`
}

func (x *FindByBookingIdResponse) Reset() {
	*x = FindByBookingIdResponse{}
	mi := &file_bkg_v2_reference_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByBookingIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByBookingIdResponse) ProtoMessage() {}

func (x *FindByBookingIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByBookingIdResponse.ProtoReflect.Descriptor instead.
func (*FindByBookingIdResponse) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{11}
}

func (x *FindByBookingIdResponse) GetReference1() *Reference1 {
	if x != nil {
		return x.Reference1
	}
	return nil
}

type FindByShippingInstructionIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingInstructionId uint32 `protobuf:"varint,1,opt,name=shipping_instruction_id,json=shippingInstructionId,proto3" json:"shipping_instruction_id,omitempty"`
	UserId                string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail             string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId             string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *FindByShippingInstructionIdRequest) Reset() {
	*x = FindByShippingInstructionIdRequest{}
	mi := &file_bkg_v2_reference_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByShippingInstructionIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByShippingInstructionIdRequest) ProtoMessage() {}

func (x *FindByShippingInstructionIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByShippingInstructionIdRequest.ProtoReflect.Descriptor instead.
func (*FindByShippingInstructionIdRequest) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{12}
}

func (x *FindByShippingInstructionIdRequest) GetShippingInstructionId() uint32 {
	if x != nil {
		return x.ShippingInstructionId
	}
	return 0
}

func (x *FindByShippingInstructionIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindByShippingInstructionIdRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *FindByShippingInstructionIdRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type FindByShippingInstructionIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference1 *Reference1 `protobuf:"bytes,1,opt,name=reference1,proto3" json:"reference1,omitempty"`
}

func (x *FindByShippingInstructionIdResponse) Reset() {
	*x = FindByShippingInstructionIdResponse{}
	mi := &file_bkg_v2_reference_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByShippingInstructionIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByShippingInstructionIdResponse) ProtoMessage() {}

func (x *FindByShippingInstructionIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByShippingInstructionIdResponse.ProtoReflect.Descriptor instead.
func (*FindByShippingInstructionIdResponse) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{13}
}

func (x *FindByShippingInstructionIdResponse) GetReference1() *Reference1 {
	if x != nil {
		return x.Reference1
	}
	return nil
}

type FindByShipmentIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipmentId uint32 `protobuf:"varint,1,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail  string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId  string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *FindByShipmentIdRequest) Reset() {
	*x = FindByShipmentIdRequest{}
	mi := &file_bkg_v2_reference_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByShipmentIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByShipmentIdRequest) ProtoMessage() {}

func (x *FindByShipmentIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByShipmentIdRequest.ProtoReflect.Descriptor instead.
func (*FindByShipmentIdRequest) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{14}
}

func (x *FindByShipmentIdRequest) GetShipmentId() uint32 {
	if x != nil {
		return x.ShipmentId
	}
	return 0
}

func (x *FindByShipmentIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindByShipmentIdRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *FindByShipmentIdRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type FindByShipmentIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference1 *Reference1 `protobuf:"bytes,1,opt,name=reference1,proto3" json:"reference1,omitempty"`
}

func (x *FindByShipmentIdResponse) Reset() {
	*x = FindByShipmentIdResponse{}
	mi := &file_bkg_v2_reference_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByShipmentIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByShipmentIdResponse) ProtoMessage() {}

func (x *FindByShipmentIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByShipmentIdResponse.ProtoReflect.Descriptor instead.
func (*FindByShipmentIdResponse) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{15}
}

func (x *FindByShipmentIdResponse) GetReference1() *Reference1 {
	if x != nil {
		return x.Reference1
	}
	return nil
}

type FindByTransportDocumentReferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransportDocumentReference string `protobuf:"bytes,1,opt,name=transport_document_reference,json=transportDocumentReference,proto3" json:"transport_document_reference,omitempty"`
	UserId                     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail                  string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId                  string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *FindByTransportDocumentReferenceRequest) Reset() {
	*x = FindByTransportDocumentReferenceRequest{}
	mi := &file_bkg_v2_reference_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByTransportDocumentReferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByTransportDocumentReferenceRequest) ProtoMessage() {}

func (x *FindByTransportDocumentReferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByTransportDocumentReferenceRequest.ProtoReflect.Descriptor instead.
func (*FindByTransportDocumentReferenceRequest) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{16}
}

func (x *FindByTransportDocumentReferenceRequest) GetTransportDocumentReference() string {
	if x != nil {
		return x.TransportDocumentReference
	}
	return ""
}

func (x *FindByTransportDocumentReferenceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindByTransportDocumentReferenceRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *FindByTransportDocumentReferenceRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type FindByTransportDocumentReferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference1 *Reference1 `protobuf:"bytes,1,opt,name=reference1,proto3" json:"reference1,omitempty"`
}

func (x *FindByTransportDocumentReferenceResponse) Reset() {
	*x = FindByTransportDocumentReferenceResponse{}
	mi := &file_bkg_v2_reference_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByTransportDocumentReferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByTransportDocumentReferenceResponse) ProtoMessage() {}

func (x *FindByTransportDocumentReferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByTransportDocumentReferenceResponse.ProtoReflect.Descriptor instead.
func (*FindByTransportDocumentReferenceResponse) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{17}
}

func (x *FindByTransportDocumentReferenceResponse) GetReference1() *Reference1 {
	if x != nil {
		return x.Reference1
	}
	return nil
}

type FindByCarrierBookingReferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarrierBookingReference string `protobuf:"bytes,1,opt,name=carrier_booking_reference,json=carrierBookingReference,proto3" json:"carrier_booking_reference,omitempty"`
	UserId                  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail               string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId               string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *FindByCarrierBookingReferenceRequest) Reset() {
	*x = FindByCarrierBookingReferenceRequest{}
	mi := &file_bkg_v2_reference_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByCarrierBookingReferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByCarrierBookingReferenceRequest) ProtoMessage() {}

func (x *FindByCarrierBookingReferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByCarrierBookingReferenceRequest.ProtoReflect.Descriptor instead.
func (*FindByCarrierBookingReferenceRequest) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{18}
}

func (x *FindByCarrierBookingReferenceRequest) GetCarrierBookingReference() string {
	if x != nil {
		return x.CarrierBookingReference
	}
	return ""
}

func (x *FindByCarrierBookingReferenceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindByCarrierBookingReferenceRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *FindByCarrierBookingReferenceRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type FindByCarrierBookingReferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reference1 *Reference1 `protobuf:"bytes,1,opt,name=reference1,proto3" json:"reference1,omitempty"`
}

func (x *FindByCarrierBookingReferenceResponse) Reset() {
	*x = FindByCarrierBookingReferenceResponse{}
	mi := &file_bkg_v2_reference_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByCarrierBookingReferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByCarrierBookingReferenceResponse) ProtoMessage() {}

func (x *FindByCarrierBookingReferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByCarrierBookingReferenceResponse.ProtoReflect.Descriptor instead.
func (*FindByCarrierBookingReferenceResponse) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{19}
}

func (x *FindByCarrierBookingReferenceResponse) GetReference1() *Reference1 {
	if x != nil {
		return x.Reference1
	}
	return nil
}

type ResolveReferencesForBookingIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceId uint32 `protobuf:"varint,1,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	BookingId   uint32 `protobuf:"varint,2,opt,name=booking_id,json=bookingId,proto3" json:"booking_id,omitempty"`
	UserId      string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail   string `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId   string `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *ResolveReferencesForBookingIdRequest) Reset() {
	*x = ResolveReferencesForBookingIdRequest{}
	mi := &file_bkg_v2_reference_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveReferencesForBookingIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveReferencesForBookingIdRequest) ProtoMessage() {}

func (x *ResolveReferencesForBookingIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveReferencesForBookingIdRequest.ProtoReflect.Descriptor instead.
func (*ResolveReferencesForBookingIdRequest) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{20}
}

func (x *ResolveReferencesForBookingIdRequest) GetReferenceId() uint32 {
	if x != nil {
		return x.ReferenceId
	}
	return 0
}

func (x *ResolveReferencesForBookingIdRequest) GetBookingId() uint32 {
	if x != nil {
		return x.BookingId
	}
	return 0
}

func (x *ResolveReferencesForBookingIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResolveReferencesForBookingIdRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *ResolveReferencesForBookingIdRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type ResolveReferencesForBookingIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResolveReferencesForBookingIdResponse) Reset() {
	*x = ResolveReferencesForBookingIdResponse{}
	mi := &file_bkg_v2_reference_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveReferencesForBookingIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveReferencesForBookingIdResponse) ProtoMessage() {}

func (x *ResolveReferencesForBookingIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveReferencesForBookingIdResponse.ProtoReflect.Descriptor instead.
func (*ResolveReferencesForBookingIdResponse) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{21}
}

type ResolveReferencesForShippingInstructionReferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceId           uint32 `protobuf:"varint,1,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	ShippingInstructionId uint32 `protobuf:"varint,2,opt,name=shipping_instruction_id,json=shippingInstructionId,proto3" json:"shipping_instruction_id,omitempty"`
	UserId                string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail             string `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId             string `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *ResolveReferencesForShippingInstructionReferenceRequest) Reset() {
	*x = ResolveReferencesForShippingInstructionReferenceRequest{}
	mi := &file_bkg_v2_reference_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveReferencesForShippingInstructionReferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveReferencesForShippingInstructionReferenceRequest) ProtoMessage() {}

func (x *ResolveReferencesForShippingInstructionReferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveReferencesForShippingInstructionReferenceRequest.ProtoReflect.Descriptor instead.
func (*ResolveReferencesForShippingInstructionReferenceRequest) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{22}
}

func (x *ResolveReferencesForShippingInstructionReferenceRequest) GetReferenceId() uint32 {
	if x != nil {
		return x.ReferenceId
	}
	return 0
}

func (x *ResolveReferencesForShippingInstructionReferenceRequest) GetShippingInstructionId() uint32 {
	if x != nil {
		return x.ShippingInstructionId
	}
	return 0
}

func (x *ResolveReferencesForShippingInstructionReferenceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ResolveReferencesForShippingInstructionReferenceRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *ResolveReferencesForShippingInstructionReferenceRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type ResolveReferencesForShippingInstructionReferenceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResolveReferencesForShippingInstructionReferenceResponse) Reset() {
	*x = ResolveReferencesForShippingInstructionReferenceResponse{}
	mi := &file_bkg_v2_reference_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveReferencesForShippingInstructionReferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveReferencesForShippingInstructionReferenceResponse) ProtoMessage() {}

func (x *ResolveReferencesForShippingInstructionReferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveReferencesForShippingInstructionReferenceResponse.ProtoReflect.Descriptor instead.
func (*ResolveReferencesForShippingInstructionReferenceResponse) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{23}
}

type ShipmentIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShipmentIds []uint32 `protobuf:"varint,1,rep,packed,name=shipment_ids,json=shipmentIds,proto3" json:"shipment_ids,omitempty"`
}

func (x *ShipmentIds) Reset() {
	*x = ShipmentIds{}
	mi := &file_bkg_v2_reference_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShipmentIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShipmentIds) ProtoMessage() {}

func (x *ShipmentIds) ProtoReflect() protoreflect.Message {
	mi := &file_bkg_v2_reference_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShipmentIds.ProtoReflect.Descriptor instead.
func (*ShipmentIds) Descriptor() ([]byte, []int) {
	return file_bkg_v2_reference_proto_rawDescGZIP(), []int{24}
}

func (x *ShipmentIds) GetShipmentIds() []uint32 {
	if x != nil {
		return x.ShipmentIds
	}
	return nil
}

var File_bkg_v2_reference_proto protoreflect.FileDescriptor

var file_bkg_v2_reference_proto_rawDesc = []byte{
	0x0a, 0x16, 0x62, 0x6b, 0x67, 0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32,
	0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x03, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x13, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x18, 0x03, 0x52, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x0f, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x18, 0x64, 0x52, 0x0e, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6b, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x22, 0x84, 0x01, 0x0a, 0x28, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x5f, 0x0a, 0x29, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x31, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x31, 0x22, 0x90, 0x01, 0x0a, 0x34, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64,
	0x54, 0x4f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x18, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62,
	0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x16, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x6b, 0x0a, 0x35, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x41,
	0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x31, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x31, 0x22, 0xa7, 0x01, 0x0a, 0x4b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x58, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x4c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x41, 0x6e,
	0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x31, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31,
	0x22, 0xb0, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x12,
	0x36, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x5f, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x44, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x44, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70,
	0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a,
	0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x31, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a,
	0x17, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x16, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x31, 0x22, 0xb3, 0x01, 0x0a, 0x22, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x53,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x23, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x31, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x18, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6b, 0x67, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x22, 0xc2, 0x01, 0x0a, 0x27, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x1c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5e,
	0x0a, 0x28, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x31, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x22, 0xb9,
	0x01, 0x0a, 0x24, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x19, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x25, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x52, 0x0a, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x31, 0x22, 0xbf, 0x01, 0x0a, 0x24, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x25, 0x52, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x46, 0x6f,
	0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x37, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x15, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x3a, 0x0a, 0x38, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x0b,
	0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x32, 0xf3,
	0x0b, 0x0a, 0x10, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x12, 0x30, 0x2e,
	0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xac, 0x01, 0x0a, 0x2d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e,
	0x64, 0x54, 0x4f, 0x73, 0x12, 0x3c, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x53, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0xf1, 0x01, 0x0a, 0x44, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x12, 0x53, 0x2e, 0x62, 0x6b, 0x67,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x54, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x41, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x54, 0x4f, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76,
	0x32, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76,
	0x32, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x1b, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76,
	0x32, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x7c, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x2c, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2d, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0xb5, 0x01, 0x0a, 0x30, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x3f, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x46,
	0x6f, 0x72, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x46, 0x6f, 0x72, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x42,
	0x79, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x62, 0x6b,
	0x67, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x62,
	0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85,
	0x01, 0x0a, 0x20, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x2f, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x1d, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x62, 0x6b, 0x67, 0x2e, 0x76, 0x32, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x72, 0x65, 0x73, 0x63, 0x6f, 0x2f, 0x73,
	0x63, 0x2d, 0x64, 0x63, 0x73, 0x61, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x62, 0x6b, 0x67, 0x2f, 0x76, 0x32, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bkg_v2_reference_proto_rawDescOnce sync.Once
	file_bkg_v2_reference_proto_rawDescData = file_bkg_v2_reference_proto_rawDesc
)

func file_bkg_v2_reference_proto_rawDescGZIP() []byte {
	file_bkg_v2_reference_proto_rawDescOnce.Do(func() {
		file_bkg_v2_reference_proto_rawDescData = protoimpl.X.CompressGZIP(file_bkg_v2_reference_proto_rawDescData)
	})
	return file_bkg_v2_reference_proto_rawDescData
}

var file_bkg_v2_reference_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_bkg_v2_reference_proto_goTypes = []any{
	(*CreateReferenceRequest)(nil),                                                       // 0: bkg.v2.CreateReferenceRequest
	(*CreateReferenceResponse)(nil),                                                      // 1: bkg.v2.CreateReferenceResponse
	(*CreateReferencesByBookingIdAndTOsRequest)(nil),                                     // 2: bkg.v2.CreateReferencesByBookingIdAndTOsRequest
	(*CreateReferencesByBookingIdAndTOsResponse)(nil),                                    // 3: bkg.v2.CreateReferencesByBookingIdAndTOsResponse
	(*CreateReferencesByShippingInstructionIdAndTOsRequest)(nil),                         // 4: bkg.v2.CreateReferencesByShippingInstructionIdAndTOsRequest
	(*CreateReferencesByShippingInstructionIdAndTOsResponse)(nil),                        // 5: bkg.v2.CreateReferencesByShippingInstructionIdAndTOsResponse
	(*CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest)(nil),  // 6: bkg.v2.CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest
	(*CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse)(nil), // 7: bkg.v2.CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse
	(*Reference1)(nil),                                               // 8: bkg.v2.Reference1
	(*Reference1D)(nil),                                              // 9: bkg.v2.Reference1D
	(*FindByBookingIdRequest)(nil),                                   // 10: bkg.v2.FindByBookingIdRequest
	(*FindByBookingIdResponse)(nil),                                  // 11: bkg.v2.FindByBookingIdResponse
	(*FindByShippingInstructionIdRequest)(nil),                       // 12: bkg.v2.FindByShippingInstructionIdRequest
	(*FindByShippingInstructionIdResponse)(nil),                      // 13: bkg.v2.FindByShippingInstructionIdResponse
	(*FindByShipmentIdRequest)(nil),                                  // 14: bkg.v2.FindByShipmentIdRequest
	(*FindByShipmentIdResponse)(nil),                                 // 15: bkg.v2.FindByShipmentIdResponse
	(*FindByTransportDocumentReferenceRequest)(nil),                  // 16: bkg.v2.FindByTransportDocumentReferenceRequest
	(*FindByTransportDocumentReferenceResponse)(nil),                 // 17: bkg.v2.FindByTransportDocumentReferenceResponse
	(*FindByCarrierBookingReferenceRequest)(nil),                     // 18: bkg.v2.FindByCarrierBookingReferenceRequest
	(*FindByCarrierBookingReferenceResponse)(nil),                    // 19: bkg.v2.FindByCarrierBookingReferenceResponse
	(*ResolveReferencesForBookingIdRequest)(nil),                     // 20: bkg.v2.ResolveReferencesForBookingIdRequest
	(*ResolveReferencesForBookingIdResponse)(nil),                    // 21: bkg.v2.ResolveReferencesForBookingIdResponse
	(*ResolveReferencesForShippingInstructionReferenceRequest)(nil),  // 22: bkg.v2.ResolveReferencesForShippingInstructionReferenceRequest
	(*ResolveReferencesForShippingInstructionReferenceResponse)(nil), // 23: bkg.v2.ResolveReferencesForShippingInstructionReferenceResponse
	(*ShipmentIds)(nil),                                              // 24: bkg.v2.ShipmentIds
	(*v1.CrUpdUser)(nil),                                             // 25: common.v1.CrUpdUser
	(*v1.CrUpdTime)(nil),                                             // 26: common.v1.CrUpdTime
}
var file_bkg_v2_reference_proto_depIdxs = []int32{
	8,  // 0: bkg.v2.CreateReferenceResponse.reference1:type_name -> bkg.v2.Reference1
	0,  // 1: bkg.v2.CreateReferencesByBookingIdAndTOsRequest.create_reference_request:type_name -> bkg.v2.CreateReferenceRequest
	8,  // 2: bkg.v2.CreateReferencesByBookingIdAndTOsResponse.reference1:type_name -> bkg.v2.Reference1
	0,  // 3: bkg.v2.CreateReferencesByShippingInstructionIdAndTOsRequest.create_reference_request:type_name -> bkg.v2.CreateReferenceRequest
	8,  // 4: bkg.v2.CreateReferencesByShippingInstructionIdAndTOsResponse.reference1:type_name -> bkg.v2.Reference1
	0,  // 5: bkg.v2.CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest.create_reference_request:type_name -> bkg.v2.CreateReferenceRequest
	8,  // 6: bkg.v2.CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse.reference1:type_name -> bkg.v2.Reference1
	9,  // 7: bkg.v2.Reference1.reference1_d:type_name -> bkg.v2.Reference1D
	25, // 8: bkg.v2.Reference1.cr_upd_user:type_name -> common.v1.CrUpdUser
	26, // 9: bkg.v2.Reference1.cr_upd_time:type_name -> common.v1.CrUpdTime
	8,  // 10: bkg.v2.FindByBookingIdResponse.reference1:type_name -> bkg.v2.Reference1
	8,  // 11: bkg.v2.FindByShippingInstructionIdResponse.reference1:type_name -> bkg.v2.Reference1
	8,  // 12: bkg.v2.FindByShipmentIdResponse.reference1:type_name -> bkg.v2.Reference1
	8,  // 13: bkg.v2.FindByTransportDocumentReferenceResponse.reference1:type_name -> bkg.v2.Reference1
	8,  // 14: bkg.v2.FindByCarrierBookingReferenceResponse.reference1:type_name -> bkg.v2.Reference1
	0,  // 15: bkg.v2.ReferenceService.CreateReference:input_type -> bkg.v2.CreateReferenceRequest
	2,  // 16: bkg.v2.ReferenceService.CreateReferencesByBookingIdAndTOs:input_type -> bkg.v2.CreateReferencesByBookingIdAndTOsRequest
	4,  // 17: bkg.v2.ReferenceService.CreateReferencesByShippingInstructionIdAndTOs:input_type -> bkg.v2.CreateReferencesByShippingInstructionIdAndTOsRequest
	6,  // 18: bkg.v2.ReferenceService.CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOs:input_type -> bkg.v2.CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsRequest
	10, // 19: bkg.v2.ReferenceService.FindByBookingId:input_type -> bkg.v2.FindByBookingIdRequest
	12, // 20: bkg.v2.ReferenceService.FindByShippingInstructionId:input_type -> bkg.v2.FindByShippingInstructionIdRequest
	20, // 21: bkg.v2.ReferenceService.ResolveReferencesForBookingId:input_type -> bkg.v2.ResolveReferencesForBookingIdRequest
	22, // 22: bkg.v2.ReferenceService.ResolveReferencesForShippingInstructionReference:input_type -> bkg.v2.ResolveReferencesForShippingInstructionReferenceRequest
	14, // 23: bkg.v2.ReferenceService.FindByShipmentId:input_type -> bkg.v2.FindByShipmentIdRequest
	16, // 24: bkg.v2.ReferenceService.FindByTransportDocumentReference:input_type -> bkg.v2.FindByTransportDocumentReferenceRequest
	18, // 25: bkg.v2.ReferenceService.FindByCarrierBookingReference:input_type -> bkg.v2.FindByCarrierBookingReferenceRequest
	1,  // 26: bkg.v2.ReferenceService.CreateReference:output_type -> bkg.v2.CreateReferenceResponse
	3,  // 27: bkg.v2.ReferenceService.CreateReferencesByBookingIdAndTOs:output_type -> bkg.v2.CreateReferencesByBookingIdAndTOsResponse
	5,  // 28: bkg.v2.ReferenceService.CreateReferencesByShippingInstructionIdAndTOs:output_type -> bkg.v2.CreateReferencesByShippingInstructionIdAndTOsResponse
	7,  // 29: bkg.v2.ReferenceService.CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOs:output_type -> bkg.v2.CreateReferencesByShippingInstructionReferenceAndConsignmentIdAndTOsResponse
	11, // 30: bkg.v2.ReferenceService.FindByBookingId:output_type -> bkg.v2.FindByBookingIdResponse
	13, // 31: bkg.v2.ReferenceService.FindByShippingInstructionId:output_type -> bkg.v2.FindByShippingInstructionIdResponse
	21, // 32: bkg.v2.ReferenceService.ResolveReferencesForBookingId:output_type -> bkg.v2.ResolveReferencesForBookingIdResponse
	23, // 33: bkg.v2.ReferenceService.ResolveReferencesForShippingInstructionReference:output_type -> bkg.v2.ResolveReferencesForShippingInstructionReferenceResponse
	15, // 34: bkg.v2.ReferenceService.FindByShipmentId:output_type -> bkg.v2.FindByShipmentIdResponse
	17, // 35: bkg.v2.ReferenceService.FindByTransportDocumentReference:output_type -> bkg.v2.FindByTransportDocumentReferenceResponse
	19, // 36: bkg.v2.ReferenceService.FindByCarrierBookingReference:output_type -> bkg.v2.FindByCarrierBookingReferenceResponse
	26, // [26:37] is the sub-list for method output_type
	15, // [15:26] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_bkg_v2_reference_proto_init() }
func file_bkg_v2_reference_proto_init() {
	if File_bkg_v2_reference_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bkg_v2_reference_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bkg_v2_reference_proto_goTypes,
		DependencyIndexes: file_bkg_v2_reference_proto_depIdxs,
		MessageInfos:      file_bkg_v2_reference_proto_msgTypes,
	}.Build()
	File_bkg_v2_reference_proto = out.File
	file_bkg_v2_reference_proto_rawDesc = nil
	file_bkg_v2_reference_proto_goTypes = nil
	file_bkg_v2_reference_proto_depIdxs = nil
}
