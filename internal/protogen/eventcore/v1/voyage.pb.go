// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: eventcore/v1/voyage.proto

package v1

import (
	v1 "github.com/cloudfresco/sc-dcsa/internal/protogen/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateVoyageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarrierVoyageNumber      string `protobuf:"bytes,1,opt,name=carrier_voyage_number,json=carrierVoyageNumber,proto3" json:"carrier_voyage_number,omitempty"`
	UniversalVoyageReference string `protobuf:"bytes,2,opt,name=universal_voyage_reference,json=universalVoyageReference,proto3" json:"universal_voyage_reference,omitempty"`
	ServiceId                uint32 `protobuf:"varint,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	UserId                   string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail                string `protobuf:"bytes,5,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId                string `protobuf:"bytes,6,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CreateVoyageRequest) Reset() {
	*x = CreateVoyageRequest{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVoyageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVoyageRequest) ProtoMessage() {}

func (x *CreateVoyageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVoyageRequest.ProtoReflect.Descriptor instead.
func (*CreateVoyageRequest) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVoyageRequest) GetCarrierVoyageNumber() string {
	if x != nil {
		return x.CarrierVoyageNumber
	}
	return ""
}

func (x *CreateVoyageRequest) GetUniversalVoyageReference() string {
	if x != nil {
		return x.UniversalVoyageReference
	}
	return ""
}

func (x *CreateVoyageRequest) GetServiceId() uint32 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *CreateVoyageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateVoyageRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *CreateVoyageRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type CreateVoyageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voyage *Voyage `protobuf:"bytes,1,opt,name=voyage,proto3" json:"voyage,omitempty"`
}

func (x *CreateVoyageResponse) Reset() {
	*x = CreateVoyageResponse{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVoyageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVoyageResponse) ProtoMessage() {}

func (x *CreateVoyageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVoyageResponse.ProtoReflect.Descriptor instead.
func (*CreateVoyageResponse) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVoyageResponse) GetVoyage() *Voyage {
	if x != nil {
		return x.Voyage
	}
	return nil
}

type GetVoyagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      string `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	UserEmail  string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId  string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *GetVoyagesRequest) Reset() {
	*x = GetVoyagesRequest{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVoyagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVoyagesRequest) ProtoMessage() {}

func (x *GetVoyagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVoyagesRequest.ProtoReflect.Descriptor instead.
func (*GetVoyagesRequest) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{2}
}

func (x *GetVoyagesRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetVoyagesRequest) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *GetVoyagesRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *GetVoyagesRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type GetVoyagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voyages    []*Voyage `protobuf:"bytes,1,rep,name=voyages,proto3" json:"voyages,omitempty"`
	NextCursor string    `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *GetVoyagesResponse) Reset() {
	*x = GetVoyagesResponse{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVoyagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVoyagesResponse) ProtoMessage() {}

func (x *GetVoyagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVoyagesResponse.ProtoReflect.Descriptor instead.
func (*GetVoyagesResponse) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{3}
}

func (x *GetVoyagesResponse) GetVoyages() []*Voyage {
	if x != nil {
		return x.Voyages
	}
	return nil
}

func (x *GetVoyagesResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type FindCarrierVoyageNumbersByTransportDocumentRefResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voyage *Voyage `protobuf:"bytes,1,opt,name=voyage,proto3" json:"voyage,omitempty"`
}

func (x *FindCarrierVoyageNumbersByTransportDocumentRefResponse) Reset() {
	*x = FindCarrierVoyageNumbersByTransportDocumentRefResponse{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCarrierVoyageNumbersByTransportDocumentRefResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCarrierVoyageNumbersByTransportDocumentRefResponse) ProtoMessage() {}

func (x *FindCarrierVoyageNumbersByTransportDocumentRefResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCarrierVoyageNumbersByTransportDocumentRefResponse.ProtoReflect.Descriptor instead.
func (*FindCarrierVoyageNumbersByTransportDocumentRefResponse) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{4}
}

func (x *FindCarrierVoyageNumbersByTransportDocumentRefResponse) GetVoyage() *Voyage {
	if x != nil {
		return x.Voyage
	}
	return nil
}

type FindCarrierVoyageNumbersByTransportDocumentRefRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransportDocumentRef string `protobuf:"bytes,1,opt,name=transport_document_ref,json=transportDocumentRef,proto3" json:"transport_document_ref,omitempty"`
	UserId               string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail            string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId            string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *FindCarrierVoyageNumbersByTransportDocumentRefRequest) Reset() {
	*x = FindCarrierVoyageNumbersByTransportDocumentRefRequest{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCarrierVoyageNumbersByTransportDocumentRefRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCarrierVoyageNumbersByTransportDocumentRefRequest) ProtoMessage() {}

func (x *FindCarrierVoyageNumbersByTransportDocumentRefRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCarrierVoyageNumbersByTransportDocumentRefRequest.ProtoReflect.Descriptor instead.
func (*FindCarrierVoyageNumbersByTransportDocumentRefRequest) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{5}
}

func (x *FindCarrierVoyageNumbersByTransportDocumentRefRequest) GetTransportDocumentRef() string {
	if x != nil {
		return x.TransportDocumentRef
	}
	return ""
}

func (x *FindCarrierVoyageNumbersByTransportDocumentRefRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindCarrierVoyageNumbersByTransportDocumentRefRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *FindCarrierVoyageNumbersByTransportDocumentRefRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type FindByCarrierVoyageNumberAndServiceIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarrierVoyageNumber string `protobuf:"bytes,1,opt,name=carrier_voyage_number,json=carrierVoyageNumber,proto3" json:"carrier_voyage_number,omitempty"`
	ServiceId           uint32 `protobuf:"varint,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	UserId              string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail           string `protobuf:"bytes,4,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId           string `protobuf:"bytes,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *FindByCarrierVoyageNumberAndServiceIdRequest) Reset() {
	*x = FindByCarrierVoyageNumberAndServiceIdRequest{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByCarrierVoyageNumberAndServiceIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByCarrierVoyageNumberAndServiceIdRequest) ProtoMessage() {}

func (x *FindByCarrierVoyageNumberAndServiceIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByCarrierVoyageNumberAndServiceIdRequest.ProtoReflect.Descriptor instead.
func (*FindByCarrierVoyageNumberAndServiceIdRequest) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{6}
}

func (x *FindByCarrierVoyageNumberAndServiceIdRequest) GetCarrierVoyageNumber() string {
	if x != nil {
		return x.CarrierVoyageNumber
	}
	return ""
}

func (x *FindByCarrierVoyageNumberAndServiceIdRequest) GetServiceId() uint32 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

func (x *FindByCarrierVoyageNumberAndServiceIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindByCarrierVoyageNumberAndServiceIdRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *FindByCarrierVoyageNumberAndServiceIdRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type FindByCarrierVoyageNumberAndServiceIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voyage *Voyage `protobuf:"bytes,1,opt,name=voyage,proto3" json:"voyage,omitempty"`
}

func (x *FindByCarrierVoyageNumberAndServiceIdResponse) Reset() {
	*x = FindByCarrierVoyageNumberAndServiceIdResponse{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByCarrierVoyageNumberAndServiceIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByCarrierVoyageNumberAndServiceIdResponse) ProtoMessage() {}

func (x *FindByCarrierVoyageNumberAndServiceIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByCarrierVoyageNumberAndServiceIdResponse.ProtoReflect.Descriptor instead.
func (*FindByCarrierVoyageNumberAndServiceIdResponse) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{7}
}

func (x *FindByCarrierVoyageNumberAndServiceIdResponse) GetVoyage() *Voyage {
	if x != nil {
		return x.Voyage
	}
	return nil
}

type FindByCarrierVoyageNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarrierVoyageNumber string `protobuf:"bytes,1,opt,name=carrier_voyage_number,json=carrierVoyageNumber,proto3" json:"carrier_voyage_number,omitempty"`
	UserId              string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail           string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId           string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *FindByCarrierVoyageNumberRequest) Reset() {
	*x = FindByCarrierVoyageNumberRequest{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByCarrierVoyageNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByCarrierVoyageNumberRequest) ProtoMessage() {}

func (x *FindByCarrierVoyageNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByCarrierVoyageNumberRequest.ProtoReflect.Descriptor instead.
func (*FindByCarrierVoyageNumberRequest) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{8}
}

func (x *FindByCarrierVoyageNumberRequest) GetCarrierVoyageNumber() string {
	if x != nil {
		return x.CarrierVoyageNumber
	}
	return ""
}

func (x *FindByCarrierVoyageNumberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindByCarrierVoyageNumberRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *FindByCarrierVoyageNumberRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type FindByCarrierVoyageNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voyage *Voyage `protobuf:"bytes,1,opt,name=voyage,proto3" json:"voyage,omitempty"`
}

func (x *FindByCarrierVoyageNumberResponse) Reset() {
	*x = FindByCarrierVoyageNumberResponse{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByCarrierVoyageNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByCarrierVoyageNumberResponse) ProtoMessage() {}

func (x *FindByCarrierVoyageNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByCarrierVoyageNumberResponse.ProtoReflect.Descriptor instead.
func (*FindByCarrierVoyageNumberResponse) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{9}
}

func (x *FindByCarrierVoyageNumberResponse) GetVoyage() *Voyage {
	if x != nil {
		return x.Voyage
	}
	return nil
}

type FindCarrierVoyageNumbersByCarrierBookingRefRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarrierBookingRef string `protobuf:"bytes,1,opt,name=carrier_booking_ref,json=carrierBookingRef,proto3" json:"carrier_booking_ref,omitempty"`
	UserId            string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail         string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId         string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *FindCarrierVoyageNumbersByCarrierBookingRefRequest) Reset() {
	*x = FindCarrierVoyageNumbersByCarrierBookingRefRequest{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCarrierVoyageNumbersByCarrierBookingRefRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCarrierVoyageNumbersByCarrierBookingRefRequest) ProtoMessage() {}

func (x *FindCarrierVoyageNumbersByCarrierBookingRefRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCarrierVoyageNumbersByCarrierBookingRefRequest.ProtoReflect.Descriptor instead.
func (*FindCarrierVoyageNumbersByCarrierBookingRefRequest) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{10}
}

func (x *FindCarrierVoyageNumbersByCarrierBookingRefRequest) GetCarrierBookingRef() string {
	if x != nil {
		return x.CarrierBookingRef
	}
	return ""
}

func (x *FindCarrierVoyageNumbersByCarrierBookingRefRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindCarrierVoyageNumbersByCarrierBookingRefRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *FindCarrierVoyageNumbersByCarrierBookingRefRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type FindCarrierVoyageNumbersByCarrierBookingRefResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voyage *Voyage `protobuf:"bytes,1,opt,name=voyage,proto3" json:"voyage,omitempty"`
}

func (x *FindCarrierVoyageNumbersByCarrierBookingRefResponse) Reset() {
	*x = FindCarrierVoyageNumbersByCarrierBookingRefResponse{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCarrierVoyageNumbersByCarrierBookingRefResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCarrierVoyageNumbersByCarrierBookingRefResponse) ProtoMessage() {}

func (x *FindCarrierVoyageNumbersByCarrierBookingRefResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCarrierVoyageNumbersByCarrierBookingRefResponse.ProtoReflect.Descriptor instead.
func (*FindCarrierVoyageNumbersByCarrierBookingRefResponse) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{11}
}

func (x *FindCarrierVoyageNumbersByCarrierBookingRefResponse) GetVoyage() *Voyage {
	if x != nil {
		return x.Voyage
	}
	return nil
}

type FindCarrierVoyageNumbersByShippingInstructionIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voyage *Voyage `protobuf:"bytes,1,opt,name=voyage,proto3" json:"voyage,omitempty"`
}

func (x *FindCarrierVoyageNumbersByShippingInstructionIdResponse) Reset() {
	*x = FindCarrierVoyageNumbersByShippingInstructionIdResponse{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCarrierVoyageNumbersByShippingInstructionIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCarrierVoyageNumbersByShippingInstructionIdResponse) ProtoMessage() {}

func (x *FindCarrierVoyageNumbersByShippingInstructionIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCarrierVoyageNumbersByShippingInstructionIdResponse.ProtoReflect.Descriptor instead.
func (*FindCarrierVoyageNumbersByShippingInstructionIdResponse) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{12}
}

func (x *FindCarrierVoyageNumbersByShippingInstructionIdResponse) GetVoyage() *Voyage {
	if x != nil {
		return x.Voyage
	}
	return nil
}

type FindCarrierVoyageNumbersByShippingInstructionIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShippingInstructionId uint32 `protobuf:"varint,1,opt,name=shipping_instruction_id,json=shippingInstructionId,proto3" json:"shipping_instruction_id,omitempty"`
	UserId                string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail             string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId             string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *FindCarrierVoyageNumbersByShippingInstructionIdRequest) Reset() {
	*x = FindCarrierVoyageNumbersByShippingInstructionIdRequest{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindCarrierVoyageNumbersByShippingInstructionIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCarrierVoyageNumbersByShippingInstructionIdRequest) ProtoMessage() {}

func (x *FindCarrierVoyageNumbersByShippingInstructionIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCarrierVoyageNumbersByShippingInstructionIdRequest.ProtoReflect.Descriptor instead.
func (*FindCarrierVoyageNumbersByShippingInstructionIdRequest) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{13}
}

func (x *FindCarrierVoyageNumbersByShippingInstructionIdRequest) GetShippingInstructionId() uint32 {
	if x != nil {
		return x.ShippingInstructionId
	}
	return 0
}

func (x *FindCarrierVoyageNumbersByShippingInstructionIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FindCarrierVoyageNumbersByShippingInstructionIdRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *FindCarrierVoyageNumbersByShippingInstructionIdRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type Voyage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoyageD   *VoyageD      `protobuf:"bytes,1,opt,name=voyage_d,json=voyageD,proto3" json:"voyage_d,omitempty"`
	CrUpdUser *v1.CrUpdUser `protobuf:"bytes,2,opt,name=cr_upd_user,json=crUpdUser,proto3" json:"cr_upd_user,omitempty"`
	CrUpdTime *v1.CrUpdTime `protobuf:"bytes,3,opt,name=cr_upd_time,json=crUpdTime,proto3" json:"cr_upd_time,omitempty"`
}

func (x *Voyage) Reset() {
	*x = Voyage{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Voyage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voyage) ProtoMessage() {}

func (x *Voyage) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voyage.ProtoReflect.Descriptor instead.
func (*Voyage) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{14}
}

func (x *Voyage) GetVoyageD() *VoyageD {
	if x != nil {
		return x.VoyageD
	}
	return nil
}

func (x *Voyage) GetCrUpdUser() *v1.CrUpdUser {
	if x != nil {
		return x.CrUpdUser
	}
	return nil
}

func (x *Voyage) GetCrUpdTime() *v1.CrUpdTime {
	if x != nil {
		return x.CrUpdTime
	}
	return nil
}

type VoyageD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid4                    []byte `protobuf:"bytes,2,opt,name=uuid4,proto3" json:"uuid4,omitempty"`
	IdS                      string `protobuf:"bytes,3,opt,name=id_s,json=idS,proto3" json:"id_s,omitempty"`
	CarrierVoyageNumber      string `protobuf:"bytes,4,opt,name=carrier_voyage_number,json=carrierVoyageNumber,proto3" json:"carrier_voyage_number,omitempty"`
	UniversalVoyageReference string `protobuf:"bytes,5,opt,name=universal_voyage_reference,json=universalVoyageReference,proto3" json:"universal_voyage_reference,omitempty"`
	ServiceId                uint32 `protobuf:"varint,6,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *VoyageD) Reset() {
	*x = VoyageD{}
	mi := &file_eventcore_v1_voyage_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoyageD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoyageD) ProtoMessage() {}

func (x *VoyageD) ProtoReflect() protoreflect.Message {
	mi := &file_eventcore_v1_voyage_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoyageD.ProtoReflect.Descriptor instead.
func (*VoyageD) Descriptor() ([]byte, []int) {
	return file_eventcore_v1_voyage_proto_rawDescGZIP(), []int{15}
}

func (x *VoyageD) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VoyageD) GetUuid4() []byte {
	if x != nil {
		return x.Uuid4
	}
	return nil
}

func (x *VoyageD) GetIdS() string {
	if x != nil {
		return x.IdS
	}
	return ""
}

func (x *VoyageD) GetCarrierVoyageNumber() string {
	if x != nil {
		return x.CarrierVoyageNumber
	}
	return ""
}

func (x *VoyageD) GetUniversalVoyageReference() string {
	if x != nil {
		return x.UniversalVoyageReference
	}
	return ""
}

func (x *VoyageD) GetServiceId() uint32 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

var File_eventcore_v1_voyage_proto protoreflect.FileDescriptor

var file_eventcore_v1_voyage_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76,
	0x6f, 0x79, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xfd, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x79, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x5f, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3c, 0x0a,
	0x1a, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x79, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x56, 0x6f, 0x79, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x22, 0x44, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x79, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x6f, 0x79,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x52,
	0x06, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56,
	0x6f, 0x79, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x65, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x76, 0x6f, 0x79, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x52,
	0x07, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x66, 0x0a, 0x36, 0x46, 0x69, 0x6e,
	0x64, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x79, 0x61, 0x67,
	0x65, 0x22, 0xc4, 0x01, 0x0a, 0x35, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x79,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x66, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xd8, 0x01, 0x0a, 0x2c, 0x46, 0x69, 0x6e,
	0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x5f, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x2d, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x79, 0x61,
	0x67, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x20, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x5f, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56,
	0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x51, 0x0a, 0x21, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x6f, 0x79, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x52, 0x06, 0x76,
	0x6f, 0x79, 0x61, 0x67, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x32, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13,
	0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x66, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x33, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42,
	0x79, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x6f,
	0x79, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65,
	0x52, 0x06, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x22, 0x67, 0x0a, 0x37, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x79, 0x61, 0x67,
	0x65, 0x22, 0xc7, 0x01, 0x0a, 0x36, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x79,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x17,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x06,
	0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65,
	0x5f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x44, 0x52,
	0x07, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x44, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75,
	0x70, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x55, 0x70, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x34,
	0x0a, 0x0b, 0x63, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x55, 0x70, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x55, 0x70, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x07, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x44,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x12, 0x11, 0x0a, 0x04, 0x69, 0x64, 0x5f, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x53, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x5f, 0x76, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65,
	0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3c, 0x0a,
	0x1a, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x79, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x56, 0x6f, 0x79, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x32, 0x8c, 0x08, 0x0a, 0x0d, 0x56,
	0x6f, 0x79, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x1f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0xbb, 0x01, 0x0a, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x43, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x72, 0x69,
	0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42,
	0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0xa0, 0x01, 0x0a, 0x25, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x41, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3a, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x42, 0x79, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61,
	0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x2e, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56,
	0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x42, 0x79, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56,
	0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0xb2, 0x01, 0x0a, 0x2b, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x72,
	0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x42, 0x79, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x66, 0x12, 0x40, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f,
	0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x43, 0x61, 0x72,
	0x72, 0x69, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x66, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72,
	0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x43,
	0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x66,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xbe, 0x01, 0x0a, 0x2f, 0x46, 0x69, 0x6e,
	0x64, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x45, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x56, 0x6f, 0x79,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x42, 0x79, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x72, 0x65,
	0x73, 0x63, 0x6f, 0x2f, 0x73, 0x63, 0x2d, 0x64, 0x63, 0x73, 0x61, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_eventcore_v1_voyage_proto_rawDescOnce sync.Once
	file_eventcore_v1_voyage_proto_rawDescData = file_eventcore_v1_voyage_proto_rawDesc
)

func file_eventcore_v1_voyage_proto_rawDescGZIP() []byte {
	file_eventcore_v1_voyage_proto_rawDescOnce.Do(func() {
		file_eventcore_v1_voyage_proto_rawDescData = protoimpl.X.CompressGZIP(file_eventcore_v1_voyage_proto_rawDescData)
	})
	return file_eventcore_v1_voyage_proto_rawDescData
}

var file_eventcore_v1_voyage_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_eventcore_v1_voyage_proto_goTypes = []any{
	(*CreateVoyageRequest)(nil),                                     // 0: eventcore.v1.CreateVoyageRequest
	(*CreateVoyageResponse)(nil),                                    // 1: eventcore.v1.CreateVoyageResponse
	(*GetVoyagesRequest)(nil),                                       // 2: eventcore.v1.GetVoyagesRequest
	(*GetVoyagesResponse)(nil),                                      // 3: eventcore.v1.GetVoyagesResponse
	(*FindCarrierVoyageNumbersByTransportDocumentRefResponse)(nil),  // 4: eventcore.v1.FindCarrierVoyageNumbersByTransportDocumentRefResponse
	(*FindCarrierVoyageNumbersByTransportDocumentRefRequest)(nil),   // 5: eventcore.v1.FindCarrierVoyageNumbersByTransportDocumentRefRequest
	(*FindByCarrierVoyageNumberAndServiceIdRequest)(nil),            // 6: eventcore.v1.FindByCarrierVoyageNumberAndServiceIdRequest
	(*FindByCarrierVoyageNumberAndServiceIdResponse)(nil),           // 7: eventcore.v1.FindByCarrierVoyageNumberAndServiceIdResponse
	(*FindByCarrierVoyageNumberRequest)(nil),                        // 8: eventcore.v1.FindByCarrierVoyageNumberRequest
	(*FindByCarrierVoyageNumberResponse)(nil),                       // 9: eventcore.v1.FindByCarrierVoyageNumberResponse
	(*FindCarrierVoyageNumbersByCarrierBookingRefRequest)(nil),      // 10: eventcore.v1.FindCarrierVoyageNumbersByCarrierBookingRefRequest
	(*FindCarrierVoyageNumbersByCarrierBookingRefResponse)(nil),     // 11: eventcore.v1.FindCarrierVoyageNumbersByCarrierBookingRefResponse
	(*FindCarrierVoyageNumbersByShippingInstructionIdResponse)(nil), // 12: eventcore.v1.FindCarrierVoyageNumbersByShippingInstructionIdResponse
	(*FindCarrierVoyageNumbersByShippingInstructionIdRequest)(nil),  // 13: eventcore.v1.FindCarrierVoyageNumbersByShippingInstructionIdRequest
	(*Voyage)(nil),       // 14: eventcore.v1.Voyage
	(*VoyageD)(nil),      // 15: eventcore.v1.VoyageD
	(*v1.CrUpdUser)(nil), // 16: common.v1.CrUpdUser
	(*v1.CrUpdTime)(nil), // 17: common.v1.CrUpdTime
}
var file_eventcore_v1_voyage_proto_depIdxs = []int32{
	14, // 0: eventcore.v1.CreateVoyageResponse.voyage:type_name -> eventcore.v1.Voyage
	14, // 1: eventcore.v1.GetVoyagesResponse.voyages:type_name -> eventcore.v1.Voyage
	14, // 2: eventcore.v1.FindCarrierVoyageNumbersByTransportDocumentRefResponse.voyage:type_name -> eventcore.v1.Voyage
	14, // 3: eventcore.v1.FindByCarrierVoyageNumberAndServiceIdResponse.voyage:type_name -> eventcore.v1.Voyage
	14, // 4: eventcore.v1.FindByCarrierVoyageNumberResponse.voyage:type_name -> eventcore.v1.Voyage
	14, // 5: eventcore.v1.FindCarrierVoyageNumbersByCarrierBookingRefResponse.voyage:type_name -> eventcore.v1.Voyage
	14, // 6: eventcore.v1.FindCarrierVoyageNumbersByShippingInstructionIdResponse.voyage:type_name -> eventcore.v1.Voyage
	15, // 7: eventcore.v1.Voyage.voyage_d:type_name -> eventcore.v1.VoyageD
	16, // 8: eventcore.v1.Voyage.cr_upd_user:type_name -> common.v1.CrUpdUser
	17, // 9: eventcore.v1.Voyage.cr_upd_time:type_name -> common.v1.CrUpdTime
	0,  // 10: eventcore.v1.VoyageService.CreateVoyage:input_type -> eventcore.v1.CreateVoyageRequest
	2,  // 11: eventcore.v1.VoyageService.GetVoyages:input_type -> eventcore.v1.GetVoyagesRequest
	5,  // 12: eventcore.v1.VoyageService.FindCarrierVoyageNumbersByTransportDocumentRef:input_type -> eventcore.v1.FindCarrierVoyageNumbersByTransportDocumentRefRequest
	6,  // 13: eventcore.v1.VoyageService.FindByCarrierVoyageNumberAndServiceId:input_type -> eventcore.v1.FindByCarrierVoyageNumberAndServiceIdRequest
	8,  // 14: eventcore.v1.VoyageService.FindByCarrierVoyageNumber:input_type -> eventcore.v1.FindByCarrierVoyageNumberRequest
	10, // 15: eventcore.v1.VoyageService.FindCarrierVoyageNumbersByCarrierBookingRef:input_type -> eventcore.v1.FindCarrierVoyageNumbersByCarrierBookingRefRequest
	13, // 16: eventcore.v1.VoyageService.FindCarrierVoyageNumbersByShippingInstructionId:input_type -> eventcore.v1.FindCarrierVoyageNumbersByShippingInstructionIdRequest
	1,  // 17: eventcore.v1.VoyageService.CreateVoyage:output_type -> eventcore.v1.CreateVoyageResponse
	3,  // 18: eventcore.v1.VoyageService.GetVoyages:output_type -> eventcore.v1.GetVoyagesResponse
	4,  // 19: eventcore.v1.VoyageService.FindCarrierVoyageNumbersByTransportDocumentRef:output_type -> eventcore.v1.FindCarrierVoyageNumbersByTransportDocumentRefResponse
	7,  // 20: eventcore.v1.VoyageService.FindByCarrierVoyageNumberAndServiceId:output_type -> eventcore.v1.FindByCarrierVoyageNumberAndServiceIdResponse
	9,  // 21: eventcore.v1.VoyageService.FindByCarrierVoyageNumber:output_type -> eventcore.v1.FindByCarrierVoyageNumberResponse
	11, // 22: eventcore.v1.VoyageService.FindCarrierVoyageNumbersByCarrierBookingRef:output_type -> eventcore.v1.FindCarrierVoyageNumbersByCarrierBookingRefResponse
	12, // 23: eventcore.v1.VoyageService.FindCarrierVoyageNumbersByShippingInstructionId:output_type -> eventcore.v1.FindCarrierVoyageNumbersByShippingInstructionIdResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_eventcore_v1_voyage_proto_init() }
func file_eventcore_v1_voyage_proto_init() {
	if File_eventcore_v1_voyage_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eventcore_v1_voyage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_eventcore_v1_voyage_proto_goTypes,
		DependencyIndexes: file_eventcore_v1_voyage_proto_depIdxs,
		MessageInfos:      file_eventcore_v1_voyage_proto_msgTypes,
	}.Build()
	File_eventcore_v1_voyage_proto = out.File
	file_eventcore_v1_voyage_proto_rawDesc = nil
	file_eventcore_v1_voyage_proto_goTypes = nil
	file_eventcore_v1_voyage_proto_depIdxs = nil
}
