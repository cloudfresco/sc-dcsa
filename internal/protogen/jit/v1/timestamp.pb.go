// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: jit/v1/timestamp.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTimestampResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp1 *Timestamp `protobuf:"bytes,1,opt,name=timestamp1,proto3" json:"timestamp1,omitempty"`
}

func (x *CreateTimestampResponse) Reset() {
	*x = CreateTimestampResponse{}
	mi := &file_jit_v1_timestamp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTimestampResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTimestampResponse) ProtoMessage() {}

func (x *CreateTimestampResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jit_v1_timestamp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTimestampResponse.ProtoReflect.Descriptor instead.
func (*CreateTimestampResponse) Descriptor() ([]byte, []int) {
	return file_jit_v1_timestamp_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTimestampResponse) GetTimestamp1() *Timestamp {
	if x != nil {
		return x.Timestamp1
	}
	return nil
}

type Timestamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimestampD *TimestampD `protobuf:"bytes,1,opt,name=timestamp_d,json=timestampD,proto3" json:"timestamp_d,omitempty"`
	TimestampT *TimestampT `protobuf:"bytes,2,opt,name=timestamp_t,json=timestampT,proto3" json:"timestamp_t,omitempty"`
}

func (x *Timestamp) Reset() {
	*x = Timestamp{}
	mi := &file_jit_v1_timestamp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamp) ProtoMessage() {}

func (x *Timestamp) ProtoReflect() protoreflect.Message {
	mi := &file_jit_v1_timestamp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamp.ProtoReflect.Descriptor instead.
func (*Timestamp) Descriptor() ([]byte, []int) {
	return file_jit_v1_timestamp_proto_rawDescGZIP(), []int{1}
}

func (x *Timestamp) GetTimestampD() *TimestampD {
	if x != nil {
		return x.TimestampD
	}
	return nil
}

func (x *Timestamp) GetTimestampT() *TimestampT {
	if x != nil {
		return x.TimestampT
	}
	return nil
}

type TimestampD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid4               []byte `protobuf:"bytes,2,opt,name=uuid4,proto3" json:"uuid4,omitempty"`
	IdS                 string `protobuf:"bytes,3,opt,name=id_s,json=idS,proto3" json:"id_s,omitempty"`
	EventTypeCode       string `protobuf:"bytes,4,opt,name=event_type_code,json=eventTypeCode,proto3" json:"event_type_code,omitempty"`
	EventClassifierCode string `protobuf:"bytes,5,opt,name=event_classifier_code,json=eventClassifierCode,proto3" json:"event_classifier_code,omitempty"`
	DelayReasonCode     string `protobuf:"bytes,6,opt,name=delay_reason_code,json=delayReasonCode,proto3" json:"delay_reason_code,omitempty"`
	ChangeRemark        string `protobuf:"bytes,7,opt,name=change_remark,json=changeRemark,proto3" json:"change_remark,omitempty"`
}

func (x *TimestampD) Reset() {
	*x = TimestampD{}
	mi := &file_jit_v1_timestamp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimestampD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampD) ProtoMessage() {}

func (x *TimestampD) ProtoReflect() protoreflect.Message {
	mi := &file_jit_v1_timestamp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimestampD.ProtoReflect.Descriptor instead.
func (*TimestampD) Descriptor() ([]byte, []int) {
	return file_jit_v1_timestamp_proto_rawDescGZIP(), []int{2}
}

func (x *TimestampD) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TimestampD) GetUuid4() []byte {
	if x != nil {
		return x.Uuid4
	}
	return nil
}

func (x *TimestampD) GetIdS() string {
	if x != nil {
		return x.IdS
	}
	return ""
}

func (x *TimestampD) GetEventTypeCode() string {
	if x != nil {
		return x.EventTypeCode
	}
	return ""
}

func (x *TimestampD) GetEventClassifierCode() string {
	if x != nil {
		return x.EventClassifierCode
	}
	return ""
}

func (x *TimestampD) GetDelayReasonCode() string {
	if x != nil {
		return x.DelayReasonCode
	}
	return ""
}

func (x *TimestampD) GetChangeRemark() string {
	if x != nil {
		return x.ChangeRemark
	}
	return ""
}

type TimestampT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventDateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=event_date_time,json=eventDateTime,proto3" json:"event_date_time,omitempty"`
}

func (x *TimestampT) Reset() {
	*x = TimestampT{}
	mi := &file_jit_v1_timestamp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimestampT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampT) ProtoMessage() {}

func (x *TimestampT) ProtoReflect() protoreflect.Message {
	mi := &file_jit_v1_timestamp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimestampT.ProtoReflect.Descriptor instead.
func (*TimestampT) Descriptor() ([]byte, []int) {
	return file_jit_v1_timestamp_proto_rawDescGZIP(), []int{3}
}

func (x *TimestampT) GetEventDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EventDateTime
	}
	return nil
}

type CreateTimestampRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTypeCode       string `protobuf:"bytes,1,opt,name=event_type_code,json=eventTypeCode,proto3" json:"event_type_code,omitempty"`
	EventClassifierCode string `protobuf:"bytes,2,opt,name=event_classifier_code,json=eventClassifierCode,proto3" json:"event_classifier_code,omitempty"`
	EventDateTime       string `protobuf:"bytes,3,opt,name=event_date_time,json=eventDateTime,proto3" json:"event_date_time,omitempty"`
	DelayReasonCode     string `protobuf:"bytes,4,opt,name=delay_reason_code,json=delayReasonCode,proto3" json:"delay_reason_code,omitempty"`
	ChangeRemark        string `protobuf:"bytes,5,opt,name=change_remark,json=changeRemark,proto3" json:"change_remark,omitempty"`
	UserId              string `protobuf:"bytes,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserEmail           string `protobuf:"bytes,7,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId           string `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *CreateTimestampRequest) Reset() {
	*x = CreateTimestampRequest{}
	mi := &file_jit_v1_timestamp_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTimestampRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTimestampRequest) ProtoMessage() {}

func (x *CreateTimestampRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jit_v1_timestamp_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTimestampRequest.ProtoReflect.Descriptor instead.
func (*CreateTimestampRequest) Descriptor() ([]byte, []int) {
	return file_jit_v1_timestamp_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTimestampRequest) GetEventTypeCode() string {
	if x != nil {
		return x.EventTypeCode
	}
	return ""
}

func (x *CreateTimestampRequest) GetEventClassifierCode() string {
	if x != nil {
		return x.EventClassifierCode
	}
	return ""
}

func (x *CreateTimestampRequest) GetEventDateTime() string {
	if x != nil {
		return x.EventDateTime
	}
	return ""
}

func (x *CreateTimestampRequest) GetDelayReasonCode() string {
	if x != nil {
		return x.DelayReasonCode
	}
	return ""
}

func (x *CreateTimestampRequest) GetChangeRemark() string {
	if x != nil {
		return x.ChangeRemark
	}
	return ""
}

func (x *CreateTimestampRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateTimestampRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *CreateTimestampRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type GetTimestampsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamps []*Timestamp `protobuf:"bytes,1,rep,name=timestamps,proto3" json:"timestamps,omitempty"`
	NextCursor string       `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *GetTimestampsResponse) Reset() {
	*x = GetTimestampsResponse{}
	mi := &file_jit_v1_timestamp_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimestampsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimestampsResponse) ProtoMessage() {}

func (x *GetTimestampsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_jit_v1_timestamp_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimestampsResponse.ProtoReflect.Descriptor instead.
func (*GetTimestampsResponse) Descriptor() ([]byte, []int) {
	return file_jit_v1_timestamp_proto_rawDescGZIP(), []int{5}
}

func (x *GetTimestampsResponse) GetTimestamps() []*Timestamp {
	if x != nil {
		return x.Timestamps
	}
	return nil
}

func (x *GetTimestampsResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type GetTimestampsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      string `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	UserEmail  string `protobuf:"bytes,3,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	RequestId  string `protobuf:"bytes,4,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *GetTimestampsRequest) Reset() {
	*x = GetTimestampsRequest{}
	mi := &file_jit_v1_timestamp_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTimestampsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTimestampsRequest) ProtoMessage() {}

func (x *GetTimestampsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jit_v1_timestamp_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTimestampsRequest.ProtoReflect.Descriptor instead.
func (*GetTimestampsRequest) Descriptor() ([]byte, []int) {
	return file_jit_v1_timestamp_proto_rawDescGZIP(), []int{6}
}

func (x *GetTimestampsRequest) GetLimit() string {
	if x != nil {
		return x.Limit
	}
	return ""
}

func (x *GetTimestampsRequest) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *GetTimestampsRequest) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *GetTimestampsRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

var File_jit_v1_timestamp_proto protoreflect.FileDescriptor

var file_jit_v1_timestamp_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6a, 0x69, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6a, 0x69, 0x74, 0x2e, 0x76, 0x31,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x4c, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6a, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x31, 0x22,
	0x75, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x33, 0x0a, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x44, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x44, 0x12, 0x33, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x22, 0xf2, 0x01, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x75, 0x75, 0x69, 0x64, 0x34, 0x12, 0x11, 0x0a, 0x04, 0x69,
	0x64, 0x5f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x53, 0x12, 0x26,
	0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x50, 0x0a, 0x0a, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x54, 0x12, 0x42, 0x0a, 0x0f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xc4, 0x02,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x69, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x22, 0x8b, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x32,
	0xb4, 0x01, 0x0a, 0x10, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x2e, 0x6a, 0x69, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6a, 0x69, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x1c, 0x2e, 0x6a, 0x69, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6a, 0x69, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x66, 0x72, 0x65, 0x73, 0x63, 0x6f,
	0x2f, 0x73, 0x63, 0x2d, 0x64, 0x63, 0x73, 0x61, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x6a, 0x69, 0x74, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jit_v1_timestamp_proto_rawDescOnce sync.Once
	file_jit_v1_timestamp_proto_rawDescData = file_jit_v1_timestamp_proto_rawDesc
)

func file_jit_v1_timestamp_proto_rawDescGZIP() []byte {
	file_jit_v1_timestamp_proto_rawDescOnce.Do(func() {
		file_jit_v1_timestamp_proto_rawDescData = protoimpl.X.CompressGZIP(file_jit_v1_timestamp_proto_rawDescData)
	})
	return file_jit_v1_timestamp_proto_rawDescData
}

var file_jit_v1_timestamp_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_jit_v1_timestamp_proto_goTypes = []any{
	(*CreateTimestampResponse)(nil), // 0: jit.v1.CreateTimestampResponse
	(*Timestamp)(nil),               // 1: jit.v1.Timestamp
	(*TimestampD)(nil),              // 2: jit.v1.TimestampD
	(*TimestampT)(nil),              // 3: jit.v1.TimestampT
	(*CreateTimestampRequest)(nil),  // 4: jit.v1.CreateTimestampRequest
	(*GetTimestampsResponse)(nil),   // 5: jit.v1.GetTimestampsResponse
	(*GetTimestampsRequest)(nil),    // 6: jit.v1.GetTimestampsRequest
	(*timestamppb.Timestamp)(nil),   // 7: google.protobuf.Timestamp
}
var file_jit_v1_timestamp_proto_depIdxs = []int32{
	1, // 0: jit.v1.CreateTimestampResponse.timestamp1:type_name -> jit.v1.Timestamp
	2, // 1: jit.v1.Timestamp.timestamp_d:type_name -> jit.v1.TimestampD
	3, // 2: jit.v1.Timestamp.timestamp_t:type_name -> jit.v1.TimestampT
	7, // 3: jit.v1.TimestampT.event_date_time:type_name -> google.protobuf.Timestamp
	1, // 4: jit.v1.GetTimestampsResponse.timestamps:type_name -> jit.v1.Timestamp
	4, // 5: jit.v1.TimestampService.CreateTimestamp:input_type -> jit.v1.CreateTimestampRequest
	6, // 6: jit.v1.TimestampService.GetTimestamps:input_type -> jit.v1.GetTimestampsRequest
	0, // 7: jit.v1.TimestampService.CreateTimestamp:output_type -> jit.v1.CreateTimestampResponse
	5, // 8: jit.v1.TimestampService.GetTimestamps:output_type -> jit.v1.GetTimestampsResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_jit_v1_timestamp_proto_init() }
func file_jit_v1_timestamp_proto_init() {
	if File_jit_v1_timestamp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jit_v1_timestamp_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jit_v1_timestamp_proto_goTypes,
		DependencyIndexes: file_jit_v1_timestamp_proto_depIdxs,
		MessageInfos:      file_jit_v1_timestamp_proto_msgTypes,
	}.Build()
	File_jit_v1_timestamp_proto = out.File
	file_jit_v1_timestamp_proto_rawDesc = nil
	file_jit_v1_timestamp_proto_goTypes = nil
	file_jit_v1_timestamp_proto_depIdxs = nil
}
